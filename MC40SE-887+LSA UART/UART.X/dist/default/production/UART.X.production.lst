

Microchip Technology PIC LITE Macro Assembler V1.11 build 48931 
                                                                                               Thu Jan 10 15:37:26 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 48931
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 48931"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 46 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    43  0000                     INDF equ 00h ;# 
    44                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    45  0001                     TMR0 equ 01h ;# 
    46                           # 58 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    47  0002                     PCL equ 02h ;# 
    48                           # 64 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    49  0003                     STATUS equ 03h ;# 
    50                           # 151 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    51  0004                     FSR equ 04h ;# 
    52                           # 157 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    53  0005                     PORTA equ 05h ;# 
    54                           # 218 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    55  0006                     PORTB equ 06h ;# 
    56                           # 279 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    57  0007                     PORTC equ 07h ;# 
    58                           # 340 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    59  0008                     PORTD equ 08h ;# 
    60                           # 401 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    61  0009                     PORTE equ 09h ;# 
    62                           # 438 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    63  000A                     PCLATH equ 0Ah ;# 
    64                           # 444 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    65  000B                     INTCON equ 0Bh ;# 
    66                           # 521 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    67  000C                     PIR1 equ 0Ch ;# 
    68                           # 576 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    69  000D                     PIR2 equ 0Dh ;# 
    70                           # 632 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    71  000E                     TMR1 equ 0Eh ;# 
    72                           # 638 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    73  000E                     TMR1L equ 0Eh ;# 
    74                           # 644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    75  000F                     TMR1H equ 0Fh ;# 
    76                           # 650 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    77  0010                     T1CON equ 010h ;# 
    78                           # 743 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    79  0011                     TMR2 equ 011h ;# 
    80                           # 749 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    81  0012                     T2CON equ 012h ;# 
    82                           # 819 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    83  0013                     SSPBUF equ 013h ;# 
    84                           # 825 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    85  0014                     SSPCON equ 014h ;# 
    86                           # 894 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    87  0015                     CCPR1 equ 015h ;# 
    88                           # 900 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    89  0015                     CCPR1L equ 015h ;# 
    90                           # 906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    91  0016                     CCPR1H equ 016h ;# 
    92                           # 912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    93  0017                     CCP1CON equ 017h ;# 
    94                           # 1008 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    95  0018                     RCSTA equ 018h ;# 
    96                           # 1102 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    97  0019                     TXREG equ 019h ;# 
    98                           # 1108 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    99  001A                     RCREG equ 01Ah ;# 
   100                           # 1114 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   101  001B                     CCPR2 equ 01Bh ;# 
   102                           # 1120 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   103  001B                     CCPR2L equ 01Bh ;# 
   104                           # 1126 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   105  001C                     CCPR2H equ 01Ch ;# 
   106                           # 1132 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   107  001D                     CCP2CON equ 01Dh ;# 
   108                           # 1201 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   109  001E                     ADRESH equ 01Eh ;# 
   110                           # 1207 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   111  001F                     ADCON0 equ 01Fh ;# 
   112                           # 1307 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   113  0081                     OPTION_REG equ 081h ;# 
   114                           # 1376 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   115  0085                     TRISA equ 085h ;# 
   116                           # 1437 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   117  0086                     TRISB equ 086h ;# 
   118                           # 1498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   119  0087                     TRISC equ 087h ;# 
   120                           # 1559 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   121  0088                     TRISD equ 088h ;# 
   122                           # 1620 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   123  0089                     TRISE equ 089h ;# 
   124                           # 1657 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   125  008C                     PIE1 equ 08Ch ;# 
   126                           # 1712 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   127  008D                     PIE2 equ 08Dh ;# 
   128                           # 1768 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   129  008E                     PCON equ 08Eh ;# 
   130                           # 1814 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   131  008F                     OSCCON equ 08Fh ;# 
   132                           # 1878 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   133  0090                     OSCTUNE equ 090h ;# 
   134                           # 1929 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   135  0091                     SSPCON2 equ 091h ;# 
   136                           # 1990 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   137  0092                     PR2 equ 092h ;# 
   138                           # 1996 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   139  0093                     SSPADD equ 093h ;# 
   140                           # 2002 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   141  0093                     SSPMSK equ 093h ;# 
   142                           # 2007 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   143  0093                     MSK equ 093h ;# 
   144                           # 2123 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   145  0094                     SSPSTAT equ 094h ;# 
   146                           # 2291 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   147  0095                     WPUB equ 095h ;# 
   148                           # 2360 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   149  0096                     IOCB equ 096h ;# 
   150                           # 2429 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   151  0097                     VRCON equ 097h ;# 
   152                           # 2498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   153  0098                     TXSTA equ 098h ;# 
   154                           # 2583 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   155  0099                     SPBRG equ 099h ;# 
   156                           # 2644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   157  009A                     SPBRGH equ 09Ah ;# 
   158                           # 2713 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   159  009B                     PWM1CON equ 09Bh ;# 
   160                           # 2782 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   161  009C                     ECCPAS equ 09Ch ;# 
   162                           # 2863 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   163  009D                     PSTRCON equ 09Dh ;# 
   164                           # 2906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   165  009E                     ADRESL equ 09Eh ;# 
   166                           # 2912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   167  009F                     ADCON1 equ 09Fh ;# 
   168                           # 2945 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   169  0105                     WDTCON equ 0105h ;# 
   170                           # 2997 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   171  0107                     CM1CON0 equ 0107h ;# 
   172                           # 3061 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   173  0108                     CM2CON0 equ 0108h ;# 
   174                           # 3125 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   175  0109                     CM2CON1 equ 0109h ;# 
   176                           # 3175 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   177  010C                     EEDATA equ 010Ch ;# 
   178                           # 3180 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   179  010C                     EEDAT equ 010Ch ;# 
   180                           # 3186 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   181  010D                     EEADR equ 010Dh ;# 
   182                           # 3192 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   183  010E                     EEDATH equ 010Eh ;# 
   184                           # 3198 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   185  010F                     EEADRH equ 010Fh ;# 
   186                           # 3204 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   187  0185                     SRCON equ 0185h ;# 
   188                           # 3260 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   189  0187                     BAUDCTL equ 0187h ;# 
   190                           # 3311 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   191  0188                     ANSEL equ 0188h ;# 
   192                           # 3372 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   193  0189                     ANSELH equ 0189h ;# 
   194                           # 3421 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   195  018C                     EECON1 equ 018Ch ;# 
   196                           # 3465 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   197  018D                     EECON2 equ 018Dh ;# 
   198                           # 46 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   199  0000                     INDF equ 00h ;# 
   200                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   201  0001                     TMR0 equ 01h ;# 
   202                           # 58 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   203  0002                     PCL equ 02h ;# 
   204                           # 64 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   205  0003                     STATUS equ 03h ;# 
   206                           # 151 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   207  0004                     FSR equ 04h ;# 
   208                           # 157 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   209  0005                     PORTA equ 05h ;# 
   210                           # 218 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   211  0006                     PORTB equ 06h ;# 
   212                           # 279 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   213  0007                     PORTC equ 07h ;# 
   214                           # 340 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   215  0008                     PORTD equ 08h ;# 
   216                           # 401 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   217  0009                     PORTE equ 09h ;# 
   218                           # 438 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   219  000A                     PCLATH equ 0Ah ;# 
   220                           # 444 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   221  000B                     INTCON equ 0Bh ;# 
   222                           # 521 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   223  000C                     PIR1 equ 0Ch ;# 
   224                           # 576 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   225  000D                     PIR2 equ 0Dh ;# 
   226                           # 632 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   227  000E                     TMR1 equ 0Eh ;# 
   228                           # 638 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   229  000E                     TMR1L equ 0Eh ;# 
   230                           # 644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   231  000F                     TMR1H equ 0Fh ;# 
   232                           # 650 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   233  0010                     T1CON equ 010h ;# 
   234                           # 743 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   235  0011                     TMR2 equ 011h ;# 
   236                           # 749 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   237  0012                     T2CON equ 012h ;# 
   238                           # 819 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   239  0013                     SSPBUF equ 013h ;# 
   240                           # 825 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   241  0014                     SSPCON equ 014h ;# 
   242                           # 894 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   243  0015                     CCPR1 equ 015h ;# 
   244                           # 900 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   245  0015                     CCPR1L equ 015h ;# 
   246                           # 906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   247  0016                     CCPR1H equ 016h ;# 
   248                           # 912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   249  0017                     CCP1CON equ 017h ;# 
   250                           # 1008 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   251  0018                     RCSTA equ 018h ;# 
   252                           # 1102 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   253  0019                     TXREG equ 019h ;# 
   254                           # 1108 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   255  001A                     RCREG equ 01Ah ;# 
   256                           # 1114 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   257  001B                     CCPR2 equ 01Bh ;# 
   258                           # 1120 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   259  001B                     CCPR2L equ 01Bh ;# 
   260                           # 1126 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   261  001C                     CCPR2H equ 01Ch ;# 
   262                           # 1132 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   263  001D                     CCP2CON equ 01Dh ;# 
   264                           # 1201 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   265  001E                     ADRESH equ 01Eh ;# 
   266                           # 1207 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   267  001F                     ADCON0 equ 01Fh ;# 
   268                           # 1307 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   269  0081                     OPTION_REG equ 081h ;# 
   270                           # 1376 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   271  0085                     TRISA equ 085h ;# 
   272                           # 1437 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   273  0086                     TRISB equ 086h ;# 
   274                           # 1498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   275  0087                     TRISC equ 087h ;# 
   276                           # 1559 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   277  0088                     TRISD equ 088h ;# 
   278                           # 1620 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   279  0089                     TRISE equ 089h ;# 
   280                           # 1657 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   281  008C                     PIE1 equ 08Ch ;# 
   282                           # 1712 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   283  008D                     PIE2 equ 08Dh ;# 
   284                           # 1768 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   285  008E                     PCON equ 08Eh ;# 
   286                           # 1814 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   287  008F                     OSCCON equ 08Fh ;# 
   288                           # 1878 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   289  0090                     OSCTUNE equ 090h ;# 
   290                           # 1929 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   291  0091                     SSPCON2 equ 091h ;# 
   292                           # 1990 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   293  0092                     PR2 equ 092h ;# 
   294                           # 1996 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   295  0093                     SSPADD equ 093h ;# 
   296                           # 2002 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   297  0093                     SSPMSK equ 093h ;# 
   298                           # 2007 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   299  0093                     MSK equ 093h ;# 
   300                           # 2123 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   301  0094                     SSPSTAT equ 094h ;# 
   302                           # 2291 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   303  0095                     WPUB equ 095h ;# 
   304                           # 2360 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   305  0096                     IOCB equ 096h ;# 
   306                           # 2429 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   307  0097                     VRCON equ 097h ;# 
   308                           # 2498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   309  0098                     TXSTA equ 098h ;# 
   310                           # 2583 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   311  0099                     SPBRG equ 099h ;# 
   312                           # 2644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   313  009A                     SPBRGH equ 09Ah ;# 
   314                           # 2713 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   315  009B                     PWM1CON equ 09Bh ;# 
   316                           # 2782 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   317  009C                     ECCPAS equ 09Ch ;# 
   318                           # 2863 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   319  009D                     PSTRCON equ 09Dh ;# 
   320                           # 2906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   321  009E                     ADRESL equ 09Eh ;# 
   322                           # 2912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   323  009F                     ADCON1 equ 09Fh ;# 
   324                           # 2945 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   325  0105                     WDTCON equ 0105h ;# 
   326                           # 2997 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   327  0107                     CM1CON0 equ 0107h ;# 
   328                           # 3061 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   329  0108                     CM2CON0 equ 0108h ;# 
   330                           # 3125 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   331  0109                     CM2CON1 equ 0109h ;# 
   332                           # 3175 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   333  010C                     EEDATA equ 010Ch ;# 
   334                           # 3180 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   335  010C                     EEDAT equ 010Ch ;# 
   336                           # 3186 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   337  010D                     EEADR equ 010Dh ;# 
   338                           # 3192 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   339  010E                     EEDATH equ 010Eh ;# 
   340                           # 3198 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   341  010F                     EEADRH equ 010Fh ;# 
   342                           # 3204 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   343  0185                     SRCON equ 0185h ;# 
   344                           # 3260 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   345  0187                     BAUDCTL equ 0187h ;# 
   346                           # 3311 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   347  0188                     ANSEL equ 0188h ;# 
   348                           # 3372 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   349  0189                     ANSELH equ 0189h ;# 
   350                           # 3421 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   351  018C                     EECON1 equ 018Ch ;# 
   352                           # 3465 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   353  018D                     EECON2 equ 018Dh ;# 
   354                           # 46 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   355  0000                     INDF equ 00h ;# 
   356                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   357  0001                     TMR0 equ 01h ;# 
   358                           # 58 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   359  0002                     PCL equ 02h ;# 
   360                           # 64 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   361  0003                     STATUS equ 03h ;# 
   362                           # 151 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   363  0004                     FSR equ 04h ;# 
   364                           # 157 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   365  0005                     PORTA equ 05h ;# 
   366                           # 218 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   367  0006                     PORTB equ 06h ;# 
   368                           # 279 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   369  0007                     PORTC equ 07h ;# 
   370                           # 340 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   371  0008                     PORTD equ 08h ;# 
   372                           # 401 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   373  0009                     PORTE equ 09h ;# 
   374                           # 438 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   375  000A                     PCLATH equ 0Ah ;# 
   376                           # 444 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   377  000B                     INTCON equ 0Bh ;# 
   378                           # 521 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   379  000C                     PIR1 equ 0Ch ;# 
   380                           # 576 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   381  000D                     PIR2 equ 0Dh ;# 
   382                           # 632 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   383  000E                     TMR1 equ 0Eh ;# 
   384                           # 638 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   385  000E                     TMR1L equ 0Eh ;# 
   386                           # 644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   387  000F                     TMR1H equ 0Fh ;# 
   388                           # 650 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   389  0010                     T1CON equ 010h ;# 
   390                           # 743 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   391  0011                     TMR2 equ 011h ;# 
   392                           # 749 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   393  0012                     T2CON equ 012h ;# 
   394                           # 819 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   395  0013                     SSPBUF equ 013h ;# 
   396                           # 825 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   397  0014                     SSPCON equ 014h ;# 
   398                           # 894 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   399  0015                     CCPR1 equ 015h ;# 
   400                           # 900 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   401  0015                     CCPR1L equ 015h ;# 
   402                           # 906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   403  0016                     CCPR1H equ 016h ;# 
   404                           # 912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   405  0017                     CCP1CON equ 017h ;# 
   406                           # 1008 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   407  0018                     RCSTA equ 018h ;# 
   408                           # 1102 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   409  0019                     TXREG equ 019h ;# 
   410                           # 1108 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   411  001A                     RCREG equ 01Ah ;# 
   412                           # 1114 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   413  001B                     CCPR2 equ 01Bh ;# 
   414                           # 1120 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   415  001B                     CCPR2L equ 01Bh ;# 
   416                           # 1126 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   417  001C                     CCPR2H equ 01Ch ;# 
   418                           # 1132 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   419  001D                     CCP2CON equ 01Dh ;# 
   420                           # 1201 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   421  001E                     ADRESH equ 01Eh ;# 
   422                           # 1207 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   423  001F                     ADCON0 equ 01Fh ;# 
   424                           # 1307 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   425  0081                     OPTION_REG equ 081h ;# 
   426                           # 1376 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   427  0085                     TRISA equ 085h ;# 
   428                           # 1437 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   429  0086                     TRISB equ 086h ;# 
   430                           # 1498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   431  0087                     TRISC equ 087h ;# 
   432                           # 1559 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   433  0088                     TRISD equ 088h ;# 
   434                           # 1620 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   435  0089                     TRISE equ 089h ;# 
   436                           # 1657 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   437  008C                     PIE1 equ 08Ch ;# 
   438                           # 1712 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   439  008D                     PIE2 equ 08Dh ;# 
   440                           # 1768 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   441  008E                     PCON equ 08Eh ;# 
   442                           # 1814 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   443  008F                     OSCCON equ 08Fh ;# 
   444                           # 1878 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   445  0090                     OSCTUNE equ 090h ;# 
   446                           # 1929 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   447  0091                     SSPCON2 equ 091h ;# 
   448                           # 1990 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   449  0092                     PR2 equ 092h ;# 
   450                           # 1996 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   451  0093                     SSPADD equ 093h ;# 
   452                           # 2002 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   453  0093                     SSPMSK equ 093h ;# 
   454                           # 2007 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   455  0093                     MSK equ 093h ;# 
   456                           # 2123 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   457  0094                     SSPSTAT equ 094h ;# 
   458                           # 2291 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   459  0095                     WPUB equ 095h ;# 
   460                           # 2360 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   461  0096                     IOCB equ 096h ;# 
   462                           # 2429 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   463  0097                     VRCON equ 097h ;# 
   464                           # 2498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   465  0098                     TXSTA equ 098h ;# 
   466                           # 2583 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   467  0099                     SPBRG equ 099h ;# 
   468                           # 2644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   469  009A                     SPBRGH equ 09Ah ;# 
   470                           # 2713 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   471  009B                     PWM1CON equ 09Bh ;# 
   472                           # 2782 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   473  009C                     ECCPAS equ 09Ch ;# 
   474                           # 2863 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   475  009D                     PSTRCON equ 09Dh ;# 
   476                           # 2906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   477  009E                     ADRESL equ 09Eh ;# 
   478                           # 2912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   479  009F                     ADCON1 equ 09Fh ;# 
   480                           # 2945 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   481  0105                     WDTCON equ 0105h ;# 
   482                           # 2997 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   483  0107                     CM1CON0 equ 0107h ;# 
   484                           # 3061 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   485  0108                     CM2CON0 equ 0108h ;# 
   486                           # 3125 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   487  0109                     CM2CON1 equ 0109h ;# 
   488                           # 3175 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   489  010C                     EEDATA equ 010Ch ;# 
   490                           # 3180 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   491  010C                     EEDAT equ 010Ch ;# 
   492                           # 3186 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   493  010D                     EEADR equ 010Dh ;# 
   494                           # 3192 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   495  010E                     EEDATH equ 010Eh ;# 
   496                           # 3198 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   497  010F                     EEADRH equ 010Fh ;# 
   498                           # 3204 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   499  0185                     SRCON equ 0185h ;# 
   500                           # 3260 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   501  0187                     BAUDCTL equ 0187h ;# 
   502                           # 3311 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   503  0188                     ANSEL equ 0188h ;# 
   504                           # 3372 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   505  0189                     ANSELH equ 0189h ;# 
   506                           # 3421 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   507  018C                     EECON1 equ 018Ch ;# 
   508                           # 3465 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   509  018D                     EECON2 equ 018Dh ;# 
   510                           # 46 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   511  0000                     INDF equ 00h ;# 
   512                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   513  0001                     TMR0 equ 01h ;# 
   514                           # 58 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   515  0002                     PCL equ 02h ;# 
   516                           # 64 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   517  0003                     STATUS equ 03h ;# 
   518                           # 151 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   519  0004                     FSR equ 04h ;# 
   520                           # 157 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   521  0005                     PORTA equ 05h ;# 
   522                           # 218 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   523  0006                     PORTB equ 06h ;# 
   524                           # 279 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   525  0007                     PORTC equ 07h ;# 
   526                           # 340 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   527  0008                     PORTD equ 08h ;# 
   528                           # 401 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   529  0009                     PORTE equ 09h ;# 
   530                           # 438 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   531  000A                     PCLATH equ 0Ah ;# 
   532                           # 444 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   533  000B                     INTCON equ 0Bh ;# 
   534                           # 521 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   535  000C                     PIR1 equ 0Ch ;# 
   536                           # 576 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   537  000D                     PIR2 equ 0Dh ;# 
   538                           # 632 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   539  000E                     TMR1 equ 0Eh ;# 
   540                           # 638 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   541  000E                     TMR1L equ 0Eh ;# 
   542                           # 644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   543  000F                     TMR1H equ 0Fh ;# 
   544                           # 650 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   545  0010                     T1CON equ 010h ;# 
   546                           # 743 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   547  0011                     TMR2 equ 011h ;# 
   548                           # 749 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   549  0012                     T2CON equ 012h ;# 
   550                           # 819 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   551  0013                     SSPBUF equ 013h ;# 
   552                           # 825 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   553  0014                     SSPCON equ 014h ;# 
   554                           # 894 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   555  0015                     CCPR1 equ 015h ;# 
   556                           # 900 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   557  0015                     CCPR1L equ 015h ;# 
   558                           # 906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   559  0016                     CCPR1H equ 016h ;# 
   560                           # 912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   561  0017                     CCP1CON equ 017h ;# 
   562                           # 1008 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   563  0018                     RCSTA equ 018h ;# 
   564                           # 1102 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   565  0019                     TXREG equ 019h ;# 
   566                           # 1108 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   567  001A                     RCREG equ 01Ah ;# 
   568                           # 1114 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   569  001B                     CCPR2 equ 01Bh ;# 
   570                           # 1120 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   571  001B                     CCPR2L equ 01Bh ;# 
   572                           # 1126 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   573  001C                     CCPR2H equ 01Ch ;# 
   574                           # 1132 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   575  001D                     CCP2CON equ 01Dh ;# 
   576                           # 1201 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   577  001E                     ADRESH equ 01Eh ;# 
   578                           # 1207 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   579  001F                     ADCON0 equ 01Fh ;# 
   580                           # 1307 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   581  0081                     OPTION_REG equ 081h ;# 
   582                           # 1376 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   583  0085                     TRISA equ 085h ;# 
   584                           # 1437 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   585  0086                     TRISB equ 086h ;# 
   586                           # 1498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   587  0087                     TRISC equ 087h ;# 
   588                           # 1559 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   589  0088                     TRISD equ 088h ;# 
   590                           # 1620 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   591  0089                     TRISE equ 089h ;# 
   592                           # 1657 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   593  008C                     PIE1 equ 08Ch ;# 
   594                           # 1712 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   595  008D                     PIE2 equ 08Dh ;# 
   596                           # 1768 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   597  008E                     PCON equ 08Eh ;# 
   598                           # 1814 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   599  008F                     OSCCON equ 08Fh ;# 
   600                           # 1878 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   601  0090                     OSCTUNE equ 090h ;# 
   602                           # 1929 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   603  0091                     SSPCON2 equ 091h ;# 
   604                           # 1990 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   605  0092                     PR2 equ 092h ;# 
   606                           # 1996 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   607  0093                     SSPADD equ 093h ;# 
   608                           # 2002 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   609  0093                     SSPMSK equ 093h ;# 
   610                           # 2007 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   611  0093                     MSK equ 093h ;# 
   612                           # 2123 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   613  0094                     SSPSTAT equ 094h ;# 
   614                           # 2291 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   615  0095                     WPUB equ 095h ;# 
   616                           # 2360 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   617  0096                     IOCB equ 096h ;# 
   618                           # 2429 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   619  0097                     VRCON equ 097h ;# 
   620                           # 2498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   621  0098                     TXSTA equ 098h ;# 
   622                           # 2583 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   623  0099                     SPBRG equ 099h ;# 
   624                           # 2644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   625  009A                     SPBRGH equ 09Ah ;# 
   626                           # 2713 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   627  009B                     PWM1CON equ 09Bh ;# 
   628                           # 2782 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   629  009C                     ECCPAS equ 09Ch ;# 
   630                           # 2863 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   631  009D                     PSTRCON equ 09Dh ;# 
   632                           # 2906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   633  009E                     ADRESL equ 09Eh ;# 
   634                           # 2912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   635  009F                     ADCON1 equ 09Fh ;# 
   636                           # 2945 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   637  0105                     WDTCON equ 0105h ;# 
   638                           # 2997 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   639  0107                     CM1CON0 equ 0107h ;# 
   640                           # 3061 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   641  0108                     CM2CON0 equ 0108h ;# 
   642                           # 3125 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   643  0109                     CM2CON1 equ 0109h ;# 
   644                           # 3175 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   645  010C                     EEDATA equ 010Ch ;# 
   646                           # 3180 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   647  010C                     EEDAT equ 010Ch ;# 
   648                           # 3186 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   649  010D                     EEADR equ 010Dh ;# 
   650                           # 3192 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   651  010E                     EEDATH equ 010Eh ;# 
   652                           # 3198 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   653  010F                     EEADRH equ 010Fh ;# 
   654                           # 3204 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   655  0185                     SRCON equ 0185h ;# 
   656                           # 3260 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   657  0187                     BAUDCTL equ 0187h ;# 
   658                           # 3311 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   659  0188                     ANSEL equ 0188h ;# 
   660                           # 3372 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   661  0189                     ANSELH equ 0189h ;# 
   662                           # 3421 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   663  018C                     EECON1 equ 018Ch ;# 
   664                           # 3465 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   665  018D                     EECON2 equ 018Dh ;# 
   666                           # 67 "../MC40SE Line Following UART.c"
   667                           psect eeprom_data,class=EEDATA,delta=2,space=2 ;# 
   668                           # 67 "../MC40SE Line Following UART.c"
   669  0000  0001 0000 0000     db 1,0,0,0,0,0,0,0 ;# 
              0000 0000 0000     
              0000 0000          
   670                           # 46 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   671  0000                     INDF equ 00h ;# 
   672                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   673  0001                     TMR0 equ 01h ;# 
   674                           # 58 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   675  0002                     PCL equ 02h ;# 
   676                           # 64 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   677  0003                     STATUS equ 03h ;# 
   678                           # 151 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   679  0004                     FSR equ 04h ;# 
   680                           # 157 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   681  0005                     PORTA equ 05h ;# 
   682                           # 218 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   683  0006                     PORTB equ 06h ;# 
   684                           # 279 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   685  0007                     PORTC equ 07h ;# 
   686                           # 340 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   687  0008                     PORTD equ 08h ;# 
   688                           # 401 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   689  0009                     PORTE equ 09h ;# 
   690                           # 438 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   691  000A                     PCLATH equ 0Ah ;# 
   692                           # 444 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   693  000B                     INTCON equ 0Bh ;# 
   694                           # 521 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   695  000C                     PIR1 equ 0Ch ;# 
   696                           # 576 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   697  000D                     PIR2 equ 0Dh ;# 
   698                           # 632 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   699  000E                     TMR1 equ 0Eh ;# 
   700                           # 638 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   701  000E                     TMR1L equ 0Eh ;# 
   702                           # 644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   703  000F                     TMR1H equ 0Fh ;# 
   704                           # 650 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   705  0010                     T1CON equ 010h ;# 
   706                           # 743 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   707  0011                     TMR2 equ 011h ;# 
   708                           # 749 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   709  0012                     T2CON equ 012h ;# 
   710                           # 819 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   711  0013                     SSPBUF equ 013h ;# 
   712                           # 825 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   713  0014                     SSPCON equ 014h ;# 
   714                           # 894 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   715  0015                     CCPR1 equ 015h ;# 
   716                           # 900 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   717  0015                     CCPR1L equ 015h ;# 
   718                           # 906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   719  0016                     CCPR1H equ 016h ;# 
   720                           # 912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   721  0017                     CCP1CON equ 017h ;# 
   722                           # 1008 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   723  0018                     RCSTA equ 018h ;# 
   724                           # 1102 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   725  0019                     TXREG equ 019h ;# 
   726                           # 1108 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   727  001A                     RCREG equ 01Ah ;# 
   728                           # 1114 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   729  001B                     CCPR2 equ 01Bh ;# 
   730                           # 1120 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   731  001B                     CCPR2L equ 01Bh ;# 
   732                           # 1126 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   733  001C                     CCPR2H equ 01Ch ;# 
   734                           # 1132 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   735  001D                     CCP2CON equ 01Dh ;# 
   736                           # 1201 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   737  001E                     ADRESH equ 01Eh ;# 
   738                           # 1207 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   739  001F                     ADCON0 equ 01Fh ;# 
   740                           # 1307 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   741  0081                     OPTION_REG equ 081h ;# 
   742                           # 1376 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   743  0085                     TRISA equ 085h ;# 
   744                           # 1437 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   745  0086                     TRISB equ 086h ;# 
   746                           # 1498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   747  0087                     TRISC equ 087h ;# 
   748                           # 1559 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   749  0088                     TRISD equ 088h ;# 
   750                           # 1620 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   751  0089                     TRISE equ 089h ;# 
   752                           # 1657 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   753  008C                     PIE1 equ 08Ch ;# 
   754                           # 1712 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   755  008D                     PIE2 equ 08Dh ;# 
   756                           # 1768 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   757  008E                     PCON equ 08Eh ;# 
   758                           # 1814 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   759  008F                     OSCCON equ 08Fh ;# 
   760                           # 1878 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   761  0090                     OSCTUNE equ 090h ;# 
   762                           # 1929 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   763  0091                     SSPCON2 equ 091h ;# 
   764                           # 1990 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   765  0092                     PR2 equ 092h ;# 
   766                           # 1996 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   767  0093                     SSPADD equ 093h ;# 
   768                           # 2002 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   769  0093                     SSPMSK equ 093h ;# 
   770                           # 2007 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   771  0093                     MSK equ 093h ;# 
   772                           # 2123 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   773  0094                     SSPSTAT equ 094h ;# 
   774                           # 2291 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   775  0095                     WPUB equ 095h ;# 
   776                           # 2360 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   777  0096                     IOCB equ 096h ;# 
   778                           # 2429 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   779  0097                     VRCON equ 097h ;# 
   780                           # 2498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   781  0098                     TXSTA equ 098h ;# 
   782                           # 2583 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   783  0099                     SPBRG equ 099h ;# 
   784                           # 2644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   785  009A                     SPBRGH equ 09Ah ;# 
   786                           # 2713 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   787  009B                     PWM1CON equ 09Bh ;# 
   788                           # 2782 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   789  009C                     ECCPAS equ 09Ch ;# 
   790                           # 2863 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   791  009D                     PSTRCON equ 09Dh ;# 
   792                           # 2906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   793  009E                     ADRESL equ 09Eh ;# 
   794                           # 2912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   795  009F                     ADCON1 equ 09Fh ;# 
   796                           # 2945 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   797  0105                     WDTCON equ 0105h ;# 
   798                           # 2997 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   799  0107                     CM1CON0 equ 0107h ;# 
   800                           # 3061 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   801  0108                     CM2CON0 equ 0108h ;# 
   802                           # 3125 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   803  0109                     CM2CON1 equ 0109h ;# 
   804                           # 3175 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   805  010C                     EEDATA equ 010Ch ;# 
   806                           # 3180 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   807  010C                     EEDAT equ 010Ch ;# 
   808                           # 3186 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   809  010D                     EEADR equ 010Dh ;# 
   810                           # 3192 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   811  010E                     EEDATH equ 010Eh ;# 
   812                           # 3198 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   813  010F                     EEADRH equ 010Fh ;# 
   814                           # 3204 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   815  0185                     SRCON equ 0185h ;# 
   816                           # 3260 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   817  0187                     BAUDCTL equ 0187h ;# 
   818                           # 3311 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   819  0188                     ANSEL equ 0188h ;# 
   820                           # 3372 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   821  0189                     ANSELH equ 0189h ;# 
   822                           # 3421 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   823  018C                     EECON1 equ 018Ch ;# 
   824                           # 3465 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   825  018D                     EECON2 equ 018Dh ;# 
   826                           # 46 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   827  0000                     INDF equ 00h ;# 
   828                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   829  0001                     TMR0 equ 01h ;# 
   830                           # 58 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   831  0002                     PCL equ 02h ;# 
   832                           # 64 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   833  0003                     STATUS equ 03h ;# 
   834                           # 151 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   835  0004                     FSR equ 04h ;# 
   836                           # 157 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   837  0005                     PORTA equ 05h ;# 
   838                           # 218 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   839  0006                     PORTB equ 06h ;# 
   840                           # 279 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   841  0007                     PORTC equ 07h ;# 
   842                           # 340 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   843  0008                     PORTD equ 08h ;# 
   844                           # 401 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   845  0009                     PORTE equ 09h ;# 
   846                           # 438 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   847  000A                     PCLATH equ 0Ah ;# 
   848                           # 444 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   849  000B                     INTCON equ 0Bh ;# 
   850                           # 521 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   851  000C                     PIR1 equ 0Ch ;# 
   852                           # 576 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   853  000D                     PIR2 equ 0Dh ;# 
   854                           # 632 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   855  000E                     TMR1 equ 0Eh ;# 
   856                           # 638 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   857  000E                     TMR1L equ 0Eh ;# 
   858                           # 644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   859  000F                     TMR1H equ 0Fh ;# 
   860                           # 650 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   861  0010                     T1CON equ 010h ;# 
   862                           # 743 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   863  0011                     TMR2 equ 011h ;# 
   864                           # 749 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   865  0012                     T2CON equ 012h ;# 
   866                           # 819 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   867  0013                     SSPBUF equ 013h ;# 
   868                           # 825 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   869  0014                     SSPCON equ 014h ;# 
   870                           # 894 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   871  0015                     CCPR1 equ 015h ;# 
   872                           # 900 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   873  0015                     CCPR1L equ 015h ;# 
   874                           # 906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   875  0016                     CCPR1H equ 016h ;# 
   876                           # 912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   877  0017                     CCP1CON equ 017h ;# 
   878                           # 1008 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   879  0018                     RCSTA equ 018h ;# 
   880                           # 1102 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   881  0019                     TXREG equ 019h ;# 
   882                           # 1108 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   883  001A                     RCREG equ 01Ah ;# 
   884                           # 1114 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   885  001B                     CCPR2 equ 01Bh ;# 
   886                           # 1120 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   887  001B                     CCPR2L equ 01Bh ;# 
   888                           # 1126 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   889  001C                     CCPR2H equ 01Ch ;# 
   890                           # 1132 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   891  001D                     CCP2CON equ 01Dh ;# 
   892                           # 1201 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   893  001E                     ADRESH equ 01Eh ;# 
   894                           # 1207 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   895  001F                     ADCON0 equ 01Fh ;# 
   896                           # 1307 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   897  0081                     OPTION_REG equ 081h ;# 
   898                           # 1376 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   899  0085                     TRISA equ 085h ;# 
   900                           # 1437 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   901  0086                     TRISB equ 086h ;# 
   902                           # 1498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   903  0087                     TRISC equ 087h ;# 
   904                           # 1559 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   905  0088                     TRISD equ 088h ;# 
   906                           # 1620 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   907  0089                     TRISE equ 089h ;# 
   908                           # 1657 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   909  008C                     PIE1 equ 08Ch ;# 
   910                           # 1712 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   911  008D                     PIE2 equ 08Dh ;# 
   912                           # 1768 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   913  008E                     PCON equ 08Eh ;# 
   914                           # 1814 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   915  008F                     OSCCON equ 08Fh ;# 
   916                           # 1878 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   917  0090                     OSCTUNE equ 090h ;# 
   918                           # 1929 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   919  0091                     SSPCON2 equ 091h ;# 
   920                           # 1990 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   921  0092                     PR2 equ 092h ;# 
   922                           # 1996 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   923  0093                     SSPADD equ 093h ;# 
   924                           # 2002 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   925  0093                     SSPMSK equ 093h ;# 
   926                           # 2007 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   927  0093                     MSK equ 093h ;# 
   928                           # 2123 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   929  0094                     SSPSTAT equ 094h ;# 
   930                           # 2291 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   931  0095                     WPUB equ 095h ;# 
   932                           # 2360 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   933  0096                     IOCB equ 096h ;# 
   934                           # 2429 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   935  0097                     VRCON equ 097h ;# 
   936                           # 2498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   937  0098                     TXSTA equ 098h ;# 
   938                           # 2583 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   939  0099                     SPBRG equ 099h ;# 
   940                           # 2644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   941  009A                     SPBRGH equ 09Ah ;# 
   942                           # 2713 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   943  009B                     PWM1CON equ 09Bh ;# 
   944                           # 2782 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   945  009C                     ECCPAS equ 09Ch ;# 
   946                           # 2863 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   947  009D                     PSTRCON equ 09Dh ;# 
   948                           # 2906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   949  009E                     ADRESL equ 09Eh ;# 
   950                           # 2912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   951  009F                     ADCON1 equ 09Fh ;# 
   952                           # 2945 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   953  0105                     WDTCON equ 0105h ;# 
   954                           # 2997 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   955  0107                     CM1CON0 equ 0107h ;# 
   956                           # 3061 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   957  0108                     CM2CON0 equ 0108h ;# 
   958                           # 3125 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   959  0109                     CM2CON1 equ 0109h ;# 
   960                           # 3175 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   961  010C                     EEDATA equ 010Ch ;# 
   962                           # 3180 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   963  010C                     EEDAT equ 010Ch ;# 
   964                           # 3186 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   965  010D                     EEADR equ 010Dh ;# 
   966                           # 3192 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   967  010E                     EEDATH equ 010Eh ;# 
   968                           # 3198 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   969  010F                     EEADRH equ 010Fh ;# 
   970                           # 3204 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   971  0185                     SRCON equ 0185h ;# 
   972                           # 3260 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   973  0187                     BAUDCTL equ 0187h ;# 
   974                           # 3311 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   975  0188                     ANSEL equ 0188h ;# 
   976                           # 3372 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   977  0189                     ANSELH equ 0189h ;# 
   978                           # 3421 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   979  018C                     EECON1 equ 018Ch ;# 
   980                           # 3465 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   981  018D                     EECON2 equ 018Dh ;# 
   982                           # 46 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   983  0000                     INDF equ 00h ;# 
   984                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   985  0001                     TMR0 equ 01h ;# 
   986                           # 58 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   987  0002                     PCL equ 02h ;# 
   988                           # 64 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   989  0003                     STATUS equ 03h ;# 
   990                           # 151 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   991  0004                     FSR equ 04h ;# 
   992                           # 157 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   993  0005                     PORTA equ 05h ;# 
   994                           # 218 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   995  0006                     PORTB equ 06h ;# 
   996                           # 279 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   997  0007                     PORTC equ 07h ;# 
   998                           # 340 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   999  0008                     PORTD equ 08h ;# 
  1000                           # 401 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1001  0009                     PORTE equ 09h ;# 
  1002                           # 438 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1003  000A                     PCLATH equ 0Ah ;# 
  1004                           # 444 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1005  000B                     INTCON equ 0Bh ;# 
  1006                           # 521 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1007  000C                     PIR1 equ 0Ch ;# 
  1008                           # 576 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1009  000D                     PIR2 equ 0Dh ;# 
  1010                           # 632 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1011  000E                     TMR1 equ 0Eh ;# 
  1012                           # 638 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1013  000E                     TMR1L equ 0Eh ;# 
  1014                           # 644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1015  000F                     TMR1H equ 0Fh ;# 
  1016                           # 650 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1017  0010                     T1CON equ 010h ;# 
  1018                           # 743 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1019  0011                     TMR2 equ 011h ;# 
  1020                           # 749 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1021  0012                     T2CON equ 012h ;# 
  1022                           # 819 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1023  0013                     SSPBUF equ 013h ;# 
  1024                           # 825 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1025  0014                     SSPCON equ 014h ;# 
  1026                           # 894 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1027  0015                     CCPR1 equ 015h ;# 
  1028                           # 900 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1029  0015                     CCPR1L equ 015h ;# 
  1030                           # 906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1031  0016                     CCPR1H equ 016h ;# 
  1032                           # 912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1033  0017                     CCP1CON equ 017h ;# 
  1034                           # 1008 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1035  0018                     RCSTA equ 018h ;# 
  1036                           # 1102 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1037  0019                     TXREG equ 019h ;# 
  1038                           # 1108 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1039  001A                     RCREG equ 01Ah ;# 
  1040                           # 1114 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1041  001B                     CCPR2 equ 01Bh ;# 
  1042                           # 1120 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1043  001B                     CCPR2L equ 01Bh ;# 
  1044                           # 1126 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1045  001C                     CCPR2H equ 01Ch ;# 
  1046                           # 1132 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1047  001D                     CCP2CON equ 01Dh ;# 
  1048                           # 1201 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1049  001E                     ADRESH equ 01Eh ;# 
  1050                           # 1207 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1051  001F                     ADCON0 equ 01Fh ;# 
  1052                           # 1307 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1053  0081                     OPTION_REG equ 081h ;# 
  1054                           # 1376 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1055  0085                     TRISA equ 085h ;# 
  1056                           # 1437 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1057  0086                     TRISB equ 086h ;# 
  1058                           # 1498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1059  0087                     TRISC equ 087h ;# 
  1060                           # 1559 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1061  0088                     TRISD equ 088h ;# 
  1062                           # 1620 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1063  0089                     TRISE equ 089h ;# 
  1064                           # 1657 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1065  008C                     PIE1 equ 08Ch ;# 
  1066                           # 1712 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1067  008D                     PIE2 equ 08Dh ;# 
  1068                           # 1768 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1069  008E                     PCON equ 08Eh ;# 
  1070                           # 1814 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1071  008F                     OSCCON equ 08Fh ;# 
  1072                           # 1878 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1073  0090                     OSCTUNE equ 090h ;# 
  1074                           # 1929 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1075  0091                     SSPCON2 equ 091h ;# 
  1076                           # 1990 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1077  0092                     PR2 equ 092h ;# 
  1078                           # 1996 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1079  0093                     SSPADD equ 093h ;# 
  1080                           # 2002 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1081  0093                     SSPMSK equ 093h ;# 
  1082                           # 2007 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1083  0093                     MSK equ 093h ;# 
  1084                           # 2123 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1085  0094                     SSPSTAT equ 094h ;# 
  1086                           # 2291 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1087  0095                     WPUB equ 095h ;# 
  1088                           # 2360 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1089  0096                     IOCB equ 096h ;# 
  1090                           # 2429 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1091  0097                     VRCON equ 097h ;# 
  1092                           # 2498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1093  0098                     TXSTA equ 098h ;# 
  1094                           # 2583 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1095  0099                     SPBRG equ 099h ;# 
  1096                           # 2644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1097  009A                     SPBRGH equ 09Ah ;# 
  1098                           # 2713 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1099  009B                     PWM1CON equ 09Bh ;# 
  1100                           # 2782 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1101  009C                     ECCPAS equ 09Ch ;# 
  1102                           # 2863 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1103  009D                     PSTRCON equ 09Dh ;# 
  1104                           # 2906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1105  009E                     ADRESL equ 09Eh ;# 
  1106                           # 2912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1107  009F                     ADCON1 equ 09Fh ;# 
  1108                           # 2945 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1109  0105                     WDTCON equ 0105h ;# 
  1110                           # 2997 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1111  0107                     CM1CON0 equ 0107h ;# 
  1112                           # 3061 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1113  0108                     CM2CON0 equ 0108h ;# 
  1114                           # 3125 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1115  0109                     CM2CON1 equ 0109h ;# 
  1116                           # 3175 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1117  010C                     EEDATA equ 010Ch ;# 
  1118                           # 3180 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1119  010C                     EEDAT equ 010Ch ;# 
  1120                           # 3186 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1121  010D                     EEADR equ 010Dh ;# 
  1122                           # 3192 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1123  010E                     EEDATH equ 010Eh ;# 
  1124                           # 3198 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1125  010F                     EEADRH equ 010Fh ;# 
  1126                           # 3204 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1127  0185                     SRCON equ 0185h ;# 
  1128                           # 3260 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1129  0187                     BAUDCTL equ 0187h ;# 
  1130                           # 3311 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1131  0188                     ANSEL equ 0188h ;# 
  1132                           # 3372 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1133  0189                     ANSELH equ 0189h ;# 
  1134                           # 3421 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1135  018C                     EECON1 equ 018Ch ;# 
  1136                           # 3465 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
  1137  018D                     EECON2 equ 018Dh ;# 
  1138                           	FNCALL	_main,_mc40se_init
  1139                           	FNCALL	_main,_pwm_init
  1140                           	FNCALL	_main,_relay_off_all
  1141                           	FNCALL	_main,_adc_init
  1142                           	FNCALL	_main,_timer1_init
  1143                           	FNCALL	_main,_lcd_init
  1144                           	FNCALL	_main,_LSA08_Init
  1145                           	FNCALL	_main,_brushless
  1146                           	FNCALL	_main,_lcd_clear_msg
  1147                           	FNCALL	_main,_delay_ms
  1148                           	FNCALL	_main,_beep
  1149                           	FNCALL	_main,_line_following
  1150                           	FNCALL	_lcd_init,_set_lcd_e
  1151                           	FNCALL	_lcd_init,_send_lcd_data
  1152                           	FNCALL	_lcd_init,_lcd_clr
  1153                           	FNCALL	_LSA08_Init,_UART_INIT
  1154                           	FNCALL	_LSA08_Init,_LSA08_ClearJunction
  1155                           	FNCALL	_LSA08_Init,_LSA08_UARTMode
  1156                           	FNCALL	_LSA08_UARTMode,_SEND_PACKET
  1157                           	FNCALL	_mc40se_init,_delay_ms
  1158                           	FNCALL	_relay_off_all,_delay_ms
  1159                           	FNCALL	_line_following,_forward
  1160                           	FNCALL	_line_following,_lcd_clear_msg
  1161                           	FNCALL	_line_following,_delay_ms
  1162                           	FNCALL	_line_following,_beep
  1163                           	FNCALL	_line_following,_line_follow_cross
  1164                           	FNCALL	_line_following,_brushless
  1165                           	FNCALL	_line_following,_LSA08_GetSensor
  1166                           	FNCALL	_beep,_delay_ms
  1167                           	FNCALL	_forward,_run
  1168                           	FNCALL	_line_follow_cross,_brushless
  1169                           	FNCALL	_line_follow_cross,_LF
  1170                           	FNCALL	_line_follow_cross,_LSA08_GetJunction
  1171                           	FNCALL	_line_follow_cross,_LSA08_ClearJunction
  1172                           	FNCALL	_LSA08_ClearJunction,_SEND_PACKET
  1173                           	FNCALL	_LSA08_GetJunction,_SEND_PACKET
  1174                           	FNCALL	_SEND_PACKET,_UART_SEND
  1175                           	FNCALL	_SEND_PACKET,_UART_RESPONSE
  1176                           	FNCALL	_UART_RESPONSE,_UART_REC
  1177                           	FNCALL	_LF,_UART_DUMP
  1178                           	FNCALL	_LF,_LSA08_GetSensor
  1179                           	FNCALL	_LF,_brushless
  1180                           	FNCALL	_LF,_lcd_clear_msg
  1181                           	FNCALL	_lcd_clear_msg,_lcd_clr
  1182                           	FNCALL	_lcd_clear_msg,_lcd_putstr
  1183                           	FNCALL	_lcd_clr,_send_lcd_data
  1184                           	FNCALL	_lcd_putstr,_lcd_2ndline
  1185                           	FNCALL	_lcd_putstr,_lcd_putchar
  1186                           	FNCALL	_lcd_2ndline,_send_lcd_data
  1187                           	FNCALL	_lcd_putchar,_send_lcd_data
  1188                           	FNCALL	_send_lcd_data,_set_lcd_rs
  1189                           	FNCALL	_send_lcd_data,_set_lcd_data
  1190                           	FNCALL	_send_lcd_data,_set_lcd_e
  1191                           	FNCALL	_LSA08_GetSensor,_UART_REC
  1192                           	FNCALL	_LSA08_GetSensor,_UART_DUMP
  1193                           	FNCALL	_UART_DUMP,_UART_REC
  1194                           	FNCALL	_brushless,_set_pwm1
  1195                           	FNCALL	_brushless,_set_pwm2
  1196                           	FNROOT	_main
  1197                           	FNCALL	_isr,_timer1_isr
  1198                           	FNCALL	intlevel1,_isr
  1199                           	global	intlevel1
  1200                           	FNROOT	intlevel1
  1201                           	global	_b_4_bits_data_bus
  1202                           	global	_LSA08_ADD
  1203                           psect	idataCOMMON,class=CODE,space=0,delta=2
  1204                           global __pidataCOMMON
  1205  0003                     __pidataCOMMON:
  1206                           	file	"../lcd.c"
  1207                           	line	86
  1208                           
  1209                           ;initializer for _b_4_bits_data_bus
  1210  0003  3401               	retlw	01h
  1211                           psect	idataBANK0,class=CODE,space=0,delta=2
  1212                           global __pidataBANK0
  1213  0F19                     __pidataBANK0:
  1214                           	file	"../MC40SE Line Following UART.c"
  1215                           	line	20
  1216                           
  1217                           ;initializer for _LSA08_ADD
  1218  0F19  3401               	retlw	01h
  1219                           	global	_rec
  1220                           	global	lcd_bcd@F1675
  1221                           	global	_encoder
  1222                           	global	_left_s
  1223                           	global	_right_s
  1224                           	global	_ERR_FLAG
  1225                           	global	_ADRESH
  1226  001E                     _ADRESH	set	0x1E
  1227                           	global	_CCP1CON
  1228  0017                     _CCP1CON	set	0x17
  1229                           	global	_CCP2CON
  1230  001D                     _CCP2CON	set	0x1D
  1231                           	global	_CCPR1L
  1232  0015                     _CCPR1L	set	0x15
  1233                           	global	_CCPR2L
  1234  001B                     _CCPR2L	set	0x1B
  1235                           	global	_PORTA
  1236  0005                     _PORTA	set	0x5
  1237                           	global	_PORTB
  1238  0006                     _PORTB	set	0x6
  1239                           	global	_PORTC
  1240  0007                     _PORTC	set	0x7
  1241                           	global	_PORTD
  1242  0008                     _PORTD	set	0x8
  1243                           	global	_PORTE
  1244  0009                     _PORTE	set	0x9
  1245                           	global	_RCREG
  1246  001A                     _RCREG	set	0x1A
  1247                           	global	_RCSTAbits
  1248  0018                     _RCSTAbits	set	0x18
  1249                           	global	_TMR1H
  1250  000F                     _TMR1H	set	0xF
  1251                           	global	_TMR1L
  1252  000E                     _TMR1L	set	0xE
  1253                           	global	_TXREG
  1254  0019                     _TXREG	set	0x19
  1255                           	global	_ADCS0
  1256  00FE                     _ADCS0	set	0xFE
  1257                           	global	_ADCS1
  1258  00FF                     _ADCS1	set	0xFF
  1259                           	global	_ADON
  1260  00F8                     _ADON	set	0xF8
  1261                           	global	_CCP1M0
  1262  00B8                     _CCP1M0	set	0xB8
  1263                           	global	_CCP1M1
  1264  00B9                     _CCP1M1	set	0xB9
  1265                           	global	_CCP1M2
  1266  00BA                     _CCP1M2	set	0xBA
  1267                           	global	_CCP1M3
  1268  00BB                     _CCP1M3	set	0xBB
  1269                           	global	_CCP2M0
  1270  00E8                     _CCP2M0	set	0xE8
  1271                           	global	_CCP2M1
  1272  00E9                     _CCP2M1	set	0xE9
  1273                           	global	_CCP2M2
  1274  00EA                     _CCP2M2	set	0xEA
  1275                           	global	_CCP2M3
  1276  00EB                     _CCP2M3	set	0xEB
  1277                           	global	_CCP2X
  1278  00ED                     _CCP2X	set	0xED
  1279                           	global	_CCP2Y
  1280  00EC                     _CCP2Y	set	0xEC
  1281                           	global	_CHS0
  1282  00FA                     _CHS0	set	0xFA
  1283                           	global	_CHS1
  1284  00FB                     _CHS1	set	0xFB
  1285                           	global	_CHS2
  1286  00FC                     _CHS2	set	0xFC
  1287                           	global	_CHS3
  1288  00FD                     _CHS3	set	0xFD
  1289                           	global	_DC1B0
  1290  00BC                     _DC1B0	set	0xBC
  1291                           	global	_DC1B1
  1292  00BD                     _DC1B1	set	0xBD
  1293                           	global	_FERR
  1294  00C2                     _FERR	set	0xC2
  1295                           	global	_GIE
  1296  005F                     _GIE	set	0x5F
  1297                           	global	_GO_DONE
  1298  00F9                     _GO_DONE	set	0xF9
  1299                           	global	_P1M0
  1300  00BE                     _P1M0	set	0xBE
  1301                           	global	_P1M1
  1302  00BF                     _P1M1	set	0xBF
  1303                           	global	_PEIE
  1304  005E                     _PEIE	set	0x5E
  1305                           	global	_RA2
  1306  002A                     _RA2	set	0x2A
  1307                           	global	_RA6
  1308  002E                     _RA6	set	0x2E
  1309                           	global	_RA7
  1310  002F                     _RA7	set	0x2F
  1311                           	global	_RB0
  1312  0030                     _RB0	set	0x30
  1313                           	global	_RB7
  1314  0037                     _RB7	set	0x37
  1315                           	global	_RC3
  1316  003B                     _RC3	set	0x3B
  1317                           	global	_RC4
  1318  003C                     _RC4	set	0x3C
  1319                           	global	_RC5
  1320  003D                     _RC5	set	0x3D
  1321                           	global	_RCIF
  1322  0065                     _RCIF	set	0x65
  1323                           	global	_RD0
  1324  0040                     _RD0	set	0x40
  1325                           	global	_RE0
  1326  0048                     _RE0	set	0x48
  1327                           	global	_RE1
  1328  0049                     _RE1	set	0x49
  1329                           	global	_RE2
  1330  004A                     _RE2	set	0x4A
  1331                           	global	_T1CKPS0
  1332  0084                     _T1CKPS0	set	0x84
  1333                           	global	_T1CKPS1
  1334  0085                     _T1CKPS1	set	0x85
  1335                           	global	_T1OSCEN
  1336  0083                     _T1OSCEN	set	0x83
  1337                           	global	_T1SYNC
  1338  0082                     _T1SYNC	set	0x82
  1339                           	global	_T2CKPS0
  1340  0090                     _T2CKPS0	set	0x90
  1341                           	global	_T2CKPS1
  1342  0091                     _T2CKPS1	set	0x91
  1343                           	global	_TMR1CS
  1344  0081                     _TMR1CS	set	0x81
  1345                           	global	_TMR1IF
  1346  0060                     _TMR1IF	set	0x60
  1347                           	global	_TMR1ON
  1348  0080                     _TMR1ON	set	0x80
  1349                           	global	_TMR2ON
  1350  0092                     _TMR2ON	set	0x92
  1351                           	global	_ADRESL
  1352  009E                     _ADRESL	set	0x9E
  1353                           	global	_OSCCON
  1354  008F                     _OSCCON	set	0x8F
  1355                           	global	_PR2
  1356  0092                     _PR2	set	0x92
  1357                           	global	_SPBRG
  1358  0099                     _SPBRG	set	0x99
  1359                           	global	_SPBRGH
  1360  009A                     _SPBRGH	set	0x9A
  1361                           	global	_TRISA
  1362  0085                     _TRISA	set	0x85
  1363                           	global	_TRISB
  1364  0086                     _TRISB	set	0x86
  1365                           	global	_TRISC
  1366  0087                     _TRISC	set	0x87
  1367                           	global	_TRISCbits
  1368  0087                     _TRISCbits	set	0x87
  1369                           	global	_TRISD
  1370  0088                     _TRISD	set	0x88
  1371                           	global	_TRISE
  1372  0089                     _TRISE	set	0x89
  1373                           	global	_TXSTAbits
  1374  0098                     _TXSTAbits	set	0x98
  1375                           	global	_ADFM
  1376  04FF                     _ADFM	set	0x4FF
  1377                           	global	_TMR1IE
  1378  0460                     _TMR1IE	set	0x460
  1379                           	global	_TRISB0
  1380  0430                     _TRISB0	set	0x430
  1381                           	global	_TRMT
  1382  04C1                     _TRMT	set	0x4C1
  1383                           	global	_VCFG0
  1384  04FC                     _VCFG0	set	0x4FC
  1385                           	global	_VCFG1
  1386  04FD                     _VCFG1	set	0x4FD
  1387                           	global	_ANSELHbits
  1388  0189                     _ANSELHbits	set	0x189
  1389                           	global	_BAUDCTLbits
  1390  0187                     _BAUDCTLbits	set	0x187
  1391                           	global	_ANS0
  1392  0C40                     _ANS0	set	0xC40
  1393                           	global	_ANS1
  1394  0C41                     _ANS1	set	0xC41
  1395                           	global	_ANS10
  1396  0C4A                     _ANS10	set	0xC4A
  1397                           	global	_ANS11
  1398  0C4B                     _ANS11	set	0xC4B
  1399                           	global	_ANS12
  1400  0C4C                     _ANS12	set	0xC4C
  1401                           	global	_ANS13
  1402  0C4D                     _ANS13	set	0xC4D
  1403                           	global	_ANS2
  1404  0C42                     _ANS2	set	0xC42
  1405                           	global	_ANS3
  1406  0C43                     _ANS3	set	0xC43
  1407                           	global	_ANS4
  1408  0C44                     _ANS4	set	0xC44
  1409                           	global	_ANS5
  1410  0C45                     _ANS5	set	0xC45
  1411                           	global	_ANS6
  1412  0C46                     _ANS6	set	0xC46
  1413                           	global	_ANS7
  1414  0C47                     _ANS7	set	0xC47
  1415                           	global	_ANS8
  1416  0C48                     _ANS8	set	0xC48
  1417                           	global	_ANS9
  1418  0C49                     _ANS9	set	0xC49
  1419                           psect	strings,class=STRING,delta=2
  1420                           global __pstrings
  1421  042D                     __pstrings:
  1422                           ;	global	stringdir,stringtab,__stringbase
  1423  042D                     stringtab:
  1424                           	global    __stringtab
  1425  042D                     __stringtab:
  1426                           ;	String table - string pointers are 1 byte each
  1427  042D                     stringcode:stringdir:
      + 042D                     stringdir:	
  1428  042D  3004               movlw high(stringdir)
  1429  042E  008A               movwf pclath
  1430  042F  0804               movf fsr,w
  1431  0430  0A84               incf fsr
  1432  0431  0782               	addwf pc
  1433  0432                     __stringbase:
  1434  0432  3400               	retlw	0
  1435                           psect	strings
  1436                           	global    __end_of__stringtab
  1437  0433                     __end_of__stringtab:
  1438                           	global __stringdata
  1439  0433                     __stringdata:
  1440                           	
  1441  0433                     STR_1:	
  1442  0433  3420               	retlw	32	;' '
  1443  0434  344D               	retlw	77	;'M'
  1444  0435  3443               	retlw	67	;'C'
  1445  0436  3434               	retlw	52	;'4'
  1446  0437  3430               	retlw	48	;'0'
  1447  0438  3453               	retlw	83	;'S'
  1448  0439  3445               	retlw	69	;'E'
  1449  043A  340A               	retlw	10
  1450  043B  3420               	retlw	32	;' '
  1451  043C  344C               	retlw	76	;'L'
  1452  043D  3453               	retlw	83	;'S'
  1453  043E  3441               	retlw	65	;'A'
  1454  043F  3430               	retlw	48	;'0'
  1455  0440  3438               	retlw	56	;'8'
  1456  0441  3400               	retlw	0
  1457                           psect	strings
  1458                           	
  1459  0442                     STR_4:	
  1460  0442  3453               	retlw	83	;'S'
  1461  0443  3457               	retlw	87	;'W'
  1462  0444  3431               	retlw	49	;'1'
  1463  0445  3420               	retlw	32	;' '
  1464  0446  3474               	retlw	116	;'t'
  1465  0447  346F               	retlw	111	;'o'
  1466  0448  340A               	retlw	10
  1467  0449  3453               	retlw	83	;'S'
  1468  044A  3474               	retlw	116	;'t'
  1469  044B  3461               	retlw	97	;'a'
  1470  044C  3472               	retlw	114	;'r'
  1471  044D  3474               	retlw	116	;'t'
  1472  044E  3421               	retlw	33	;'!'
  1473  044F  3400               	retlw	0
  1474                           psect	strings
  1475                           	
  1476  0450                     STR_2:	
  1477  0450  3420               	retlw	32	;' '
  1478  0451  3420               	retlw	32	;' '
  1479  0452  344C               	retlw	76	;'L'
  1480  0453  3469               	retlw	105	;'i'
  1481  0454  346E               	retlw	110	;'n'
  1482  0455  3465               	retlw	101	;'e'
  1483  0456  340A               	retlw	10
  1484  0457  3446               	retlw	70	;'F'
  1485  0458  346F               	retlw	111	;'o'
  1486  0459  346C               	retlw	108	;'l'
  1487  045A  346C               	retlw	108	;'l'
  1488  045B  346F               	retlw	111	;'o'
  1489  045C  3477               	retlw	119	;'w'
  1490  045D  3400               	retlw	0
  1491                           psect	strings
  1492                           	
  1493  045E                     STR_9:	
  1494  045E  3472               	retlw	114	;'r'
  1495  045F  3469               	retlw	105	;'i'
  1496  0460  3467               	retlw	103	;'g'
  1497  0461  3468               	retlw	104	;'h'
  1498  0462  3474               	retlw	116	;'t'
  1499  0463  3431               	retlw	49	;'1'
  1500  0464  3420               	retlw	32	;' '
  1501  0465  3420               	retlw	32	;' '
  1502  0466  3400               	retlw	0
  1503                           psect	strings
  1504                           	
  1505  0467                     STR_10:	
  1506  0467  3472               	retlw	114	;'r'
  1507  0468  3469               	retlw	105	;'i'
  1508  0469  3467               	retlw	103	;'g'
  1509  046A  3468               	retlw	104	;'h'
  1510  046B  3474               	retlw	116	;'t'
  1511  046C  3432               	retlw	50	;'2'
  1512  046D  3420               	retlw	32	;' '
  1513  046E  3420               	retlw	32	;' '
  1514  046F  3400               	retlw	0
  1515                           psect	strings
  1516                           	
  1517  0470                     STR_7:	
  1518  0470  3420               	retlw	32	;' '
  1519  0471  3466               	retlw	102	;'f'
  1520  0472  346F               	retlw	111	;'o'
  1521  0473  3472               	retlw	114	;'r'
  1522  0474  3477               	retlw	119	;'w'
  1523  0475  3461               	retlw	97	;'a'
  1524  0476  3472               	retlw	114	;'r'
  1525  0477  3464               	retlw	100	;'d'
  1526  0478  3400               	retlw	0
  1527                           psect	strings
  1528                           	
  1529  0479                     STR_12:	
  1530  0479  346C               	retlw	108	;'l'
  1531  047A  3465               	retlw	101	;'e'
  1532  047B  3466               	retlw	102	;'f'
  1533  047C  3474               	retlw	116	;'t'
  1534  047D  3431               	retlw	49	;'1'
  1535  047E  3420               	retlw	32	;' '
  1536  047F  3420               	retlw	32	;' '
  1537  0480  3400               	retlw	0
  1538                           psect	strings
  1539                           	
  1540  0481                     STR_13:	
  1541  0481  346C               	retlw	108	;'l'
  1542  0482  3465               	retlw	101	;'e'
  1543  0483  3466               	retlw	102	;'f'
  1544  0484  3474               	retlw	116	;'t'
  1545  0485  3432               	retlw	50	;'2'
  1546  0486  3420               	retlw	32	;' '
  1547  0487  3420               	retlw	32	;' '
  1548  0488  3400               	retlw	0
  1549                           psect	strings
  1550                           	
  1551  0489                     STR_8:	
  1552  0489  3472               	retlw	114	;'r'
  1553  048A  3469               	retlw	105	;'i'
  1554  048B  3467               	retlw	103	;'g'
  1555  048C  3468               	retlw	104	;'h'
  1556  048D  3474               	retlw	116	;'t'
  1557  048E  3420               	retlw	32	;' '
  1558  048F  3420               	retlw	32	;' '
  1559  0490  3400               	retlw	0
  1560                           psect	strings
  1561                           	
  1562  0491                     STR_11:	
  1563  0491  346C               	retlw	108	;'l'
  1564  0492  3465               	retlw	101	;'e'
  1565  0493  3466               	retlw	102	;'f'
  1566  0494  3474               	retlw	116	;'t'
  1567  0495  3420               	retlw	32	;' '
  1568  0496  3420               	retlw	32	;' '
  1569  0497  3400               	retlw	0
  1570                           psect	strings
  1571                           	
  1572  0498                     STR_3:	
  1573  0498  3444               	retlw	68	;'D'
  1574  0499  346F               	retlw	111	;'o'
  1575  049A  346E               	retlw	110	;'n'
  1576  049B  3465               	retlw	101	;'e'
  1577  049C  3421               	retlw	33	;'!'
  1578  049D  3400               	retlw	0
  1579                           psect	strings
  1580                           	
  1581  049E                     STR_6:	
  1582  049E  3474               	retlw	116	;'t'
  1583  049F  3475               	retlw	117	;'u'
  1584  04A0  3472               	retlw	114	;'r'
  1585  04A1  346E               	retlw	110	;'n'
  1586  04A2  3400               	retlw	0
  1587                           psect	strings
  1588  0451                     STR_5	equ	STR_2+1
  1589  0467                     STR_14	equ	STR_10+0
  1590                           	global __end_of__stringdata
  1591  04A3                     __end_of__stringdata:
  1592                           ; #config settings
  1593                           global __CFG_BOREN$OFF
  1594  0000                     __CFG_BOREN$OFF equ 0x0
  1595                           global __CFG_FOSC$INTRC_NOCLKOUT
  1596  0000                     __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1597                           global __CFG_WDTE$OFF
  1598  0000                     __CFG_WDTE$OFF equ 0x0
  1599                           global __CFG_LVP$OFF
  1600  0000                     __CFG_LVP$OFF equ 0x0
  1601                           global __CFG_PWRTE$ON
  1602  0000                     __CFG_PWRTE$ON equ 0x0
  1603                           	file	"C:\Users\yonghui\AppData\Local\Temp\s1mk."
  1604                           	line	#
  1605                           psect cinit,class=CODE,delta=2
  1606                           global start_initialization
  1607  078A                     start_initialization:
  1608                           
  1609                           global __initialization
  1610  078A                     __initialization:
  1611                           psect	bssCOMMON,class=COMMON,space=1
  1612                           global __pbssCOMMON
  1613  0076                     __pbssCOMMON:
  1614  0076                     _rec:
  1615  0076                            ds      2
  1616                           
  1617  0078                     _different:
  1618  0078                            ds      1
  1619                           
  1620                           psect	dataCOMMON,class=COMMON,space=1
  1621                           global __pdataCOMMON
  1622  0079                     __pdataCOMMON:
  1623                           	file	"../lcd.c"
  1624                           	line	86
  1625  0079                     _b_4_bits_data_bus:
  1626  0079                            ds      1
  1627                           
  1628                           psect	bssBANK0,class=BANK0,space=1
  1629                           global __pbssBANK0
  1630  0034                     __pbssBANK0:
  1631  0034                     lcd_bcd@F1675:
  1632  0034                            ds      10
  1633                           
  1634  003E                     _encoder:
  1635  003E                            ds      2
  1636                           
  1637  0040                     _left_s:
  1638  0040                            ds      2
  1639                           
  1640  0042                     _right_s:
  1641  0042                            ds      2
  1642                           
  1643  0044                     _ERR_FLAG:
  1644  0044                            ds      1
  1645                           
  1646                           psect	dataBANK0,class=BANK0,space=1
  1647                           global __pdataBANK0
  1648  0045                     __pdataBANK0:
  1649                           	file	"../MC40SE Line Following UART.c"
  1650                           	line	20
  1651  0045                     _LSA08_ADD:
  1652  0045                            ds      1
  1653                           
  1654                           psect clrtext,class=CODE,delta=2
  1655                           global clear_ram
  1656                           ;	Called with FSR containing the base address, and
  1657                           ;	W with the last address+1
  1658  0F2C                     clear_ram:
  1659  0F2C  0064               	clrwdt			;clear the watchdog before getting into this loop
  1660  0F2D                     clrloop:
  1661  0F2D  0180               	clrf	indf		;clear RAM location pointed to by FSR
  1662  0F2E  0A84               	incf	fsr,f		;increment pointer
  1663  0F2F  0604               	xorwf	fsr,w		;XOR with final address
  1664  0F30  1903               	btfsc	status,2	;have we reached the end yet?
  1665  0F31  3400               	retlw	0		;all done for this memory range, return
  1666  0F32  0604               	xorwf	fsr,w		;XOR again to restore value
  1667  0F33  2F2D               	goto	clrloop		;do the next byte
  1668                           
  1669                           ; Clear objects allocated to COMMON
  1670                           psect cinit,class=CODE,delta=2,merge=1
  1671  078A  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
  1672  078B  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
  1673  078C  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
  1674                           ; Clear objects allocated to BANK0
  1675                           psect cinit,class=CODE,delta=2,merge=1
  1676  078D  1383               	bcf	status, 7	;select IRP bank0
  1677  078E  3034               	movlw	low(__pbssBANK0)
  1678  078F  0084               	movwf	fsr
  1679  0790  3045               	movlw	low((__pbssBANK0)+011h)
  1680  0791  120A  158A  272C   	fcall	clear_ram
              120A  118A         
  1681                           ; Initialize objects allocated to BANK0
  1682                           	global __pidataBANK0
  1683                           psect cinit,class=CODE,delta=2,merge=1
  1684  0796  120A  158A  2719   	fcall	__pidataBANK0+0		;fetch initializer
              120A  118A         
  1685  079B  00C5               	movwf	__pdataBANK0+0&07fh		
  1686                           ; Initialize objects allocated to COMMON
  1687                           	global __pidataCOMMON
  1688                           psect cinit,class=CODE,delta=2,merge=1
  1689  079C  120A  118A  2003   	fcall	__pidataCOMMON+0		;fetch initializer
              120A  118A         
  1690  07A1  00F9               	movwf	__pdataCOMMON+0&07fh		
  1691                           psect cinit,class=CODE,delta=2,merge=1
  1692                           global end_of_initialization,__end_of__initialization
  1693                           
  1694                           ;End of C runtime variable initialization code
  1695                           
  1696  07A2                     end_of_initialization:
  1697  07A2                     __end_of__initialization:clrf status
      + 07A2  0183               	clrf	3
  1698  07A3  120A  118A  2CA3   ljmp _main	;jump to C main() function
  1699                           psect	cstackCOMMON,class=COMMON,space=1
  1700                           global __pcstackCOMMON
  1701  0070                     __pcstackCOMMON:
  1702  0070                     ?_timer1_isr:	; 0 bytes @ 0x0
  1703  0070                     ??_timer1_isr:	; 0 bytes @ 0x0
  1704  0070                     ?_set_lcd_e:	; 0 bytes @ 0x0
  1705  0070                     ?_lcd_clr:	; 0 bytes @ 0x0
  1706  0070                     ?_set_lcd_rs:	; 0 bytes @ 0x0
  1707  0070                     ?_set_lcd_data:	; 0 bytes @ 0x0
  1708  0070                     ?_UART_SEND:	; 0 bytes @ 0x0
  1709  0070                     ?_UART_INIT:	; 0 bytes @ 0x0
  1710  0070                     ?_UART_DUMP:	; 0 bytes @ 0x0
  1711  0070                     ?_mc40se_init:	; 0 bytes @ 0x0
  1712  0070                     ?_pwm_init:	; 0 bytes @ 0x0
  1713  0070                     ?_relay_off_all:	; 0 bytes @ 0x0
  1714  0070                     ?_timer1_init:	; 0 bytes @ 0x0
  1715  0070                     ?_beep:	; 0 bytes @ 0x0
  1716  0070                     ?_line_following:	; 0 bytes @ 0x0
  1717  0070                     ?_forward:	; 0 bytes @ 0x0
  1718  0070                     ?_line_follow_cross:	; 0 bytes @ 0x0
  1719  0070                     ?_LF:	; 0 bytes @ 0x0
  1720  0070                     ?_run:	; 0 bytes @ 0x0
  1721  0070                     ?_adc_init:	; 0 bytes @ 0x0
  1722  0070                     ?_isr:	; 0 bytes @ 0x0
  1723  0070                     ??_isr:	; 0 bytes @ 0x0
  1724  0070                     ?_lcd_init:	; 0 bytes @ 0x0
  1725  0070                     ?_lcd_2ndline:	; 0 bytes @ 0x0
  1726  0070                     ?_lcd_putchar:	; 0 bytes @ 0x0
  1727  0070                     ?_lcd_putstr:	; 0 bytes @ 0x0
  1728  0070                     ?_lcd_clear_msg:	; 0 bytes @ 0x0
  1729  0070                     ?_UART_REC:	; 1 bytes @ 0x0
  1730  0070                     ?_LSA08_ClearJunction:	; 1 bytes @ 0x0
  1731  0070                     ?_LSA08_UARTMode:	; 1 bytes @ 0x0
  1732  0070                     ?_UART_RESPONSE:	; 1 bytes @ 0x0
  1733  0070                     ?_LSA08_Init:	; 1 bytes @ 0x0
  1734  0070                     ?_LSA08_GetSensor:	; 1 bytes @ 0x0
  1735  0070                     ?_LSA08_GetJunction:	; 1 bytes @ 0x0
  1736  0070                     ?_main:	; 2 bytes @ 0x0
  1737  0070                     	ds	4
  1738  0074                     ??_set_lcd_e:	; 0 bytes @ 0x4
  1739  0074                     ??_set_lcd_rs:	; 0 bytes @ 0x4
  1740  0074                     ??_set_lcd_data:	; 0 bytes @ 0x4
  1741  0074                     ??_UART_REC:	; 0 bytes @ 0x4
  1742  0074                     ??_UART_SEND:	; 0 bytes @ 0x4
  1743  0074                     ??_UART_INIT:	; 0 bytes @ 0x4
  1744  0074                     ??_pwm_init:	; 0 bytes @ 0x4
  1745  0074                     ??_timer1_init:	; 0 bytes @ 0x4
  1746                           	global	?_delay_ms
  1747  0074                     ?_delay_ms:	; 0 bytes @ 0x4
  1748                           	global	?_set_pwm1
  1749  0074                     ?_set_pwm1:	; 0 bytes @ 0x4
  1750                           	global	?_set_pwm2
  1751  0074                     ?_set_pwm2:	; 0 bytes @ 0x4
  1752  0074                     ??_forward:	; 0 bytes @ 0x4
  1753  0074                     ??_run:	; 0 bytes @ 0x4
  1754  0074                     ??_adc_init:	; 0 bytes @ 0x4
  1755                           	global	set_lcd_e@b_output
  1756  0074                     set_lcd_e@b_output:	; 1 bytes @ 0x4
  1757                           	global	set_lcd_rs@b_output
  1758  0074                     set_lcd_rs@b_output:	; 1 bytes @ 0x4
  1759                           	global	set_lcd_data@uc_data
  1760  0074                     set_lcd_data@uc_data:	; 1 bytes @ 0x4
  1761                           	global	UART_SEND@data
  1762  0074                     UART_SEND@data:	; 1 bytes @ 0x4
  1763                           	global	delay_ms@ui_value
  1764  0074                     delay_ms@ui_value:	; 2 bytes @ 0x4
  1765                           	global	set_pwm1@ui_duty_cycle
  1766  0074                     set_pwm1@ui_duty_cycle:	; 2 bytes @ 0x4
  1767                           	global	set_pwm2@ui_duty_cycle
  1768  0074                     set_pwm2@ui_duty_cycle:	; 2 bytes @ 0x4
  1769  0074                     	ds	1
  1770                           	global	?_send_lcd_data
  1771  0075                     ?_send_lcd_data:	; 0 bytes @ 0x5
  1772  0075                     ??_UART_DUMP:	; 0 bytes @ 0x5
  1773  0075                     ??_UART_RESPONSE:	; 0 bytes @ 0x5
  1774                           	global	send_lcd_data@uc_data
  1775  0075                     send_lcd_data@uc_data:	; 1 bytes @ 0x5
  1776  0075                     	ds	1
  1777  0076                     ??_lcd_clr:	; 0 bytes @ 0x6
  1778  0076                     ??_mc40se_init:	; 0 bytes @ 0x6
  1779  0076                     ??_relay_off_all:	; 0 bytes @ 0x6
  1780  0076                     ??_beep:	; 0 bytes @ 0x6
  1781  0076                     ??_lcd_clear_msg:	; 0 bytes @ 0x6
  1782  0076                     ??_LSA08_Init:	; 0 bytes @ 0x6
  1783  0076                     ??_main:	; 0 bytes @ 0x6
  1784                           psect	cstackBANK0,class=BANK0,space=1
  1785                           global __pcstackBANK0
  1786  0020                     __pcstackBANK0:
  1787  0020                     ??_send_lcd_data:	; 0 bytes @ 0x0
  1788  0020                     ??_delay_ms:	; 0 bytes @ 0x0
  1789  0020                     ??_set_pwm1:	; 0 bytes @ 0x0
  1790  0020                     ??_set_pwm2:	; 0 bytes @ 0x0
  1791                           	global	UART_REC@waitcount
  1792  0020                     UART_REC@waitcount:	; 4 bytes @ 0x0
  1793  0020                     	ds	2
  1794                           	global	?_brushless
  1795  0022                     ?_brushless:	; 0 bytes @ 0x2
  1796                           	global	send_lcd_data@uc_pre_portd
  1797  0022                     send_lcd_data@uc_pre_portd:	; 1 bytes @ 0x2
  1798                           	global	beep@uc_count
  1799  0022                     beep@uc_count:	; 1 bytes @ 0x2
  1800                           	global	brushless@uc_motor_status
  1801  0022                     brushless@uc_motor_status:	; 1 bytes @ 0x2
  1802  0022                     	ds	1
  1803                           	global	send_lcd_data@b_rs
  1804  0023                     send_lcd_data@b_rs:	; 1 bytes @ 0x3
  1805                           	global	brushless@uc_motor_dir
  1806  0023                     brushless@uc_motor_dir:	; 1 bytes @ 0x3
  1807  0023                     	ds	1
  1808  0024                     ??_lcd_init:	; 0 bytes @ 0x4
  1809  0024                     ??_lcd_2ndline:	; 0 bytes @ 0x4
  1810  0024                     ??_lcd_putchar:	; 0 bytes @ 0x4
  1811                           	global	UART_REC@rec_data
  1812  0024                     UART_REC@rec_data:	; 1 bytes @ 0x4
  1813                           	global	brushless@ui_speed
  1814  0024                     brushless@ui_speed:	; 2 bytes @ 0x4
  1815  0024                     	ds	1
  1816                           	global	lcd_putchar@c_data
  1817  0025                     lcd_putchar@c_data:	; 1 bytes @ 0x5
  1818                           	global	UART_RESPONSE@rec_bytes
  1819  0025                     UART_RESPONSE@rec_bytes:	; 1 bytes @ 0x5
  1820                           	global	UART_DUMP@dump
  1821  0025                     UART_DUMP@dump:	; 1 bytes @ 0x5
  1822  0025                     	ds	1
  1823  0026                     ??_brushless:	; 0 bytes @ 0x6
  1824  0026                     ??_lcd_putstr:	; 0 bytes @ 0x6
  1825  0026                     ??_LSA08_GetSensor:	; 0 bytes @ 0x6
  1826                           	global	?_SEND_PACKET
  1827  0026                     ?_SEND_PACKET:	; 1 bytes @ 0x6
  1828                           	global	SEND_PACKET@command
  1829  0026                     SEND_PACKET@command:	; 1 bytes @ 0x6
  1830  0026                     	ds	1
  1831                           	global	lcd_putstr@csz_string
  1832  0027                     lcd_putstr@csz_string:	; 1 bytes @ 0x7
  1833                           	global	SEND_PACKET@value
  1834  0027                     SEND_PACKET@value:	; 1 bytes @ 0x7
  1835                           	global	LSA08_GetSensor@sensorbin
  1836  0027                     LSA08_GetSensor@sensorbin:	; 1 bytes @ 0x7
  1837  0027                     	ds	1
  1838                           	global	lcd_clear_msg@csz_string
  1839  0028                     lcd_clear_msg@csz_string:	; 1 bytes @ 0x8
  1840                           	global	SEND_PACKET@com_dat
  1841  0028                     SEND_PACKET@com_dat:	; 1 bytes @ 0x8
  1842                           	global	brushless@uc_port_number
  1843  0028                     brushless@uc_port_number:	; 1 bytes @ 0x8
  1844  0028                     	ds	1
  1845  0029                     ??_LF:	; 0 bytes @ 0x9
  1846  0029                     ??_SEND_PACKET:	; 0 bytes @ 0x9
  1847  0029                     	ds	1
  1848                           	global	SEND_PACKET@add
  1849  002A                     SEND_PACKET@add:	; 1 bytes @ 0xA
  1850                           	global	LF@UARTRC
  1851  002A                     LF@UARTRC:	; 1 bytes @ 0xA
  1852  002A                     	ds	1
  1853  002B                     ??_LSA08_ClearJunction:	; 0 bytes @ 0xB
  1854  002B                     ??_LSA08_UARTMode:	; 0 bytes @ 0xB
  1855  002B                     ??_LSA08_GetJunction:	; 0 bytes @ 0xB
  1856  002B                     	ds	2
  1857  002D                     ??_line_follow_cross:	; 0 bytes @ 0xD
  1858  002D                     	ds	1
  1859                           	global	LSA08_UARTMode@mode
  1860  002E                     LSA08_UARTMode@mode:	; 1 bytes @ 0xE
  1861                           	global	line_follow_cross@cross_count
  1862  002E                     line_follow_cross@cross_count:	; 1 bytes @ 0xE
  1863  002E                     	ds	1
  1864                           	global	line_follow_cross@current_cross
  1865  002F                     line_follow_cross@current_cross:	; 1 bytes @ 0xF
  1866  002F                     	ds	1
  1867                           	global	line_follow_cross@wait
  1868  0030                     line_follow_cross@wait:	; 1 bytes @ 0x10
  1869  0030                     	ds	1
  1870  0031                     ??_line_following:	; 0 bytes @ 0x11
  1871  0031                     	ds	1
  1872                           	global	line_following@cou
  1873  0032                     line_following@cou:	; 1 bytes @ 0x12
  1874  0032                     	ds	1
  1875                           	global	line_following@times
  1876  0033                     line_following@times:	; 1 bytes @ 0x13
  1877  0033                     	ds	1
  1878                           ;!
  1879                           ;!Data Sizes:
  1880                           ;!    Strings     112
  1881                           ;!    Constant    0
  1882                           ;!    Data        2
  1883                           ;!    BSS         20
  1884                           ;!    Persistent  0
  1885                           ;!    Stack       0
  1886                           ;!
  1887                           ;!Auto Spaces:
  1888                           ;!    Space          Size  Autos    Used
  1889                           ;!    COMMON           14      6      10
  1890                           ;!    BANK0            80     20      38
  1891                           ;!    BANK1            80      0       0
  1892                           ;!    BANK3            96      0       0
  1893                           ;!    BANK2            96      0       0
  1894                           
  1895                           ;!
  1896                           ;!Pointer List with Targets:
  1897                           ;!
  1898                           ;!    lcd_clear_msg@csz_string	PTR const unsigned char  size(1) Largest target is 15
  1899                           ;!		 -> STR_14(CODE[9]), STR_13(CODE[8]), STR_12(CODE[8]), STR_11(CODE[7]), 
  1900                           ;!		 -> STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[8]), STR_7(CODE[9]), 
  1901                           ;!		 -> STR_6(CODE[5]), STR_5(CODE[13]), STR_4(CODE[14]), STR_3(CODE[6]), 
  1902                           ;!		 -> STR_2(CODE[14]), STR_1(CODE[15]), 
  1903                           ;!
  1904                           ;!    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 15
  1905                           ;!		 -> STR_14(CODE[9]), STR_13(CODE[8]), STR_12(CODE[8]), STR_11(CODE[7]), 
  1906                           ;!		 -> STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[8]), STR_7(CODE[9]), 
  1907                           ;!		 -> STR_6(CODE[5]), STR_5(CODE[13]), STR_4(CODE[14]), STR_3(CODE[6]), 
  1908                           ;!		 -> STR_2(CODE[14]), STR_1(CODE[15]), 
  1909                           ;!
  1910                           
  1911                           
  1912                           ;!
  1913                           ;!Critical Paths under _main in COMMON
  1914                           ;!
  1915                           ;!    _main->_delay_ms
  1916                           ;!    _lcd_init->_send_lcd_data
  1917                           ;!    _mc40se_init->_delay_ms
  1918                           ;!    _relay_off_all->_delay_ms
  1919                           ;!    _line_following->_delay_ms
  1920                           ;!    _beep->_delay_ms
  1921                           ;!    _SEND_PACKET->_UART_RESPONSE
  1922                           ;!    _UART_RESPONSE->_UART_REC
  1923                           ;!    _LF->_UART_DUMP
  1924                           ;!    _lcd_clr->_send_lcd_data
  1925                           ;!    _lcd_2ndline->_send_lcd_data
  1926                           ;!    _lcd_putchar->_send_lcd_data
  1927                           ;!    _send_lcd_data->_set_lcd_rs
  1928                           ;!    _send_lcd_data->_set_lcd_data
  1929                           ;!    _send_lcd_data->_set_lcd_e
  1930                           ;!    _LSA08_GetSensor->_UART_DUMP
  1931                           ;!    _UART_DUMP->_UART_REC
  1932                           ;!    _brushless->_set_pwm1
  1933                           ;!    _brushless->_set_pwm2
  1934                           ;!
  1935                           ;!Critical Paths under _isr in COMMON
  1936                           ;!
  1937                           ;!    None.
  1938                           ;!
  1939                           ;!Critical Paths under _main in BANK0
  1940                           ;!
  1941                           ;!    _main->_line_following
  1942                           ;!    _lcd_init->_send_lcd_data
  1943                           ;!    _LSA08_Init->_LSA08_UARTMode
  1944                           ;!    _LSA08_UARTMode->_SEND_PACKET
  1945                           ;!    _mc40se_init->_delay_ms
  1946                           ;!    _relay_off_all->_delay_ms
  1947                           ;!    _line_following->_line_follow_cross
  1948                           ;!    _beep->_delay_ms
  1949                           ;!    _line_follow_cross->_LSA08_ClearJunction
  1950                           ;!    _LSA08_ClearJunction->_SEND_PACKET
  1951                           ;!    _LSA08_GetJunction->_SEND_PACKET
  1952                           ;!    _SEND_PACKET->_UART_RESPONSE
  1953                           ;!    _UART_RESPONSE->_UART_REC
  1954                           ;!    _LF->_brushless
  1955                           ;!    _LF->_lcd_clear_msg
  1956                           ;!    _lcd_clear_msg->_lcd_putstr
  1957                           ;!    _lcd_clr->_send_lcd_data
  1958                           ;!    _lcd_putstr->_lcd_putchar
  1959                           ;!    _lcd_2ndline->_send_lcd_data
  1960                           ;!    _lcd_putchar->_send_lcd_data
  1961                           ;!    _LSA08_GetSensor->_UART_DUMP
  1962                           ;!    _UART_DUMP->_UART_REC
  1963                           ;!    _brushless->_set_pwm1
  1964                           ;!    _brushless->_set_pwm2
  1965                           ;!
  1966                           ;!Critical Paths under _isr in BANK0
  1967                           ;!
  1968                           ;!    None.
  1969                           ;!
  1970                           ;!Critical Paths under _main in BANK1
  1971                           ;!
  1972                           ;!    None.
  1973                           ;!
  1974                           ;!Critical Paths under _isr in BANK1
  1975                           ;!
  1976                           ;!    None.
  1977                           ;!
  1978                           ;!Critical Paths under _main in BANK3
  1979                           ;!
  1980                           ;!    None.
  1981                           ;!
  1982                           ;!Critical Paths under _isr in BANK3
  1983                           ;!
  1984                           ;!    None.
  1985                           ;!
  1986                           ;!Critical Paths under _main in BANK2
  1987                           ;!
  1988                           ;!    None.
  1989                           ;!
  1990                           ;!Critical Paths under _isr in BANK2
  1991                           ;!
  1992                           ;!    None.
  1993                           
  1994 ;;
  1995 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1996 ;;
  1997                           
  1998                           ;!
  1999                           ;!Call Graph Tables:
  2000                           ;!
  2001                           ;! ---------------------------------------------------------------------------------
  2002                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2003                           ;! ---------------------------------------------------------------------------------
  2004                           ;! (0) _main                                                 0     0      0    8909
  2005                           ;!                        _mc40se_init
  2006                           ;!                           _pwm_init
  2007                           ;!                      _relay_off_all
  2008                           ;!                           _adc_init
  2009                           ;!                        _timer1_init
  2010                           ;!                           _lcd_init
  2011                           ;!                         _LSA08_Init
  2012                           ;!                          _brushless
  2013                           ;!                      _lcd_clear_msg
  2014                           ;!                           _delay_ms
  2015                           ;!                               _beep
  2016                           ;!                     _line_following
  2017                           ;! ---------------------------------------------------------------------------------
  2018                           ;! (1) _adc_init                                             0     0      0       0
  2019                           ;! ---------------------------------------------------------------------------------
  2020                           ;! (1) _lcd_init                                             2     2      0     663
  2021                           ;!                                              4 BANK0      2     2      0
  2022                           ;!                          _set_lcd_e
  2023                           ;!                      _send_lcd_data
  2024                           ;!                            _lcd_clr
  2025                           ;! ---------------------------------------------------------------------------------
  2026                           ;! (1) _LSA08_Init                                           0     0      0     753
  2027                           ;!                          _UART_INIT
  2028                           ;!                _LSA08_ClearJunction
  2029                           ;!                     _LSA08_UARTMode
  2030                           ;! ---------------------------------------------------------------------------------
  2031                           ;! (2) _UART_INIT                                            0     0      0       0
  2032                           ;! ---------------------------------------------------------------------------------
  2033                           ;! (2) _LSA08_UARTMode                                       4     4      0     409
  2034                           ;!                                             11 BANK0      4     4      0
  2035                           ;!                        _SEND_PACKET
  2036                           ;! ---------------------------------------------------------------------------------
  2037                           ;! (1) _mc40se_init                                          0     0      0      31
  2038                           ;!                           _delay_ms
  2039                           ;! ---------------------------------------------------------------------------------
  2040                           ;! (1) _pwm_init                                             0     0      0       0
  2041                           ;! ---------------------------------------------------------------------------------
  2042                           ;! (1) _relay_off_all                                        0     0      0      31
  2043                           ;!                           _delay_ms
  2044                           ;! ---------------------------------------------------------------------------------
  2045                           ;! (1) _timer1_init                                          0     0      0       0
  2046                           ;! ---------------------------------------------------------------------------------
  2047                           ;! (1) _line_following                                       3     3      0    5705
  2048                           ;!                                             17 BANK0      3     3      0
  2049                           ;!                            _forward
  2050                           ;!                      _lcd_clear_msg
  2051                           ;!                           _delay_ms
  2052                           ;!                               _beep
  2053                           ;!                  _line_follow_cross
  2054                           ;!                          _brushless
  2055                           ;!                    _LSA08_GetSensor
  2056                           ;! ---------------------------------------------------------------------------------
  2057                           ;! (2) _beep                                                 1     1      0      62
  2058                           ;!                                              2 BANK0      1     1      0
  2059                           ;!                           _delay_ms
  2060                           ;! ---------------------------------------------------------------------------------
  2061                           ;! (3) _delay_ms                                             4     2      2      31
  2062                           ;!                                              4 COMMON     2     0      2
  2063                           ;!                                              0 BANK0      2     2      0
  2064                           ;! ---------------------------------------------------------------------------------
  2065                           ;! (2) _forward                                              0     0      0       0
  2066                           ;!                                _run
  2067                           ;! ---------------------------------------------------------------------------------
  2068                           ;! (2) _line_follow_cross                                    4     4      0    3751
  2069                           ;!                                             13 BANK0      4     4      0
  2070                           ;!                          _brushless
  2071                           ;!                                 _LF
  2072                           ;!                  _LSA08_GetJunction
  2073                           ;!                _LSA08_ClearJunction
  2074                           ;! ---------------------------------------------------------------------------------
  2075                           ;! (3) _LSA08_ClearJunction                                  2     2      0     344
  2076                           ;!                                             11 BANK0      2     2      0
  2077                           ;!                        _SEND_PACKET
  2078                           ;! ---------------------------------------------------------------------------------
  2079                           ;! (3) _LSA08_GetJunction                                    1     1      0     344
  2080                           ;!                                             11 BANK0      1     1      0
  2081                           ;!                        _SEND_PACKET
  2082                           ;! ---------------------------------------------------------------------------------
  2083                           ;! (4) _SEND_PACKET                                          5     2      3     344
  2084                           ;!                                              6 BANK0      5     2      3
  2085                           ;!                          _UART_SEND
  2086                           ;!                      _UART_RESPONSE
  2087                           ;! ---------------------------------------------------------------------------------
  2088                           ;! (5) _UART_RESPONSE                                        2     2      0     105
  2089                           ;!                                              5 COMMON     1     1      0
  2090                           ;!                                              5 BANK0      1     1      0
  2091                           ;!                           _UART_REC
  2092                           ;! ---------------------------------------------------------------------------------
  2093                           ;! (5) _UART_SEND                                            1     1      0      22
  2094                           ;!                                              4 COMMON     1     1      0
  2095                           ;! ---------------------------------------------------------------------------------
  2096                           ;! (3) _LF                                                   2     2      0    2397
  2097                           ;!                                              9 BANK0      2     2      0
  2098                           ;!                          _UART_DUMP
  2099                           ;!                    _LSA08_GetSensor
  2100                           ;!                          _brushless
  2101                           ;!                      _lcd_clear_msg
  2102                           ;! ---------------------------------------------------------------------------------
  2103                           ;! (4) _lcd_clear_msg                                        1     1      0    1137
  2104                           ;!                                              8 BANK0      1     1      0
  2105                           ;!                            _lcd_clr
  2106                           ;!                         _lcd_putstr
  2107                           ;! ---------------------------------------------------------------------------------
  2108                           ;! (5) _lcd_clr                                              0     0      0     316
  2109                           ;!                      _send_lcd_data
  2110                           ;! ---------------------------------------------------------------------------------
  2111                           ;! (5) _lcd_putstr                                           2     2      0     790
  2112                           ;!                                              6 BANK0      2     2      0
  2113                           ;!                        _lcd_2ndline
  2114                           ;!                        _lcd_putchar
  2115                           ;! ---------------------------------------------------------------------------------
  2116                           ;! (6) _lcd_2ndline                                          1     1      0     316
  2117                           ;!                                              4 BANK0      1     1      0
  2118                           ;!                      _send_lcd_data
  2119                           ;! ---------------------------------------------------------------------------------
  2120                           ;! (6) _lcd_putchar                                          2     2      0     347
  2121                           ;!                                              4 BANK0      2     2      0
  2122                           ;!                      _send_lcd_data
  2123                           ;! ---------------------------------------------------------------------------------
  2124                           ;! (7) _send_lcd_data                                        5     4      1     316
  2125                           ;!                                              5 COMMON     1     0      1
  2126                           ;!                                              0 BANK0      4     4      0
  2127                           ;!                         _set_lcd_rs
  2128                           ;!                       _set_lcd_data
  2129                           ;!                          _set_lcd_e
  2130                           ;! ---------------------------------------------------------------------------------
  2131                           ;! (8) _set_lcd_e                                            1     1      0      31
  2132                           ;!                                              4 COMMON     1     1      0
  2133                           ;! ---------------------------------------------------------------------------------
  2134                           ;! (8) _set_lcd_rs                                           1     1      0      31
  2135                           ;!                                              4 COMMON     1     1      0
  2136                           ;! ---------------------------------------------------------------------------------
  2137                           ;! (8) _set_lcd_data                                         1     1      0      31
  2138                           ;!                                              4 COMMON     1     1      0
  2139                           ;! ---------------------------------------------------------------------------------
  2140                           ;! (2) _LSA08_GetSensor                                      2     2      0     185
  2141                           ;!                                              6 BANK0      2     2      0
  2142                           ;!                           _UART_REC
  2143                           ;!                          _UART_DUMP
  2144                           ;! ---------------------------------------------------------------------------------
  2145                           ;! (3) _UART_DUMP                                            2     2      0      77
  2146                           ;!                                              5 COMMON     1     1      0
  2147                           ;!                                              5 BANK0      1     1      0
  2148                           ;!                           _UART_REC
  2149                           ;! ---------------------------------------------------------------------------------
  2150                           ;! (4) _UART_REC                                             6     6      0      74
  2151                           ;!                                              4 COMMON     1     1      0
  2152                           ;!                                              0 BANK0      5     5      0
  2153                           ;! ---------------------------------------------------------------------------------
  2154                           ;! (2) _brushless                                            7     3      4     496
  2155                           ;!                                              2 BANK0      7     3      4
  2156                           ;!                           _set_pwm1
  2157                           ;!                           _set_pwm2
  2158                           ;! ---------------------------------------------------------------------------------
  2159                           ;! (3) _set_pwm1                                             4     2      2      62
  2160                           ;!                                              4 COMMON     2     0      2
  2161                           ;!                                              0 BANK0      2     2      0
  2162                           ;! ---------------------------------------------------------------------------------
  2163                           ;! (3) _set_pwm2                                             4     2      2      62
  2164                           ;!                                              4 COMMON     2     0      2
  2165                           ;!                                              0 BANK0      2     2      0
  2166                           ;! ---------------------------------------------------------------------------------
  2167                           ;! (3) _run                                                  0     0      0       0
  2168                           ;! ---------------------------------------------------------------------------------
  2169                           ;! Estimated maximum stack depth 8
  2170                           ;! ---------------------------------------------------------------------------------
  2171                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2172                           ;! ---------------------------------------------------------------------------------
  2173                           ;! (9) _isr                                                  4     4      0       0
  2174                           ;!                                              0 COMMON     4     4      0
  2175                           ;!                         _timer1_isr
  2176                           ;! ---------------------------------------------------------------------------------
  2177                           ;! (10) _timer1_isr                                          0     0      0       0
  2178                           ;! ---------------------------------------------------------------------------------
  2179                           ;! Estimated maximum stack depth 10
  2180                           ;! ---------------------------------------------------------------------------------
  2181                           ;!
  2182                           ;! Call Graph Graphs:
  2183                           ;!
  2184                           ;! _main (ROOT)
  2185                           ;!   _mc40se_init
  2186                           ;!     _delay_ms
  2187                           ;!   _pwm_init
  2188                           ;!   _relay_off_all
  2189                           ;!     _delay_ms
  2190                           ;!   _adc_init
  2191                           ;!   _timer1_init
  2192                           ;!   _lcd_init
  2193                           ;!     _set_lcd_e
  2194                           ;!     _send_lcd_data
  2195                           ;!       _set_lcd_rs
  2196                           ;!       _set_lcd_data
  2197                           ;!       _set_lcd_e
  2198                           ;!     _lcd_clr
  2199                           ;!       _send_lcd_data
  2200                           ;!         _set_lcd_rs
  2201                           ;!         _set_lcd_data
  2202                           ;!         _set_lcd_e
  2203                           ;!   _LSA08_Init
  2204                           ;!     _UART_INIT
  2205                           ;!     _LSA08_ClearJunction
  2206                           ;!       _SEND_PACKET
  2207                           ;!         _UART_SEND
  2208                           ;!         _UART_RESPONSE
  2209                           ;!           _UART_REC
  2210                           ;!     _LSA08_UARTMode
  2211                           ;!       _SEND_PACKET
  2212                           ;!         _UART_SEND
  2213                           ;!         _UART_RESPONSE
  2214                           ;!           _UART_REC
  2215                           ;!   _brushless
  2216                           ;!     _set_pwm1
  2217                           ;!     _set_pwm2
  2218                           ;!   _lcd_clear_msg
  2219                           ;!     _lcd_clr
  2220                           ;!       _send_lcd_data
  2221                           ;!         _set_lcd_rs
  2222                           ;!         _set_lcd_data
  2223                           ;!         _set_lcd_e
  2224                           ;!     _lcd_putstr
  2225                           ;!       _lcd_2ndline
  2226                           ;!         _send_lcd_data
  2227                           ;!           _set_lcd_rs
  2228                           ;!           _set_lcd_data
  2229                           ;!           _set_lcd_e
  2230                           ;!       _lcd_putchar
  2231                           ;!         _send_lcd_data
  2232                           ;!           _set_lcd_rs
  2233                           ;!           _set_lcd_data
  2234                           ;!           _set_lcd_e
  2235                           ;!   _delay_ms
  2236                           ;!   _beep
  2237                           ;!     _delay_ms
  2238                           ;!   _line_following
  2239                           ;!     _forward
  2240                           ;!       _run
  2241                           ;!     _lcd_clear_msg
  2242                           ;!       _lcd_clr
  2243                           ;!         _send_lcd_data
  2244                           ;!           _set_lcd_rs
  2245                           ;!           _set_lcd_data
  2246                           ;!           _set_lcd_e
  2247                           ;!       _lcd_putstr
  2248                           ;!         _lcd_2ndline
  2249                           ;!           _send_lcd_data
  2250                           ;!             _set_lcd_rs
  2251                           ;!             _set_lcd_data
  2252                           ;!             _set_lcd_e
  2253                           ;!         _lcd_putchar
  2254                           ;!           _send_lcd_data
  2255                           ;!             _set_lcd_rs
  2256                           ;!             _set_lcd_data
  2257                           ;!             _set_lcd_e
  2258                           ;!     _delay_ms
  2259                           ;!     _beep
  2260                           ;!       _delay_ms
  2261                           ;!     _line_follow_cross
  2262                           ;!       _brushless
  2263                           ;!         _set_pwm1
  2264                           ;!         _set_pwm2
  2265                           ;!       _LF
  2266                           ;!         _UART_DUMP
  2267                           ;!           _UART_REC
  2268                           ;!         _LSA08_GetSensor
  2269                           ;!           _UART_REC
  2270                           ;!           _UART_DUMP
  2271                           ;!             _UART_REC
  2272                           ;!         _brushless
  2273                           ;!           _set_pwm1
  2274                           ;!           _set_pwm2
  2275                           ;!         _lcd_clear_msg
  2276                           ;!           _lcd_clr
  2277                           ;!             _send_lcd_data
  2278                           ;!               _set_lcd_rs
  2279                           ;!               _set_lcd_data
  2280                           ;!               _set_lcd_e
  2281                           ;!           _lcd_putstr
  2282                           ;!             _lcd_2ndline
  2283                           ;!               _send_lcd_data
  2284                           ;!                 _set_lcd_rs
  2285                           ;!                 _set_lcd_data
  2286                           ;!                 _set_lcd_e
  2287                           ;!             _lcd_putchar
  2288                           ;!               _send_lcd_data
  2289                           ;!                 _set_lcd_rs
  2290                           ;!                 _set_lcd_data
  2291                           ;!                 _set_lcd_e
  2292                           ;!       _LSA08_GetJunction
  2293                           ;!         _SEND_PACKET
  2294                           ;!           _UART_SEND
  2295                           ;!           _UART_RESPONSE
  2296                           ;!             _UART_REC
  2297                           ;!       _LSA08_ClearJunction
  2298                           ;!         _SEND_PACKET
  2299                           ;!           _UART_SEND
  2300                           ;!           _UART_RESPONSE
  2301                           ;!             _UART_REC
  2302                           ;!     _brushless
  2303                           ;!       _set_pwm1
  2304                           ;!       _set_pwm2
  2305                           ;!     _LSA08_GetSensor
  2306                           ;!       _UART_REC
  2307                           ;!       _UART_DUMP
  2308                           ;!         _UART_REC
  2309                           ;!
  2310                           ;! _isr (ROOT)
  2311                           ;!   _timer1_isr
  2312                           ;!
  2313                           
  2314                           ;! Address spaces:
  2315                           
  2316                           ;!Name               Size   Autos  Total    Cost      Usage
  2317                           ;!BANK3               60      0       0       9        0.0%
  2318                           ;!BITBANK3            60      0       0       8        0.0%
  2319                           ;!SFR3                 0      0       0       4        0.0%
  2320                           ;!BITSFR3              0      0       0       4        0.0%
  2321                           ;!BANK2               60      0       0      11        0.0%
  2322                           ;!BITBANK2            60      0       0      10        0.0%
  2323                           ;!SFR2                 0      0       0       5        0.0%
  2324                           ;!BITSFR2              0      0       0       5        0.0%
  2325                           ;!BANK1               50      0       0       7        0.0%
  2326                           ;!BITBANK1            50      0       0       6        0.0%
  2327                           ;!SFR1                 0      0       0       2        0.0%
  2328                           ;!BITSFR1              0      0       0       2        0.0%
  2329                           ;!BANK0               50     14      26       5       47.5%
  2330                           ;!BITBANK0            50      0       0       4        0.0%
  2331                           ;!SFR0                 0      0       0       1        0.0%
  2332                           ;!BITSFR0              0      0       0       1        0.0%
  2333                           ;!COMMON               E      6       A       1       71.4%
  2334                           ;!BITCOMMON            E      0       0       0        0.0%
  2335                           ;!CODE                 0      0       0       0        0.0%
  2336                           ;!DATA                 0      0      3C      12        0.0%
  2337                           ;!ABS                  0      0      30       3        0.0%
  2338                           ;!NULL                 0      0       0       0        0.0%
  2339                           ;!STACK                0      0       C       2        0.0%
  2340                           ;!EEDATA             100      0       0       0        0.0%
  2341                           
  2342                           	global	_main
  2343                           
  2344 ;; *************** function _main *****************
  2345 ;; Defined at:
  2346 ;;		line 167 in file "../MC40SE Line Following UART.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  2  325[COMMON] int 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 17F/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2360 ;;      Params:         0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels required when called:   10
  2366 ;; This function calls:
  2367 ;;		_mc40se_init
  2368 ;;		_pwm_init
  2369 ;;		_relay_off_all
  2370 ;;		_adc_init
  2371 ;;		_timer1_init
  2372 ;;		_lcd_init
  2373 ;;		_LSA08_Init
  2374 ;;		_brushless
  2375 ;;		_lcd_clear_msg
  2376 ;;		_delay_ms
  2377 ;;		_beep
  2378 ;;		_line_following
  2379 ;; This function is called by:
  2380 ;;		Startup code after reset
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           psect	maintext,global,class=CODE,delta=2,split=1
  2384                           global __pmaintext
  2385  04A3                     __pmaintext:	;psect for function _main
  2386                           psect	maintext
  2387                           	file	"../MC40SE Line Following UART.c"
  2388                           	line	167
  2389                           	global	__size_of_main
  2390  0072                     	__size_of_main	equ	__end_of_main-_main
  2391                           	
  2392  04A3                     _main:	
  2393 ;; hardware stack exceeded
  2394                           	opt	stack 0
  2395                           ; Regs used in _main: [allreg]
  2396                           	line	170
  2397                           	
  2398  04A3                     l2920:	
  2399                           ;MC40SE Line Following UART.c: 170: mc40se_init();
  2400  04A3  120A  118A  26B2   	fcall	_mc40se_init
              120A  118A         
  2401                           	line	173
  2402                           ;MC40SE Line Following UART.c: 173: pwm_init();
  2403  04A8  120A  118A  27A6   	fcall	_pwm_init
              120A  118A         
  2404                           	line	176
  2405                           ;MC40SE Line Following UART.c: 176: relay_off_all();
  2406  04AD  120A  158A  278C   	fcall	_relay_off_all
              120A  118A         
  2407                           	line	179
  2408                           	
  2409  04B2                     l2922:	
  2410                           ;MC40SE Line Following UART.c: 179: adc_init();
  2411  04B2  120A  118A  276D   	fcall	_adc_init
              120A  118A         
  2412                           	line	182
  2413                           	
  2414  04B7                     l2924:	
  2415                           ;MC40SE Line Following UART.c: 182: timer1_init();
  2416  04B7  120A  158A  27C4   	fcall	_timer1_init
              120A  118A         
  2417                           	line	185
  2418                           ;MC40SE Line Following UART.c: 185: lcd_init();
  2419  04BC  120A  118A  2515   	fcall	_lcd_init
              120A  118A         
  2420                           	line	188
  2421                           ;MC40SE Line Following UART.c: 188: LSA08_Init();
  2422  04C1  120A  158A  27EB   	fcall	_LSA08_Init
              120A  118A         
  2423                           	line	191
  2424                           ;MC40SE Line Following UART.c: 191: brushless(1, 1, 0, 0);
  2425  04C6  1283               	bcf	status, 5	;RP0=0, select bank0
  2426  04C7  1303               	bcf	status, 6	;RP1=0, select bank0
  2427  04C8  01A2               	clrf	(?_brushless)
  2428  04C9  0AA2               	incf	(?_brushless),f
  2429  04CA  01A3               	clrf	0+(?_brushless)+01h
  2430  04CB  3000               	movlw	low(0)
  2431  04CC  00A4               	movwf	0+(?_brushless)+02h
  2432  04CD  3000               	movlw	high(0)
  2433  04CE  00A5               	movwf	(0+(?_brushless)+02h)+1
  2434  04CF  3001               	movlw	(01h)
  2435  04D0  120A  118A  231B   	fcall	_brushless
              120A  118A         
  2436                           	line	192
  2437                           ;MC40SE Line Following UART.c: 192: brushless(2, 1, 1, 0);
  2438  04D5  1283               	bcf	status, 5	;RP0=0, select bank0
  2439  04D6  1303               	bcf	status, 6	;RP1=0, select bank0
  2440  04D7  01A2               	clrf	(?_brushless)
  2441  04D8  0AA2               	incf	(?_brushless),f
  2442  04D9  01A3               	clrf	0+(?_brushless)+01h
  2443  04DA  0AA3               	incf	0+(?_brushless)+01h,f
  2444  04DB  3000               	movlw	low(0)
  2445  04DC  00A4               	movwf	0+(?_brushless)+02h
  2446  04DD  3000               	movlw	high(0)
  2447  04DE  00A5               	movwf	(0+(?_brushless)+02h)+1
  2448  04DF  3002               	movlw	(02h)
  2449  04E0  120A  118A  231B   	fcall	_brushless
              120A  118A         
  2450                           	line	195
  2451                           	
  2452  04E5                     l2926:	
  2453                           ;MC40SE Line Following UART.c: 195: lcd_clear_msg(" MC40SE\n LSA08");
  2454  04E5  3001               	movlw	((STR_1-__stringbase))&0ffh
  2455  04E6  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  2456                           	line	196
  2457                           	
  2458  04EB                     l2928:	
  2459                           ;MC40SE Line Following UART.c: 196: delay_ms(1000);
  2460  04EB  30E8               	movlw	low(03E8h)
  2461  04EC  00F4               	movwf	(?_delay_ms)
  2462  04ED  3003               	movlw	high(03E8h)
  2463  04EE  00F5               	movwf	((?_delay_ms))+1
  2464  04EF  120A  118A  2731   	fcall	_delay_ms
              120A  118A         
  2465                           	line	198
  2466                           	
  2467  04F4                     l2930:	
  2468                           ;MC40SE Line Following UART.c: 198: beep(2);
  2469  04F4  3002               	movlw	(02h)
  2470  04F5  120A  118A  268B   	fcall	_beep
              120A  118A         
  2471                           	line	199
  2472                           	
  2473  04FA                     l2932:	
  2474                           ;MC40SE Line Following UART.c: 199: lcd_clear_msg("  Line\nFollow");
  2475  04FA  301E               	movlw	((STR_2-__stringbase))&0ffh
  2476  04FB  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  2477                           	line	201
  2478                           	
  2479  0500                     l2934:	
  2480                           ;MC40SE Line Following UART.c: 201: line_following();
  2481  0500  120A  118A  21B3   	fcall	_line_following
              120A  118A         
  2482                           	line	203
  2483                           	
  2484  0505                     l2936:	
  2485                           ;MC40SE Line Following UART.c: 203: lcd_clear_msg("Done!");
  2486  0505  3066               	movlw	((STR_3-__stringbase))&0ffh
  2487  0506  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  2488                           	line	204
  2489                           	
  2490  050B                     l2938:	
  2491                           ;MC40SE Line Following UART.c: 204: beep(5);
  2492  050B  3005               	movlw	(05h)
  2493  050C  120A  118A  268B   	fcall	_beep
              120A  118A         
  2494                           	line	206
  2495                           ;MC40SE Line Following UART.c: 206: while(1) continue;
  2496                           	
  2497  0511                     l326:	
  2498                           	
  2499  0511                     l327:	
  2500  0511  2D11               	goto	l326
  2501                           	
  2502  0512                     l328:	
  2503                           	line	207
  2504                           	
  2505  0512                     l329:	
  2506                           	global	start
  2507  0512  120A  118A  2812   	ljmp	start
  2508                           	opt stack 0
  2509                           GLOBAL	__end_of_main
  2510  0515                     	__end_of_main:
  2511                           	signat	_main,90
  2512                           	global	_adc_init
  2513                           
  2514 ;; *************** function _adc_init *****************
  2515 ;; Defined at:
  2516 ;;		line 29 in file "../adc.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;		None               void
  2523 ;; Registers used:
  2524 ;;		None
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2530 ;;      Params:         0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0
  2533 ;;      Totals:         0       0       0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    2
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           psect	text1275,local,class=CODE,delta=2,merge=1
  2544                           global __ptext1275
  2545  076D                     __ptext1275:	;psect for function _adc_init
  2546                           psect	text1275
  2547                           	file	"../adc.c"
  2548                           	line	29
  2549                           	global	__size_of_adc_init
  2550  001D                     	__size_of_adc_init	equ	__end_of_adc_init-_adc_init
  2551                           	
  2552  076D                     _adc_init:	
  2553                           	opt	stack 5
  2554                           ; Regs used in _adc_init: []
  2555                           	line	32
  2556                           	
  2557  076D                     l1206:	
  2558                           ;adc.c: 32: ADCS1 = 1;
  2559  076D  1283               	bcf	status, 5	;RP0=0, select bank0
  2560  076E  1303               	bcf	status, 6	;RP1=0, select bank0
  2561  076F  179F               	bsf	(255/8),(255)&7	;volatile
  2562                           	line	33
  2563                           ;adc.c: 33: ADCS0 = 0;
  2564  0770  131F               	bcf	(254/8),(254)&7	;volatile
  2565                           	line	36
  2566                           ;adc.c: 36: ANS0 = 1;
  2567  0771  1683               	bsf	status, 5	;RP0=1, select bank3
  2568  0772  1703               	bsf	status, 6	;RP1=1, select bank3
  2569  0773  1408               	bsf	(3136/8)^0180h,(3136)&7	;volatile
  2570                           	line	37
  2571                           ;adc.c: 37: ANS1 = 0;
  2572  0774  1088               	bcf	(3137/8)^0180h,(3137)&7	;volatile
  2573                           	line	38
  2574                           ;adc.c: 38: ANS2 = 0;
  2575  0775  1108               	bcf	(3138/8)^0180h,(3138)&7	;volatile
  2576                           	line	39
  2577                           ;adc.c: 39: ANS3 = 0;
  2578  0776  1188               	bcf	(3139/8)^0180h,(3139)&7	;volatile
  2579                           	line	40
  2580                           ;adc.c: 40: ANS4 = 0;
  2581  0777  1208               	bcf	(3140/8)^0180h,(3140)&7	;volatile
  2582                           	line	41
  2583                           ;adc.c: 41: ANS5 = 0;
  2584  0778  1288               	bcf	(3141/8)^0180h,(3141)&7	;volatile
  2585                           	line	42
  2586                           ;adc.c: 42: ANS6 = 0;
  2587  0779  1308               	bcf	(3142/8)^0180h,(3142)&7	;volatile
  2588                           	line	43
  2589                           ;adc.c: 43: ANS7 = 0;
  2590  077A  1388               	bcf	(3143/8)^0180h,(3143)&7	;volatile
  2591                           	line	44
  2592                           ;adc.c: 44: ANS8 = 0;
  2593  077B  1009               	bcf	(3144/8)^0180h,(3144)&7	;volatile
  2594                           	line	45
  2595                           ;adc.c: 45: ANS9 = 0;
  2596  077C  1089               	bcf	(3145/8)^0180h,(3145)&7	;volatile
  2597                           	line	46
  2598                           ;adc.c: 46: ANS10 = 0;
  2599  077D  1109               	bcf	(3146/8)^0180h,(3146)&7	;volatile
  2600                           	line	47
  2601                           ;adc.c: 47: ANS11 = 0;
  2602  077E  1189               	bcf	(3147/8)^0180h,(3147)&7	;volatile
  2603                           	line	48
  2604                           ;adc.c: 48: ANS12 = 0;
  2605  077F  1209               	bcf	(3148/8)^0180h,(3148)&7	;volatile
  2606                           	line	49
  2607                           ;adc.c: 49: ANS13 = 0;
  2608  0780  1289               	bcf	(3149/8)^0180h,(3149)&7	;volatile
  2609                           	line	52
  2610                           ;adc.c: 52: ADFM = 1;
  2611  0781  1683               	bsf	status, 5	;RP0=1, select bank1
  2612  0782  1303               	bcf	status, 6	;RP1=0, select bank1
  2613  0783  179F               	bsf	(1279/8)^080h,(1279)&7	;volatile
  2614                           	line	55
  2615                           ;adc.c: 55: VCFG1 = 0;
  2616  0784  129F               	bcf	(1277/8)^080h,(1277)&7	;volatile
  2617                           	line	58
  2618                           ;adc.c: 58: VCFG0 = 0;
  2619  0785  121F               	bcf	(1276/8)^080h,(1276)&7	;volatile
  2620                           	line	61
  2621                           ;adc.c: 61: ADON = 0;
  2622  0786  1283               	bcf	status, 5	;RP0=0, select bank0
  2623  0787  1303               	bcf	status, 6	;RP1=0, select bank0
  2624  0788  101F               	bcf	(248/8),(248)&7	;volatile
  2625                           	line	80
  2626                           	
  2627  0789                     l59:	
  2628  0789  0008               	return
  2629                           	opt stack 0
  2630                           GLOBAL	__end_of_adc_init
  2631  078A                     	__end_of_adc_init:
  2632                           	signat	_adc_init,88
  2633                           	global	_lcd_init
  2634                           
  2635 ;; *************** function _lcd_init *****************
  2636 ;; Defined at:
  2637 ;;		line 113 in file "../lcd.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;		None               void
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0, pclath, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2651 ;;      Params:         0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0
  2653 ;;      Temps:          0       2       0       0       0
  2654 ;;      Totals:         0       2       0       0       0
  2655 ;;Total ram usage:        2 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    5
  2658 ;; This function calls:
  2659 ;;		_set_lcd_e
  2660 ;;		_send_lcd_data
  2661 ;;		_lcd_clr
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           psect	text1276,local,class=CODE,delta=2,merge=1
  2667                           global __ptext1276
  2668  0515                     __ptext1276:	;psect for function _lcd_init
  2669                           psect	text1276
  2670                           	file	"../lcd.c"
  2671                           	line	113
  2672                           	global	__size_of_lcd_init
  2673  006D                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  2674                           	
  2675  0515                     _lcd_init:	
  2676                           	opt	stack 2
  2677                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2678                           	line	116
  2679                           	
  2680  0515                     l2652:	
  2681                           ;lcd.c: 116: set_lcd_e(1);
  2682  0515  3001               	movlw	(01h)
  2683  0516  120A  158A  2749   	fcall	_set_lcd_e
              120A  118A         
  2684                           	line	117
  2685                           	
  2686  051B                     l2654:	
  2687                           ;lcd.c: 117: _delay((unsigned long)((15)*(8000000/4000.0)));
  2688                           	opt asmopt_off
  2689  051B  3027               movlw	39
  2690  051C  1283               	bcf	status, 5	;RP0=0, select bank0
  2691  051D  1303               	bcf	status, 6	;RP1=0, select bank0
  2692  051E  00A5               movwf	((??_lcd_init+0)+0+1),f
  2693  051F  30F5               	movlw	245
  2694  0520  00A4               movwf	((??_lcd_init+0)+0),f
  2695  0521                     u2707:
  2696  0521  0BA4               	decfsz	((??_lcd_init+0)+0),f
  2697  0522  2D21               	goto	u2707
  2698  0523  0BA5               	decfsz	((??_lcd_init+0)+0+1),f
  2699  0524  2D21               	goto	u2707
  2700                           opt asmopt_on
  2701                           
  2702                           	line	122
  2703                           	
  2704  0525                     l2656:	
  2705                           ;lcd.c: 122: b_4_bits_data_bus = 0;
  2706  0525  01F9               	clrf	(_b_4_bits_data_bus)
  2707                           	line	123
  2708                           	
  2709  0526                     l2658:	
  2710                           ;lcd.c: 123: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000 );
  2711  0526  3038               	movlw	(038h)
  2712  0527  1283               	bcf	status, 5	;RP0=0, select bank0
  2713  0528  1303               	bcf	status, 6	;RP1=0, select bank0
  2714  0529  00A4               	movwf	(??_lcd_init+0)+0
  2715  052A  0824               	movf	(??_lcd_init+0)+0,w
  2716  052B  00F5               	movwf	(?_send_lcd_data)
  2717  052C  3000               	movlw	(0)
  2718  052D  120A  118A  226D   	fcall	_send_lcd_data
              120A  118A         
  2719                           	line	124
  2720                           	
  2721  0532                     l2660:	
  2722                           ;lcd.c: 124: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000 );
  2723  0532  3038               	movlw	(038h)
  2724  0533  1283               	bcf	status, 5	;RP0=0, select bank0
  2725  0534  1303               	bcf	status, 6	;RP1=0, select bank0
  2726  0535  00A4               	movwf	(??_lcd_init+0)+0
  2727  0536  0824               	movf	(??_lcd_init+0)+0,w
  2728  0537  00F5               	movwf	(?_send_lcd_data)
  2729  0538  3000               	movlw	(0)
  2730  0539  120A  118A  226D   	fcall	_send_lcd_data
              120A  118A         
  2731                           	line	125
  2732                           	
  2733  053E                     l2662:	
  2734                           ;lcd.c: 125: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000 );
  2735  053E  3038               	movlw	(038h)
  2736  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  2737  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  2738  0541  00A4               	movwf	(??_lcd_init+0)+0
  2739  0542  0824               	movf	(??_lcd_init+0)+0,w
  2740  0543  00F5               	movwf	(?_send_lcd_data)
  2741  0544  3000               	movlw	(0)
  2742  0545  120A  118A  226D   	fcall	_send_lcd_data
              120A  118A         
  2743                           	line	127
  2744                           	
  2745  054A                     l2664:	
  2746                           ;lcd.c: 127: send_lcd_data(0, 0b00100000 | 0b00000000 | 0b00001000 | 0b00000000);
  2747  054A  3028               	movlw	(028h)
  2748  054B  1283               	bcf	status, 5	;RP0=0, select bank0
  2749  054C  1303               	bcf	status, 6	;RP1=0, select bank0
  2750  054D  00A4               	movwf	(??_lcd_init+0)+0
  2751  054E  0824               	movf	(??_lcd_init+0)+0,w
  2752  054F  00F5               	movwf	(?_send_lcd_data)
  2753  0550  3000               	movlw	(0)
  2754  0551  120A  118A  226D   	fcall	_send_lcd_data
              120A  118A         
  2755                           	line	129
  2756                           	
  2757  0556                     l2666:	
  2758                           ;lcd.c: 129: b_4_bits_data_bus = 1;
  2759  0556  01F9               	clrf	(_b_4_bits_data_bus)
  2760  0557  0AF9               	incf	(_b_4_bits_data_bus),f
  2761                           	line	130
  2762                           	
  2763  0558                     l2668:	
  2764                           ;lcd.c: 130: send_lcd_data(0, 0b00100000 | 0b00000000 | 0b00001000 | 0b00000000);
  2765  0558  3028               	movlw	(028h)
  2766  0559  1283               	bcf	status, 5	;RP0=0, select bank0
  2767  055A  1303               	bcf	status, 6	;RP1=0, select bank0
  2768  055B  00A4               	movwf	(??_lcd_init+0)+0
  2769  055C  0824               	movf	(??_lcd_init+0)+0,w
  2770  055D  00F5               	movwf	(?_send_lcd_data)
  2771  055E  3000               	movlw	(0)
  2772  055F  120A  118A  226D   	fcall	_send_lcd_data
              120A  118A         
  2773                           	line	132
  2774                           	
  2775  0564                     l2670:	
  2776                           ;lcd.c: 132: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  2777  0564  3006               	movlw	(06h)
  2778  0565  1283               	bcf	status, 5	;RP0=0, select bank0
  2779  0566  1303               	bcf	status, 6	;RP1=0, select bank0
  2780  0567  00A4               	movwf	(??_lcd_init+0)+0
  2781  0568  0824               	movf	(??_lcd_init+0)+0,w
  2782  0569  00F5               	movwf	(?_send_lcd_data)
  2783  056A  3000               	movlw	(0)
  2784  056B  120A  118A  226D   	fcall	_send_lcd_data
              120A  118A         
  2785                           	line	135
  2786                           	
  2787  0570                     l2672:	
  2788                           ;lcd.c: 135: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  2789  0570  300C               	movlw	(0Ch)
  2790  0571  1283               	bcf	status, 5	;RP0=0, select bank0
  2791  0572  1303               	bcf	status, 6	;RP1=0, select bank0
  2792  0573  00A4               	movwf	(??_lcd_init+0)+0
  2793  0574  0824               	movf	(??_lcd_init+0)+0,w
  2794  0575  00F5               	movwf	(?_send_lcd_data)
  2795  0576  3000               	movlw	(0)
  2796  0577  120A  118A  226D   	fcall	_send_lcd_data
              120A  118A         
  2797                           	line	138
  2798                           	
  2799  057C                     l2674:	
  2800                           ;lcd.c: 138: lcd_clr();
  2801  057C  120A  158A  2734   	fcall	_lcd_clr
              120A  118A         
  2802                           	line	139
  2803                           	
  2804  0581                     l96:	
  2805  0581  0008               	return
  2806                           	opt stack 0
  2807                           GLOBAL	__end_of_lcd_init
  2808  0582                     	__end_of_lcd_init:
  2809                           	signat	_lcd_init,88
  2810                           	global	_LSA08_Init
  2811                           
  2812 ;; *************** function _LSA08_Init *****************
  2813 ;; Defined at:
  2814 ;;		line 255 in file "../LSA08.h"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      unsigned char 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, pclath, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0
  2831 ;;      Totals:         0       0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    6
  2835 ;; This function calls:
  2836 ;;		_UART_INIT
  2837 ;;		_LSA08_ClearJunction
  2838 ;;		_LSA08_UARTMode
  2839 ;; This function is called by:
  2840 ;;		_main
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           psect	text1277,local,class=CODE,delta=2,merge=1
  2844                           global __ptext1277
  2845  0FEB                     __ptext1277:	;psect for function _LSA08_Init
  2846                           psect	text1277
  2847                           	file	"../LSA08.h"
  2848                           	line	255
  2849                           	global	__size_of_LSA08_Init
  2850  0015                     	__size_of_LSA08_Init	equ	__end_of_LSA08_Init-_LSA08_Init
  2851                           	
  2852  0FEB                     _LSA08_Init:	
  2853                           	opt	stack 1
  2854                           ; Regs used in _LSA08_Init: [wreg+status,2+status,0+pclath+cstack]
  2855                           	line	257
  2856                           	
  2857  0FEB                     l2838:	
  2858                           ;LSA08.h: 257: UART_INIT();
  2859  0FEB  120A  118A  27C0   	fcall	_UART_INIT
              120A  158A         
  2860                           	line	259
  2861                           	
  2862  0FF0                     l2840:	
  2863                           ;LSA08.h: 259: RB0=1;
  2864  0FF0  1283               	bcf	status, 5	;RP0=0, select bank0
  2865  0FF1  1303               	bcf	status, 6	;RP1=0, select bank0
  2866  0FF2  1406               	bsf	(48/8),(48)&7	;volatile
  2867                           	line	261
  2868                           ;LSA08.h: 261: LSA08_ClearJunction();
  2869  0FF3  120A  158A  27B1   	fcall	_LSA08_ClearJunction
              120A  158A         
  2870                           	line	262
  2871                           ;LSA08.h: 262: return(LSA08_UARTMode(1));
  2872                           ;	Return value of _LSA08_Init is never used
  2873  0FF8  3001               	movlw	(01h)
  2874  0FF9  120A  118A  26D4   	fcall	_LSA08_UARTMode
              120A  158A         
  2875  0FFE  2FFF               	goto	l280
  2876                           	
  2877  0FFF                     l2842:	
  2878                           	line	264
  2879                           	
  2880  0FFF                     l280:	
  2881  0FFF  0008               	return
  2882                           	opt stack 0
  2883                           GLOBAL	__end_of_LSA08_Init
  2884  1000                     	__end_of_LSA08_Init:
  2885                           	signat	_LSA08_Init,89
  2886                           	global	_UART_INIT
  2887                           
  2888 ;; *************** function _UART_INIT *****************
  2889 ;; Defined at:
  2890 ;;		line 821 in file "../MC40SE Line Following UART.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;		None               void
  2897 ;; Registers used:
  2898 ;;		wreg, status,2
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2904 ;;      Params:         0       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0
  2907 ;;      Totals:         0       0       0       0       0
  2908 ;;Total ram usage:        0 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:    2
  2911 ;; This function calls:
  2912 ;;		Nothing
  2913 ;; This function is called by:
  2914 ;;		_LSA08_Init
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           psect	text1278,local,class=CODE,delta=2,merge=1
  2918                           global __ptext1278
  2919  07C0                     __ptext1278:	;psect for function _UART_INIT
  2920                           psect	text1278
  2921                           	file	"../MC40SE Line Following UART.c"
  2922                           	line	821
  2923                           	global	__size_of_UART_INIT
  2924  0018                     	__size_of_UART_INIT	equ	__end_of_UART_INIT-_UART_INIT
  2925                           	
  2926  07C0                     _UART_INIT:	
  2927                           	opt	stack 4
  2928                           ; Regs used in _UART_INIT: [wreg+status,2]
  2929                           	line	824
  2930                           	
  2931  07C0                     l1430:	
  2932                           ;MC40SE Line Following UART.c: 824: TRISCbits.TRISC7=1;
  2933  07C0  1683               	bsf	status, 5	;RP0=1, select bank1
  2934  07C1  1303               	bcf	status, 6	;RP1=0, select bank1
  2935  07C2  1787               	bsf	(135)^080h,7	;volatile
  2936                           	line	825
  2937                           ;MC40SE Line Following UART.c: 825: TRISCbits.TRISC6=0;
  2938  07C3  1307               	bcf	(135)^080h,6	;volatile
  2939                           	line	828
  2940                           ;MC40SE Line Following UART.c: 828: TRISB0=0;
  2941  07C4  1006               	bcf	(1072/8)^080h,(1072)&7	;volatile
  2942                           	line	832
  2943                           ;MC40SE Line Following UART.c: 832: TXSTAbits.BRGH = 1;
  2944  07C5  1518               	bsf	(152)^080h,2	;volatile
  2945                           	line	833
  2946                           ;MC40SE Line Following UART.c: 833: BAUDCTLbits.BRG16=1;
  2947  07C6  1683               	bsf	status, 5	;RP0=1, select bank3
  2948  07C7  1703               	bsf	status, 6	;RP1=1, select bank3
  2949  07C8  1587               	bsf	(391)^0180h,3	;volatile
  2950                           	line	835
  2951                           	
  2952  07C9                     l1432:	
  2953                           ;MC40SE Line Following UART.c: 835: SPBRG =0xCF; SPBRGH=0x00;
  2954  07C9  30CF               	movlw	(0CFh)
  2955  07CA  1683               	bsf	status, 5	;RP0=1, select bank1
  2956  07CB  1303               	bcf	status, 6	;RP1=0, select bank1
  2957  07CC  0099               	movwf	(153)^080h	;volatile
  2958                           	
  2959  07CD                     l1434:	
  2960  07CD  019A               	clrf	(154)^080h	;volatile
  2961                           	line	836
  2962                           	
  2963  07CE                     l1436:	
  2964                           ;MC40SE Line Following UART.c: 836: RCSTAbits.SPEN = 1;
  2965  07CE  1283               	bcf	status, 5	;RP0=0, select bank0
  2966  07CF  1303               	bcf	status, 6	;RP1=0, select bank0
  2967  07D0  1798               	bsf	(24),7	;volatile
  2968                           	line	837
  2969                           	
  2970  07D1                     l1438:	
  2971                           ;MC40SE Line Following UART.c: 837: TXSTAbits.TXEN = 1;
  2972  07D1  1683               	bsf	status, 5	;RP0=1, select bank1
  2973  07D2  1303               	bcf	status, 6	;RP1=0, select bank1
  2974  07D3  1698               	bsf	(152)^080h,5	;volatile
  2975                           	line	838
  2976                           	
  2977  07D4                     l1440:	
  2978                           ;MC40SE Line Following UART.c: 838: RCSTAbits.CREN = 1;
  2979  07D4  1283               	bcf	status, 5	;RP0=0, select bank0
  2980  07D5  1303               	bcf	status, 6	;RP1=0, select bank0
  2981  07D6  1618               	bsf	(24),4	;volatile
  2982                           	line	840
  2983                           	
  2984  07D7                     l486:	
  2985  07D7  0008               	return
  2986                           	opt stack 0
  2987                           GLOBAL	__end_of_UART_INIT
  2988  07D8                     	__end_of_UART_INIT:
  2989                           	signat	_UART_INIT,88
  2990                           	global	_LSA08_UARTMode
  2991                           
  2992 ;; *************** function _LSA08_UARTMode *****************
  2993 ;; Defined at:
  2994 ;;		line 362 in file "../LSA08.h"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  mode            1    wreg     unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  mode            1   14[BANK0 ] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      unsigned char 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0, pclath, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3008 ;;      Params:         0       0       0       0       0
  3009 ;;      Locals:         0       1       0       0       0
  3010 ;;      Temps:          0       3       0       0       0
  3011 ;;      Totals:         0       4       0       0       0
  3012 ;;Total ram usage:        4 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    5
  3015 ;; This function calls:
  3016 ;;		_SEND_PACKET
  3017 ;; This function is called by:
  3018 ;;		_LSA08_Init
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           psect	text1279,local,class=CODE,delta=2,merge=1
  3022                           global __ptext1279
  3023  06D4                     __ptext1279:	;psect for function _LSA08_UARTMode
  3024                           psect	text1279
  3025                           	file	"../LSA08.h"
  3026                           	line	362
  3027                           	global	__size_of_LSA08_UARTMode
  3028  001F                     	__size_of_LSA08_UARTMode	equ	__end_of_LSA08_UARTMode-_LSA08_UARTMode
  3029                           	
  3030  06D4                     _LSA08_UARTMode:	
  3031                           	opt	stack 1
  3032                           ; Regs used in _LSA08_UARTMode: [wreg+status,2+status,0+pclath+cstack]
  3033                           ;LSA08_UARTMode@mode stored from wreg
  3034                           	line	364
  3035  06D4  1283               	bcf	status, 5	;RP0=0, select bank0
  3036  06D5  1303               	bcf	status, 6	;RP1=0, select bank0
  3037  06D6  00AE               	movwf	(LSA08_UARTMode@mode)
  3038                           	
  3039  06D7                     l2848:	
  3040                           ;LSA08.h: 364: if(mode>3) mode=0;
  3041  06D7  3004               	movlw	(04h)
  3042  06D8  022E               	subwf	(LSA08_UARTMode@mode),w
  3043  06D9  1C03               	skipc
  3044  06DA  2EDC               	goto	u2071
  3045  06DB  2EDD               	goto	u2070
  3046  06DC                     u2071:
  3047  06DC  2EDF               	goto	l2852
  3048  06DD                     u2070:
  3049                           	
  3050  06DD                     l2850:	
  3051  06DD  01AE               	clrf	(LSA08_UARTMode@mode)
  3052  06DE  2EDF               	goto	l2852
  3053                           	
  3054  06DF                     l309:	
  3055                           	line	365
  3056                           	
  3057  06DF                     l2852:	
  3058                           ;LSA08.h: 365: return(SEND_PACKET(LSA08_ADD, 'D', mode,2));
  3059  06DF  3044               	movlw	(044h)
  3060  06E0  00AB               	movwf	(??_LSA08_UARTMode+0)+0
  3061  06E1  082B               	movf	(??_LSA08_UARTMode+0)+0,w
  3062  06E2  00A6               	movwf	(?_SEND_PACKET)
  3063  06E3  082E               	movf	(LSA08_UARTMode@mode),w
  3064  06E4  00AC               	movwf	(??_LSA08_UARTMode+1)+0
  3065  06E5  082C               	movf	(??_LSA08_UARTMode+1)+0,w
  3066  06E6  00A7               	movwf	0+(?_SEND_PACKET)+01h
  3067  06E7  3002               	movlw	(02h)
  3068  06E8  00AD               	movwf	(??_LSA08_UARTMode+2)+0
  3069  06E9  082D               	movf	(??_LSA08_UARTMode+2)+0,w
  3070  06EA  00A8               	movwf	0+(?_SEND_PACKET)+02h
  3071  06EB  0845               	movf	(_LSA08_ADD),w
  3072  06EC  120A  118A  265C   	fcall	_SEND_PACKET
              120A  118A         
  3073  06F1  2EF2               	goto	l310
  3074                           	
  3075  06F2                     l2854:	
  3076                           	line	366
  3077                           	
  3078  06F2                     l310:	
  3079  06F2  0008               	return
  3080                           	opt stack 0
  3081                           GLOBAL	__end_of_LSA08_UARTMode
  3082  06F3                     	__end_of_LSA08_UARTMode:
  3083                           	signat	_LSA08_UARTMode,4217
  3084                           	global	_mc40se_init
  3085                           
  3086 ;; *************** function _mc40se_init *****************
  3087 ;; Defined at:
  3088 ;;		line 268 in file "../MC40SE Line Following UART.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;		None               void
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         0       0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0
  3105 ;;      Totals:         0       0       0       0       0
  3106 ;;Total ram usage:        0 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    3
  3109 ;; This function calls:
  3110 ;;		_delay_ms
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           psect	text1280,local,class=CODE,delta=2,merge=1
  3116                           global __ptext1280
  3117  06B2                     __ptext1280:	;psect for function _mc40se_init
  3118                           psect	text1280
  3119                           	file	"../MC40SE Line Following UART.c"
  3120                           	line	268
  3121                           	global	__size_of_mc40se_init
  3122  0022                     	__size_of_mc40se_init	equ	__end_of_mc40se_init-_mc40se_init
  3123                           	
  3124  06B2                     _mc40se_init:	
  3125                           	opt	stack 4
  3126                           ; Regs used in _mc40se_init: [wreg+status,2+status,0+pclath+cstack]
  3127                           	line	271
  3128                           	
  3129  06B2                     l2940:	
  3130                           ;MC40SE Line Following UART.c: 271: OSCCON=0b01110111;
  3131  06B2  3077               	movlw	(077h)
  3132  06B3  1683               	bsf	status, 5	;RP0=1, select bank1
  3133  06B4  1303               	bcf	status, 6	;RP1=0, select bank1
  3134  06B5  008F               	movwf	(143)^080h	;volatile
  3135                           	line	272
  3136                           	
  3137  06B6                     l2942:	
  3138                           ;MC40SE Line Following UART.c: 272: delay_ms(100);
  3139  06B6  3064               	movlw	low(064h)
  3140  06B7  00F4               	movwf	(?_delay_ms)
  3141  06B8  3000               	movlw	high(064h)
  3142  06B9  00F5               	movwf	((?_delay_ms))+1
  3143  06BA  120A  118A  2731   	fcall	_delay_ms
              120A  118A         
  3144                           	line	274
  3145                           	
  3146  06BF                     l2944:	
  3147                           ;MC40SE Line Following UART.c: 274: ANSELHbits.ANS12=0;
  3148  06BF  1683               	bsf	status, 5	;RP0=1, select bank3
  3149  06C0  1703               	bsf	status, 6	;RP1=1, select bank3
  3150  06C1  1209               	bcf	(393)^0180h,4	;volatile
  3151                           	line	277
  3152                           	
  3153  06C2                     l2946:	
  3154                           ;MC40SE Line Following UART.c: 277: PORTA = 0;
  3155  06C2  1283               	bcf	status, 5	;RP0=0, select bank0
  3156  06C3  1303               	bcf	status, 6	;RP1=0, select bank0
  3157  06C4  0185               	clrf	(5)	;volatile
  3158                           	line	278
  3159                           	
  3160  06C5                     l2948:	
  3161                           ;MC40SE Line Following UART.c: 278: PORTB = 0;
  3162  06C5  0186               	clrf	(6)	;volatile
  3163                           	line	279
  3164                           	
  3165  06C6                     l2950:	
  3166                           ;MC40SE Line Following UART.c: 279: PORTC = 0;
  3167  06C6  0187               	clrf	(7)	;volatile
  3168                           	line	280
  3169                           	
  3170  06C7                     l2952:	
  3171                           ;MC40SE Line Following UART.c: 280: PORTD = 0;
  3172  06C7  0188               	clrf	(8)	;volatile
  3173                           	line	281
  3174                           	
  3175  06C8                     l2954:	
  3176                           ;MC40SE Line Following UART.c: 281: PORTE = 0;
  3177  06C8  0189               	clrf	(9)	;volatile
  3178                           	line	284
  3179                           	
  3180  06C9                     l2956:	
  3181                           ;MC40SE Line Following UART.c: 284: TRISA = 0b00111111;
  3182  06C9  303F               	movlw	(03Fh)
  3183  06CA  1683               	bsf	status, 5	;RP0=1, select bank1
  3184  06CB  1303               	bcf	status, 6	;RP1=0, select bank1
  3185  06CC  0085               	movwf	(133)^080h	;volatile
  3186                           	line	285
  3187                           	
  3188  06CD                     l2958:	
  3189                           ;MC40SE Line Following UART.c: 285: TRISB = 0b00111110;
  3190  06CD  303E               	movlw	(03Eh)
  3191  06CE  0086               	movwf	(134)^080h	;volatile
  3192                           	line	286
  3193                           	
  3194  06CF                     l2960:	
  3195                           ;MC40SE Line Following UART.c: 286: TRISC = 0b10000001;
  3196  06CF  3081               	movlw	(081h)
  3197  06D0  0087               	movwf	(135)^080h	;volatile
  3198                           	line	287
  3199                           	
  3200  06D1                     l2962:	
  3201                           ;MC40SE Line Following UART.c: 287: TRISD = 0;
  3202  06D1  0188               	clrf	(136)^080h	;volatile
  3203                           	line	288
  3204                           	
  3205  06D2                     l2964:	
  3206                           ;MC40SE Line Following UART.c: 288: TRISE = 0b00000000;
  3207  06D2  0189               	clrf	(137)^080h	;volatile
  3208                           	line	291
  3209                           	
  3210  06D3                     l344:	
  3211  06D3  0008               	return
  3212                           	opt stack 0
  3213                           GLOBAL	__end_of_mc40se_init
  3214  06D4                     	__end_of_mc40se_init:
  3215                           	signat	_mc40se_init,88
  3216                           	global	_pwm_init
  3217                           
  3218 ;; *************** function _pwm_init *****************
  3219 ;; Defined at:
  3220 ;;		line 29 in file "../pwm.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;		None               void
  3227 ;; Registers used:
  3228 ;;		wreg, status,2
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         0       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0
  3237 ;;      Totals:         0       0       0       0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    2
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           psect	text1281,local,class=CODE,delta=2,merge=1
  3248                           global __ptext1281
  3249  07A6                     __ptext1281:	;psect for function _pwm_init
  3250                           psect	text1281
  3251                           	file	"../pwm.c"
  3252                           	line	29
  3253                           	global	__size_of_pwm_init
  3254  001A                     	__size_of_pwm_init	equ	__end_of_pwm_init-_pwm_init
  3255                           	
  3256  07A6                     _pwm_init:	
  3257                           	opt	stack 5
  3258                           ; Regs used in _pwm_init: [wreg+status,2]
  3259                           	line	31
  3260                           	
  3261  07A6                     l1572:	
  3262                           ;pwm.c: 31: PR2 = 0xFF;
  3263  07A6  30FF               	movlw	(0FFh)
  3264  07A7  1683               	bsf	status, 5	;RP0=1, select bank1
  3265  07A8  1303               	bcf	status, 6	;RP1=0, select bank1
  3266  07A9  0092               	movwf	(146)^080h	;volatile
  3267                           	line	32
  3268                           	
  3269  07AA                     l1574:	
  3270                           ;pwm.c: 32: T2CKPS1 = 0;
  3271  07AA  1283               	bcf	status, 5	;RP0=0, select bank0
  3272  07AB  1303               	bcf	status, 6	;RP1=0, select bank0
  3273  07AC  1092               	bcf	(145/8),(145)&7	;volatile
  3274                           	line	33
  3275                           	
  3276  07AD                     l1576:	
  3277                           ;pwm.c: 33: T2CKPS0 = 1;
  3278  07AD  1412               	bsf	(144/8),(144)&7	;volatile
  3279                           	line	35
  3280                           	
  3281  07AE                     l1578:	
  3282                           ;pwm.c: 35: CCPR1L = 0;
  3283  07AE  0195               	clrf	(21)	;volatile
  3284                           	line	36
  3285                           	
  3286  07AF                     l1580:	
  3287                           ;pwm.c: 36: CCPR2L = 0;
  3288  07AF  019B               	clrf	(27)	;volatile
  3289                           	line	37
  3290                           	
  3291  07B0                     l1582:	
  3292                           ;pwm.c: 37: TMR2ON = 1;
  3293  07B0  1512               	bsf	(146/8),(146)&7	;volatile
  3294                           	line	41
  3295                           	
  3296  07B1                     l1584:	
  3297                           ;pwm.c: 41: P1M1 = 0;
  3298  07B1  1397               	bcf	(191/8),(191)&7	;volatile
  3299                           	line	42
  3300                           	
  3301  07B2                     l1586:	
  3302                           ;pwm.c: 42: P1M0 = 0;
  3303  07B2  1317               	bcf	(190/8),(190)&7	;volatile
  3304                           	line	44
  3305                           	
  3306  07B3                     l1588:	
  3307                           ;pwm.c: 44: DC1B1 = 0;
  3308  07B3  1297               	bcf	(189/8),(189)&7	;volatile
  3309                           	line	45
  3310                           	
  3311  07B4                     l1590:	
  3312                           ;pwm.c: 45: DC1B0 = 0;
  3313  07B4  1217               	bcf	(188/8),(188)&7	;volatile
  3314                           	line	47
  3315                           	
  3316  07B5                     l1592:	
  3317                           ;pwm.c: 47: CCP1M3 = 1;
  3318  07B5  1597               	bsf	(187/8),(187)&7	;volatile
  3319                           	line	48
  3320                           	
  3321  07B6                     l1594:	
  3322                           ;pwm.c: 48: CCP1M2 = 1;
  3323  07B6  1517               	bsf	(186/8),(186)&7	;volatile
  3324                           	line	49
  3325                           	
  3326  07B7                     l1596:	
  3327                           ;pwm.c: 49: CCP1M1 = 0;
  3328  07B7  1097               	bcf	(185/8),(185)&7	;volatile
  3329                           	line	50
  3330                           	
  3331  07B8                     l1598:	
  3332                           ;pwm.c: 50: CCP1M0 = 0;
  3333  07B8  1017               	bcf	(184/8),(184)&7	;volatile
  3334                           	line	53
  3335                           	
  3336  07B9                     l1600:	
  3337                           ;pwm.c: 53: CCP2X = 0;
  3338  07B9  129D               	bcf	(237/8),(237)&7	;volatile
  3339                           	line	54
  3340                           	
  3341  07BA                     l1602:	
  3342                           ;pwm.c: 54: CCP2Y = 0;
  3343  07BA  121D               	bcf	(236/8),(236)&7	;volatile
  3344                           	line	56
  3345                           	
  3346  07BB                     l1604:	
  3347                           ;pwm.c: 56: CCP2M3 = 1;
  3348  07BB  159D               	bsf	(235/8),(235)&7	;volatile
  3349                           	line	57
  3350                           	
  3351  07BC                     l1606:	
  3352                           ;pwm.c: 57: CCP2M2 = 1;
  3353  07BC  151D               	bsf	(234/8),(234)&7	;volatile
  3354                           	line	58
  3355                           	
  3356  07BD                     l1608:	
  3357                           ;pwm.c: 58: CCP2M1 = 0;
  3358  07BD  109D               	bcf	(233/8),(233)&7	;volatile
  3359                           	line	59
  3360                           	
  3361  07BE                     l1610:	
  3362                           ;pwm.c: 59: CCP2M0 = 0;
  3363  07BE  101D               	bcf	(232/8),(232)&7	;volatile
  3364                           	line	78
  3365                           	
  3366  07BF                     l558:	
  3367  07BF  0008               	return
  3368                           	opt stack 0
  3369                           GLOBAL	__end_of_pwm_init
  3370  07C0                     	__end_of_pwm_init:
  3371                           	signat	_pwm_init,88
  3372                           	global	_relay_off_all
  3373                           
  3374 ;; *************** function _relay_off_all *****************
  3375 ;; Defined at:
  3376 ;;		line 510 in file "../MC40SE Line Following UART.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;		None               void
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, pclath, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3390 ;;      Params:         0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    3
  3397 ;; This function calls:
  3398 ;;		_delay_ms
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           psect	text1282,local,class=CODE,delta=2,merge=1
  3404                           global __ptext1282
  3405  0F8C                     __ptext1282:	;psect for function _relay_off_all
  3406                           psect	text1282
  3407                           	file	"../MC40SE Line Following UART.c"
  3408                           	line	510
  3409                           	global	__size_of_relay_off_all
  3410  0012                     	__size_of_relay_off_all	equ	__end_of_relay_off_all-_relay_off_all
  3411                           	
  3412  0F8C                     _relay_off_all:	
  3413                           	opt	stack 4
  3414                           ; Regs used in _relay_off_all: [wreg+status,2+status,0+pclath+cstack]
  3415                           	line	511
  3416                           	
  3417  0F8C                     l2966:	
  3418                           ;MC40SE Line Following UART.c: 511: RC3 = 0;
  3419  0F8C  1283               	bcf	status, 5	;RP0=0, select bank0
  3420  0F8D  1303               	bcf	status, 6	;RP1=0, select bank0
  3421  0F8E  1187               	bcf	(59/8),(59)&7	;volatile
  3422                           	line	512
  3423                           	
  3424  0F8F                     l2968:	
  3425                           ;MC40SE Line Following UART.c: 512: PORTD = 0;
  3426  0F8F  0188               	clrf	(8)	;volatile
  3427                           	line	513
  3428                           	
  3429  0F90                     l2970:	
  3430                           ;MC40SE Line Following UART.c: 513: RC3 = 1;
  3431  0F90  1587               	bsf	(59/8),(59)&7	;volatile
  3432                           	line	514
  3433                           	
  3434  0F91                     l2972:	
  3435                           ;MC40SE Line Following UART.c: 514: delay_ms(5);
  3436  0F91  3005               	movlw	low(05h)
  3437  0F92  00F4               	movwf	(?_delay_ms)
  3438  0F93  3000               	movlw	high(05h)
  3439  0F94  00F5               	movwf	((?_delay_ms))+1
  3440  0F95  120A  118A  2731   	fcall	_delay_ms
              120A  158A         
  3441                           	line	515
  3442                           	
  3443  0F9A                     l2974:	
  3444                           ;MC40SE Line Following UART.c: 515: RC3 = 0;
  3445  0F9A  1283               	bcf	status, 5	;RP0=0, select bank0
  3446  0F9B  1303               	bcf	status, 6	;RP1=0, select bank0
  3447  0F9C  1187               	bcf	(59/8),(59)&7	;volatile
  3448                           	line	516
  3449                           	
  3450  0F9D                     l394:	
  3451  0F9D  0008               	return
  3452                           	opt stack 0
  3453                           GLOBAL	__end_of_relay_off_all
  3454  0F9E                     	__end_of_relay_off_all:
  3455                           	signat	_relay_off_all,88
  3456                           	global	_timer1_init
  3457                           
  3458 ;; *************** function _timer1_init *****************
  3459 ;; Defined at:
  3460 ;;		line 38 in file "../timer1.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;		None               void
  3467 ;; Registers used:
  3468 ;;		status,2
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3474 ;;      Params:         0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    2
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           psect	text1283,local,class=CODE,delta=2,merge=1
  3488                           global __ptext1283
  3489  0FC4                     __ptext1283:	;psect for function _timer1_init
  3490                           psect	text1283
  3491                           	file	"../timer1.c"
  3492                           	line	38
  3493                           	global	__size_of_timer1_init
  3494  0013                     	__size_of_timer1_init	equ	__end_of_timer1_init-_timer1_init
  3495                           	
  3496  0FC4                     _timer1_init:	
  3497                           	opt	stack 5
  3498                           ; Regs used in _timer1_init: [status,2]
  3499                           	line	39
  3500                           	
  3501  0FC4                     l1622:	
  3502                           ;timer1.c: 39: TMR1L = 0x00;
  3503  0FC4  1283               	bcf	status, 5	;RP0=0, select bank0
  3504  0FC5  1303               	bcf	status, 6	;RP1=0, select bank0
  3505  0FC6  018E               	clrf	(14)	;volatile
  3506                           	line	40
  3507                           ;timer1.c: 40: TMR1H = 0x00;
  3508  0FC7  018F               	clrf	(15)	;volatile
  3509                           	line	42
  3510                           	
  3511  0FC8                     l1624:	
  3512                           ;timer1.c: 42: T1OSCEN = 0;
  3513  0FC8  1190               	bcf	(131/8),(131)&7	;volatile
  3514                           	line	43
  3515                           	
  3516  0FC9                     l1626:	
  3517                           ;timer1.c: 43: TMR1CS = 1;
  3518  0FC9  1490               	bsf	(129/8),(129)&7	;volatile
  3519                           	line	45
  3520                           	
  3521  0FCA                     l1628:	
  3522                           ;timer1.c: 45: T1CKPS0 = 0;
  3523  0FCA  1210               	bcf	(132/8),(132)&7	;volatile
  3524                           	line	46
  3525                           	
  3526  0FCB                     l1630:	
  3527                           ;timer1.c: 46: T1CKPS1 = 0;
  3528  0FCB  1290               	bcf	(133/8),(133)&7	;volatile
  3529                           	line	48
  3530                           	
  3531  0FCC                     l1632:	
  3532                           ;timer1.c: 48: T1SYNC = 0;
  3533  0FCC  1110               	bcf	(130/8),(130)&7	;volatile
  3534                           	line	49
  3535                           	
  3536  0FCD                     l1634:	
  3537                           ;timer1.c: 49: TMR1IF = 0;
  3538  0FCD  100C               	bcf	(96/8),(96)&7	;volatile
  3539                           	line	50
  3540                           	
  3541  0FCE                     l1636:	
  3542                           ;timer1.c: 50: TMR1IE = 1;
  3543  0FCE  1683               	bsf	status, 5	;RP0=1, select bank1
  3544  0FCF  1303               	bcf	status, 6	;RP1=0, select bank1
  3545  0FD0  140C               	bsf	(1120/8)^080h,(1120)&7	;volatile
  3546                           	line	51
  3547                           	
  3548  0FD1                     l1638:	
  3549                           ;timer1.c: 51: PEIE = 1;
  3550  0FD1  170B               	bsf	(94/8),(94)&7	;volatile
  3551                           	line	52
  3552                           	
  3553  0FD2                     l1640:	
  3554                           ;timer1.c: 52: GIE = 1;
  3555  0FD2  178B               	bsf	(95/8),(95)&7	;volatile
  3556                           	line	54
  3557                           	
  3558  0FD3                     l1642:	
  3559                           ;timer1.c: 54: TMR1ON = 1;
  3560  0FD3  1283               	bcf	status, 5	;RP0=0, select bank0
  3561  0FD4  1303               	bcf	status, 6	;RP1=0, select bank0
  3562  0FD5  1410               	bsf	(128/8),(128)&7	;volatile
  3563                           	line	55
  3564                           	
  3565  0FD6                     l612:	
  3566  0FD6  0008               	return
  3567                           	opt stack 0
  3568                           GLOBAL	__end_of_timer1_init
  3569  0FD7                     	__end_of_timer1_init:
  3570                           	signat	_timer1_init,88
  3571                           	global	_line_following
  3572                           
  3573 ;; *************** function _line_following *****************
  3574 ;; Defined at:
  3575 ;;		line 539 in file "../MC40SE Line Following UART.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  times           1   19[BANK0 ] unsigned char 
  3580 ;;  cou             1   18[BANK0 ] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;		None               void
  3583 ;; Registers used:
  3584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         0       0       0       0       0
  3591 ;;      Locals:         0       2       0       0       0
  3592 ;;      Temps:          0       1       0       0       0
  3593 ;;      Totals:         0       3       0       0       0
  3594 ;;Total ram usage:        3 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:    9
  3597 ;; This function calls:
  3598 ;;		_forward
  3599 ;;		_lcd_clear_msg
  3600 ;;		_delay_ms
  3601 ;;		_beep
  3602 ;;		_line_follow_cross
  3603 ;;		_brushless
  3604 ;;		_LSA08_GetSensor
  3605 ;; This function is called by:
  3606 ;;		_main
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           psect	text1284,local,class=CODE,delta=2,merge=1
  3610                           global __ptext1284
  3611  01B3                     __ptext1284:	;psect for function _line_following
  3612                           psect	text1284
  3613                           	file	"../MC40SE Line Following UART.c"
  3614                           	line	539
  3615                           	global	__size_of_line_following
  3616  00BA                     	__size_of_line_following	equ	__end_of_line_following-_line_following
  3617                           	
  3618  01B3                     _line_following:	
  3619 ;; hardware stack exceeded
  3620                           	opt	stack 0
  3621                           ; Regs used in _line_following: [allreg]
  3622                           	line	540
  3623                           	
  3624  01B3                     l3036:	
  3625                           ;MC40SE Line Following UART.c: 540: unsigned char times = 0,cou = 0;
  3626  01B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3627  01B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3628  01B5  01B3               	clrf	(line_following@times)
  3629  01B6  01B2               	clrf	(line_following@cou)
  3630                           	line	541
  3631                           	
  3632  01B7                     l3038:	
  3633                           ;MC40SE Line Following UART.c: 541: forward();
  3634  01B7  120A  158A  277E   	fcall	_forward
              120A  118A         
  3635                           	line	542
  3636                           	
  3637  01BC                     l3040:	
  3638                           ;MC40SE Line Following UART.c: 542: lcd_clear_msg("SW1 to\nStart!");
  3639  01BC  3010               	movlw	((STR_4-__stringbase))&0ffh
  3640  01BD  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  3641                           	line	543
  3642                           	
  3643  01C2                     l3042:	
  3644                           ;MC40SE Line Following UART.c: 543: delay_ms(100);
  3645  01C2  3064               	movlw	low(064h)
  3646  01C3  00F4               	movwf	(?_delay_ms)
  3647  01C4  3000               	movlw	high(064h)
  3648  01C5  00F5               	movwf	((?_delay_ms))+1
  3649  01C6  120A  118A  2731   	fcall	_delay_ms
              120A  118A         
  3650                           	line	545
  3651                           ;MC40SE Line Following UART.c: 545: while(RA2 == 1) continue;
  3652  01CB  29CC               	goto	l397
  3653                           	
  3654  01CC                     l398:	
  3655                           	
  3656  01CC                     l397:	
  3657  01CC  1283               	bcf	status, 5	;RP0=0, select bank0
  3658  01CD  1303               	bcf	status, 6	;RP1=0, select bank0
  3659  01CE  1905               	btfsc	(42/8),(42)&7	;volatile
  3660  01CF  29D1               	goto	u2261
  3661  01D0  29D2               	goto	u2260
  3662  01D1                     u2261:
  3663  01D1  29CC               	goto	l397
  3664  01D2                     u2260:
  3665  01D2  29D3               	goto	l3044
  3666                           	
  3667  01D3                     l399:	
  3668                           	line	546
  3669                           	
  3670  01D3                     l3044:	
  3671                           ;MC40SE Line Following UART.c: 546: delay_ms(10);
  3672  01D3  300A               	movlw	low(0Ah)
  3673  01D4  00F4               	movwf	(?_delay_ms)
  3674  01D5  3000               	movlw	high(0Ah)
  3675  01D6  00F5               	movwf	((?_delay_ms))+1
  3676  01D7  120A  118A  2731   	fcall	_delay_ms
              120A  118A         
  3677                           	line	547
  3678                           ;MC40SE Line Following UART.c: 547: while(RA2 == 0) continue;
  3679  01DC  29DD               	goto	l400
  3680                           	
  3681  01DD                     l401:	
  3682                           	
  3683  01DD                     l400:	
  3684  01DD  1283               	bcf	status, 5	;RP0=0, select bank0
  3685  01DE  1303               	bcf	status, 6	;RP1=0, select bank0
  3686  01DF  1D05               	btfss	(42/8),(42)&7	;volatile
  3687  01E0  29E2               	goto	u2271
  3688  01E1  29E3               	goto	u2270
  3689  01E2                     u2271:
  3690  01E2  29DD               	goto	l400
  3691  01E3                     u2270:
  3692  01E3  29E4               	goto	l3046
  3693                           	
  3694  01E4                     l402:	
  3695                           	line	549
  3696                           	
  3697  01E4                     l3046:	
  3698                           ;MC40SE Line Following UART.c: 549: lcd_clear_msg(" Line\nFollow");
  3699  01E4  301F               	movlw	((STR_5-__stringbase))&0ffh
  3700  01E5  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  3701                           	line	550
  3702                           	
  3703  01EA                     l3048:	
  3704                           ;MC40SE Line Following UART.c: 550: beep(1);
  3705  01EA  3001               	movlw	(01h)
  3706  01EB  120A  118A  268B   	fcall	_beep
              120A  118A         
  3707                           	line	551
  3708                           	
  3709  01F0                     l3050:	
  3710                           ;MC40SE Line Following UART.c: 551: times = 4;
  3711  01F0  3004               	movlw	(04h)
  3712  01F1  1283               	bcf	status, 5	;RP0=0, select bank0
  3713  01F2  1303               	bcf	status, 6	;RP1=0, select bank0
  3714  01F3  00B1               	movwf	(??_line_following+0)+0
  3715  01F4  0831               	movf	(??_line_following+0)+0,w
  3716  01F5  00B3               	movwf	(line_following@times)
  3717                           	line	552
  3718                           ;MC40SE Line Following UART.c: 552: while(times > 0)
  3719  01F6  2A49               	goto	l3070
  3720                           	
  3721  01F7                     l404:	
  3722                           	line	554
  3723                           	
  3724  01F7                     l3052:	
  3725                           ;MC40SE Line Following UART.c: 553: {
  3726                           ;MC40SE Line Following UART.c: 554: line_follow_cross(3);
  3727  01F7  3003               	movlw	(03h)
  3728  01F8  120A  118A  23B6   	fcall	_line_follow_cross
              120A  118A         
  3729                           	line	555
  3730                           	
  3731  01FD                     l3054:	
  3732                           ;MC40SE Line Following UART.c: 555: beep(2);
  3733  01FD  3002               	movlw	(02h)
  3734  01FE  120A  118A  268B   	fcall	_beep
              120A  118A         
  3735                           	line	556
  3736                           	
  3737  0203                     l3056:	
  3738                           ;MC40SE Line Following UART.c: 556: delay_ms(200);
  3739  0203  30C8               	movlw	low(0C8h)
  3740  0204  00F4               	movwf	(?_delay_ms)
  3741  0205  3000               	movlw	high(0C8h)
  3742  0206  00F5               	movwf	((?_delay_ms))+1
  3743  0207  120A  118A  2731   	fcall	_delay_ms
              120A  118A         
  3744                           	line	557
  3745                           	
  3746  020C                     l3058:	
  3747                           ;MC40SE Line Following UART.c: 557: lcd_clear_msg("turn");
  3748  020C  306C               	movlw	((STR_6-__stringbase))&0ffh
  3749  020D  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  3750                           	line	558
  3751                           	
  3752  0212                     l3060:	
  3753                           ;MC40SE Line Following UART.c: 558: brushless(2, 0, 0, 500);
  3754  0212  1283               	bcf	status, 5	;RP0=0, select bank0
  3755  0213  1303               	bcf	status, 6	;RP1=0, select bank0
  3756  0214  01A2               	clrf	(?_brushless)
  3757  0215  01A3               	clrf	0+(?_brushless)+01h
  3758  0216  30F4               	movlw	low(01F4h)
  3759  0217  00A4               	movwf	0+(?_brushless)+02h
  3760  0218  3001               	movlw	high(01F4h)
  3761  0219  00A5               	movwf	(0+(?_brushless)+02h)+1
  3762  021A  3002               	movlw	(02h)
  3763  021B  120A  118A  231B   	fcall	_brushless
              120A  118A         
  3764                           	line	559
  3765                           	
  3766  0220                     l3062:	
  3767                           ;MC40SE Line Following UART.c: 559: brushless(1, 0, 0, 500);
  3768  0220  1283               	bcf	status, 5	;RP0=0, select bank0
  3769  0221  1303               	bcf	status, 6	;RP1=0, select bank0
  3770  0222  01A2               	clrf	(?_brushless)
  3771  0223  01A3               	clrf	0+(?_brushless)+01h
  3772  0224  30F4               	movlw	low(01F4h)
  3773  0225  00A4               	movwf	0+(?_brushless)+02h
  3774  0226  3001               	movlw	high(01F4h)
  3775  0227  00A5               	movwf	(0+(?_brushless)+02h)+1
  3776  0228  3001               	movlw	(01h)
  3777  0229  120A  118A  231B   	fcall	_brushless
              120A  118A         
  3778                           	line	560
  3779                           	
  3780  022E                     l3064:	
  3781                           ;MC40SE Line Following UART.c: 560: delay_ms(1000);
  3782  022E  30E8               	movlw	low(03E8h)
  3783  022F  00F4               	movwf	(?_delay_ms)
  3784  0230  3003               	movlw	high(03E8h)
  3785  0231  00F5               	movwf	((?_delay_ms))+1
  3786  0232  120A  118A  2731   	fcall	_delay_ms
              120A  118A         
  3787                           	line	561
  3788                           ;MC40SE Line Following UART.c: 561: while(LSA08_GetSensor()!=0x18);
  3789  0237  2A39               	goto	l3066
  3790                           	
  3791  0238                     l406:	
  3792  0238  2A39               	goto	l3066
  3793                           	
  3794  0239                     l405:	
  3795                           	
  3796  0239                     l3066:	
  3797  0239  120A  118A  274F   	fcall	_LSA08_GetSensor
              120A  118A         
  3798  023E  3A18               	xorlw	018h
  3799  023F  1D03               	skipz
  3800  0240  2A42               	goto	u2281
  3801  0241  2A43               	goto	u2280
  3802  0242                     u2281:
  3803  0242  2A39               	goto	l3066
  3804  0243                     u2280:
  3805  0243  2A44               	goto	l3068
  3806                           	
  3807  0244                     l407:	
  3808                           	line	562
  3809                           	
  3810  0244                     l3068:	
  3811                           ;MC40SE Line Following UART.c: 562: times --;
  3812  0244  3001               	movlw	low(01h)
  3813  0245  1283               	bcf	status, 5	;RP0=0, select bank0
  3814  0246  1303               	bcf	status, 6	;RP1=0, select bank0
  3815  0247  02B3               	subwf	(line_following@times),f
  3816  0248  2A49               	goto	l3070
  3817                           	line	563
  3818                           	
  3819  0249                     l403:	
  3820                           	line	552
  3821                           	
  3822  0249                     l3070:	
  3823  0249  08B3               	movf	(line_following@times),f
  3824  024A  1D03               	skipz
  3825  024B  2A4D               	goto	u2291
  3826  024C  2A4E               	goto	u2290
  3827  024D                     u2291:
  3828  024D  29F7               	goto	l3052
  3829  024E                     u2290:
  3830  024E  2A4F               	goto	l3072
  3831                           	
  3832  024F                     l408:	
  3833                           	line	564
  3834                           	
  3835  024F                     l3072:	
  3836                           ;MC40SE Line Following UART.c: 563: }
  3837                           ;MC40SE Line Following UART.c: 564: brushless(1, 1, 0, 0);
  3838  024F  01A2               	clrf	(?_brushless)
  3839  0250  0AA2               	incf	(?_brushless),f
  3840  0251  01A3               	clrf	0+(?_brushless)+01h
  3841  0252  3000               	movlw	low(0)
  3842  0253  00A4               	movwf	0+(?_brushless)+02h
  3843  0254  3000               	movlw	high(0)
  3844  0255  00A5               	movwf	(0+(?_brushless)+02h)+1
  3845  0256  3001               	movlw	(01h)
  3846  0257  120A  118A  231B   	fcall	_brushless
              120A  118A         
  3847                           	line	565
  3848                           ;MC40SE Line Following UART.c: 565: brushless(2, 1, 1, 0);
  3849  025C  1283               	bcf	status, 5	;RP0=0, select bank0
  3850  025D  1303               	bcf	status, 6	;RP1=0, select bank0
  3851  025E  01A2               	clrf	(?_brushless)
  3852  025F  0AA2               	incf	(?_brushless),f
  3853  0260  01A3               	clrf	0+(?_brushless)+01h
  3854  0261  0AA3               	incf	0+(?_brushless)+01h,f
  3855  0262  3000               	movlw	low(0)
  3856  0263  00A4               	movwf	0+(?_brushless)+02h
  3857  0264  3000               	movlw	high(0)
  3858  0265  00A5               	movwf	(0+(?_brushless)+02h)+1
  3859  0266  3002               	movlw	(02h)
  3860  0267  120A  118A  231B   	fcall	_brushless
              120A  118A         
  3861                           	line	566
  3862                           	
  3863  026C                     l409:	
  3864  026C  0008               	return
  3865                           	opt stack 0
  3866                           GLOBAL	__end_of_line_following
  3867  026D                     	__end_of_line_following:
  3868                           	signat	_line_following,88
  3869                           	global	_beep
  3870                           
  3871 ;; *************** function _beep *****************
  3872 ;; Defined at:
  3873 ;;		line 246 in file "../MC40SE Line Following UART.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  uc_count        1    wreg     unsigned char 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  uc_count        1    2[BANK0 ] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;		None               void
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0, pclath, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3887 ;;      Params:         0       0       0       0       0
  3888 ;;      Locals:         0       1       0       0       0
  3889 ;;      Temps:          0       0       0       0       0
  3890 ;;      Totals:         0       1       0       0       0
  3891 ;;Total ram usage:        1 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    3
  3894 ;; This function calls:
  3895 ;;		_delay_ms
  3896 ;; This function is called by:
  3897 ;;		_main
  3898 ;;		_line_following
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           psect	text1285,local,class=CODE,delta=2,merge=1
  3902                           global __ptext1285
  3903  068B                     __ptext1285:	;psect for function _beep
  3904                           psect	text1285
  3905                           	file	"../MC40SE Line Following UART.c"
  3906                           	line	246
  3907                           	global	__size_of_beep
  3908  0027                     	__size_of_beep	equ	__end_of_beep-_beep
  3909                           	
  3910  068B                     _beep:	
  3911                           	opt	stack 3
  3912                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3913                           ;beep@uc_count stored from wreg
  3914  068B  1283               	bcf	status, 5	;RP0=0, select bank0
  3915  068C  1303               	bcf	status, 6	;RP1=0, select bank0
  3916  068D  00A2               	movwf	(beep@uc_count)
  3917                           	line	247
  3918                           	
  3919  068E                     l3028:	
  3920                           ;MC40SE Line Following UART.c: 247: while (uc_count-- > 0) {
  3921  068E  2EA6               	goto	l3034
  3922                           	
  3923  068F                     l339:	
  3924                           	line	248
  3925                           ;MC40SE Line Following UART.c: 248: RB7 = 1;
  3926  068F  1786               	bsf	(55/8),(55)&7	;volatile
  3927                           	line	249
  3928                           	
  3929  0690                     l3030:	
  3930                           ;MC40SE Line Following UART.c: 249: delay_ms(50);
  3931  0690  3032               	movlw	low(032h)
  3932  0691  00F4               	movwf	(?_delay_ms)
  3933  0692  3000               	movlw	high(032h)
  3934  0693  00F5               	movwf	((?_delay_ms))+1
  3935  0694  120A  118A  2731   	fcall	_delay_ms
              120A  118A         
  3936                           	line	250
  3937                           	
  3938  0699                     l3032:	
  3939                           ;MC40SE Line Following UART.c: 250: RB7 = 0;
  3940  0699  1283               	bcf	status, 5	;RP0=0, select bank0
  3941  069A  1303               	bcf	status, 6	;RP1=0, select bank0
  3942  069B  1386               	bcf	(55/8),(55)&7	;volatile
  3943                           	line	251
  3944                           ;MC40SE Line Following UART.c: 251: delay_ms(50);
  3945  069C  3032               	movlw	low(032h)
  3946  069D  00F4               	movwf	(?_delay_ms)
  3947  069E  3000               	movlw	high(032h)
  3948  069F  00F5               	movwf	((?_delay_ms))+1
  3949  06A0  120A  118A  2731   	fcall	_delay_ms
              120A  118A         
  3950  06A5  2EA6               	goto	l3034
  3951                           	line	252
  3952                           	
  3953  06A6                     l338:	
  3954                           	line	247
  3955                           	
  3956  06A6                     l3034:	
  3957  06A6  3001               	movlw	low(01h)
  3958  06A7  1283               	bcf	status, 5	;RP0=0, select bank0
  3959  06A8  1303               	bcf	status, 6	;RP1=0, select bank0
  3960  06A9  02A2               	subwf	(beep@uc_count),f
  3961  06AA  0822               	movf	((beep@uc_count)),w
  3962  06AB  3AFF               	xorlw	0FFh
  3963  06AC  1D03               	skipz
  3964  06AD  2EAF               	goto	u2251
  3965  06AE  2EB0               	goto	u2250
  3966  06AF                     u2251:
  3967  06AF  2E8F               	goto	l339
  3968  06B0                     u2250:
  3969  06B0  2EB1               	goto	l341
  3970                           	
  3971  06B1                     l340:	
  3972                           	line	253
  3973                           	
  3974  06B1                     l341:	
  3975  06B1  0008               	return
  3976                           	opt stack 0
  3977                           GLOBAL	__end_of_beep
  3978  06B2                     	__end_of_beep:
  3979                           	signat	_beep,4216
  3980                           	global	_delay_ms
  3981                           
  3982 ;; *************** function _delay_ms *****************
  3983 ;; Defined at:
  3984 ;;		line 225 in file "../MC40SE Line Following UART.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  ui_value        2    4[COMMON] unsigned int 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;		None               void
  3991 ;; Registers used:
  3992 ;;		wreg
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3998 ;;      Params:         2       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0
  4000 ;;      Temps:          0       2       0       0       0
  4001 ;;      Totals:         2       2       0       0       0
  4002 ;;Total ram usage:        4 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    2
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_main
  4009 ;;		_beep
  4010 ;;		_mc40se_init
  4011 ;;		_relay_off_all
  4012 ;;		_line_following
  4013 ;;		_relay_on
  4014 ;;		_relay_off
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           psect	text1286,local,class=CODE,delta=2,merge=1
  4018                           global __ptext1286
  4019  0731                     __ptext1286:	;psect for function _delay_ms
  4020                           psect	text1286
  4021                           	file	"../MC40SE Line Following UART.c"
  4022                           	line	225
  4023                           	global	__size_of_delay_ms
  4024  001E                     	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  4025                           	
  4026  0731                     _delay_ms:	
  4027                           	opt	stack 3
  4028                           ; Regs used in _delay_ms: [wreg]
  4029                           	line	226
  4030                           	
  4031  0731                     l3024:	
  4032                           ;MC40SE Line Following UART.c: 226: while (ui_value-- > 0) {
  4033  0731  2F3D               	goto	l332
  4034                           	
  4035  0732                     l333:	
  4036                           	line	227
  4037                           	
  4038  0732                     l3026:	
  4039                           ;MC40SE Line Following UART.c: 227: _delay((unsigned long)((1)*(8000000/4000.0)));
  4040                           	opt asmopt_off
  4041  0732  3003               movlw	3
  4042  0733  1283               	bcf	status, 5	;RP0=0, select bank0
  4043  0734  1303               	bcf	status, 6	;RP1=0, select bank0
  4044  0735  00A1               movwf	((??_delay_ms+0)+0+1),f
  4045  0736  3097               	movlw	151
  4046  0737  00A0               movwf	((??_delay_ms+0)+0),f
  4047  0738                     u2717:
  4048  0738  0BA0               	decfsz	((??_delay_ms+0)+0),f
  4049  0739  2F38               	goto	u2717
  4050  073A  0BA1               	decfsz	((??_delay_ms+0)+0+1),f
  4051  073B  2F38               	goto	u2717
  4052  073C  2F3D               	nop2
  4053                           opt asmopt_on
  4054                           
  4055                           	line	228
  4056                           	
  4057  073D                     l332:	
  4058                           	line	226
  4059  073D  3001               	movlw	low(01h)
  4060  073E  02F4               	subwf	(delay_ms@ui_value),f
  4061  073F  3000               	movlw	high(01h)
  4062  0740  1C03               	skipc
  4063  0741  03F5               	decf	(delay_ms@ui_value+1),f
  4064  0742  02F5               	subwf	(delay_ms@ui_value+1),f
  4065  0743  30FF               	movlw	high(0FFFFh)
  4066  0744  0675               	xorwf	((delay_ms@ui_value+1)),w
  4067  0745  1D03               	skipz
  4068  0746  2F49               	goto	u2245
  4069  0747  30FF               	movlw	low(0FFFFh)
  4070  0748  0674               	xorwf	((delay_ms@ui_value)),w
  4071  0749                     u2245:
  4072                           
  4073  0749  1D03               	skipz
  4074  074A  2F4C               	goto	u2241
  4075  074B  2F4D               	goto	u2240
  4076  074C                     u2241:
  4077  074C  2F32               	goto	l3026
  4078  074D                     u2240:
  4079  074D  2F4E               	goto	l335
  4080                           	
  4081  074E                     l334:	
  4082                           	line	229
  4083                           	
  4084  074E                     l335:	
  4085  074E  0008               	return
  4086                           	opt stack 0
  4087                           GLOBAL	__end_of_delay_ms
  4088  074F                     	__end_of_delay_ms:
  4089                           	signat	_delay_ms,4216
  4090                           	global	_forward
  4091                           
  4092 ;; *************** function _forward *****************
  4093 ;; Defined at:
  4094 ;;		line 682 in file "../MC40SE Line Following UART.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;		None               void
  4101 ;; Registers used:
  4102 ;;		status,2, status,0, pclath, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4108 ;;      Params:         0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0
  4111 ;;      Totals:         0       0       0       0       0
  4112 ;;Total ram usage:        0 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    3
  4115 ;; This function calls:
  4116 ;;		_run
  4117 ;; This function is called by:
  4118 ;;		_line_following
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           psect	text1287,local,class=CODE,delta=2,merge=1
  4122                           global __ptext1287
  4123  0F7E                     __ptext1287:	;psect for function _forward
  4124                           psect	text1287
  4125                           	file	"../MC40SE Line Following UART.c"
  4126                           	line	682
  4127                           	global	__size_of_forward
  4128  000E                     	__size_of_forward	equ	__end_of_forward-_forward
  4129                           	
  4130  0F7E                     _forward:	
  4131                           	opt	stack 3
  4132                           ; Regs used in _forward: [status,2+status,0+pclath+cstack]
  4133                           	line	683
  4134                           	
  4135  0F7E                     l2462:	
  4136                           ;MC40SE Line Following UART.c: 684: if(1 == 1)
  4137  0F7E  120A  158A  271F   	fcall	_run
              120A  158A         
  4138                           	line	686
  4139                           	
  4140  0F83                     l2464:	
  4141                           ;MC40SE Line Following UART.c: 685: {
  4142                           ;MC40SE Line Following UART.c: 686: RE1 = 1;
  4143  0F83  1283               	bcf	status, 5	;RP0=0, select bank0
  4144  0F84  1303               	bcf	status, 6	;RP1=0, select bank0
  4145  0F85  1489               	bsf	(73/8),(73)&7	;volatile
  4146                           	line	687
  4147                           	
  4148  0F86                     l2466:	
  4149                           ;MC40SE Line Following UART.c: 687: RC5 = 0;
  4150  0F86  1287               	bcf	(61/8),(61)&7	;volatile
  4151                           	line	688
  4152                           ;MC40SE Line Following UART.c: 688: }
  4153  0F87  2F8B               	goto	l427
  4154                           	line	689
  4155                           	
  4156  0F88                     l425:	
  4157                           	line	691
  4158                           ;MC40SE Line Following UART.c: 689: else
  4159                           ;MC40SE Line Following UART.c: 690: {
  4160                           ;MC40SE Line Following UART.c: 691: RE1 = 0;
  4161  0F88  1089               	bcf	(73/8),(73)&7	;volatile
  4162                           	line	692
  4163                           ;MC40SE Line Following UART.c: 692: RC5 = 1;
  4164  0F89  1687               	bsf	(61/8),(61)&7	;volatile
  4165  0F8A  2F8B               	goto	l427
  4166                           	line	693
  4167                           	
  4168  0F8B                     l426:	
  4169                           	line	694
  4170                           	
  4171  0F8B                     l427:	
  4172  0F8B  0008               	return
  4173                           	opt stack 0
  4174                           GLOBAL	__end_of_forward
  4175  0F8C                     	__end_of_forward:
  4176                           	signat	_forward,88
  4177                           	global	_line_follow_cross
  4178                           
  4179 ;; *************** function _line_follow_cross *****************
  4180 ;; Defined at:
  4181 ;;		line 583 in file "../MC40SE Line Following UART.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  cross_count     1    wreg     unsigned char 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  cross_count     1   14[BANK0 ] unsigned char 
  4186 ;;  wait            1   16[BANK0 ] unsigned char 
  4187 ;;  current_cros    1   15[BANK0 ] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;		None               void
  4190 ;; Registers used:
  4191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4197 ;;      Params:         0       0       0       0       0
  4198 ;;      Locals:         0       3       0       0       0
  4199 ;;      Temps:          0       1       0       0       0
  4200 ;;      Totals:         0       4       0       0       0
  4201 ;;Total ram usage:        4 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    8
  4204 ;; This function calls:
  4205 ;;		_brushless
  4206 ;;		_LF
  4207 ;;		_LSA08_GetJunction
  4208 ;;		_LSA08_ClearJunction
  4209 ;; This function is called by:
  4210 ;;		_line_following
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           psect	text1288,local,class=CODE,delta=2,merge=1
  4214                           global __ptext1288
  4215  03B6                     __ptext1288:	;psect for function _line_follow_cross
  4216                           psect	text1288
  4217                           	file	"../MC40SE Line Following UART.c"
  4218                           	line	583
  4219                           	global	__size_of_line_follow_cross
  4220  0077                     	__size_of_line_follow_cross	equ	__end_of_line_follow_cross-_line_follow_cross
  4221                           	
  4222  03B6                     _line_follow_cross:	
  4223 ;; hardware stack exceeded
  4224                           	opt	stack 0
  4225                           ; Regs used in _line_follow_cross: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4226                           ;line_follow_cross@cross_count stored from wreg
  4227  03B6  1283               	bcf	status, 5	;RP0=0, select bank0
  4228  03B7  1303               	bcf	status, 6	;RP1=0, select bank0
  4229  03B8  00AE               	movwf	(line_follow_cross@cross_count)
  4230                           	line	584
  4231                           	
  4232  03B9                     l3138:	
  4233                           ;MC40SE Line Following UART.c: 584: unsigned char current_cross = 0,wait = 0;
  4234  03B9  01AF               	clrf	(line_follow_cross@current_cross)
  4235  03BA  01B0               	clrf	(line_follow_cross@wait)
  4236                           	line	586
  4237                           	
  4238  03BB                     l3140:	
  4239                           ;MC40SE Line Following UART.c: 586: brushless(1, 1, 0, left_s);
  4240  03BB  01A2               	clrf	(?_brushless)
  4241  03BC  0AA2               	incf	(?_brushless),f
  4242  03BD  01A3               	clrf	0+(?_brushless)+01h
  4243  03BE  0841               	movf	(_left_s+1),w
  4244  03BF  01A5               	clrf	1+(?_brushless)+02h
  4245  03C0  07A5               	addwf	1+(?_brushless)+02h
  4246  03C1  0840               	movf	(_left_s),w
  4247  03C2  01A4               	clrf	0+(?_brushless)+02h
  4248  03C3  07A4               	addwf	0+(?_brushless)+02h
  4249                           
  4250  03C4  3001               	movlw	(01h)
  4251  03C5  120A  118A  231B   	fcall	_brushless
              120A  118A         
  4252                           	line	587
  4253                           ;MC40SE Line Following UART.c: 587: brushless(2, 1, 1, right_s);
  4254  03CA  1283               	bcf	status, 5	;RP0=0, select bank0
  4255  03CB  1303               	bcf	status, 6	;RP1=0, select bank0
  4256  03CC  01A2               	clrf	(?_brushless)
  4257  03CD  0AA2               	incf	(?_brushless),f
  4258  03CE  01A3               	clrf	0+(?_brushless)+01h
  4259  03CF  0AA3               	incf	0+(?_brushless)+01h,f
  4260  03D0  0843               	movf	(_right_s+1),w
  4261  03D1  01A5               	clrf	1+(?_brushless)+02h
  4262  03D2  07A5               	addwf	1+(?_brushless)+02h
  4263  03D3  0842               	movf	(_right_s),w
  4264  03D4  01A4               	clrf	0+(?_brushless)+02h
  4265  03D5  07A4               	addwf	0+(?_brushless)+02h
  4266                           
  4267  03D6  3002               	movlw	(02h)
  4268  03D7  120A  118A  231B   	fcall	_brushless
              120A  118A         
  4269                           	line	588
  4270                           ;MC40SE Line Following UART.c: 588: while (cross_count > current_cross)
  4271  03DC  2BFA               	goto	l3150
  4272                           	
  4273  03DD                     l413:	
  4274                           	line	590
  4275                           	
  4276  03DD                     l3142:	
  4277                           ;MC40SE Line Following UART.c: 589: {
  4278                           ;MC40SE Line Following UART.c: 590: LF();
  4279  03DD  120A  118A  2015   	fcall	_LF
              120A  118A         
  4280  03E2  2BE3               	goto	l3144
  4281                           	line	591
  4282                           ;MC40SE Line Following UART.c: 591: do{
  4283                           	
  4284  03E3                     l414:	
  4285                           	line	592
  4286                           	
  4287  03E3                     l3144:	
  4288                           ;MC40SE Line Following UART.c: 592: current_cross=(unsigned char )LSA08_GetJunction();
  4289  03E3  120A  158A  279E   	fcall	_LSA08_GetJunction
              120A  118A         
  4290  03E8  1283               	bcf	status, 5	;RP0=0, select bank0
  4291  03E9  1303               	bcf	status, 6	;RP1=0, select bank0
  4292  03EA  00AD               	movwf	(??_line_follow_cross+0)+0
  4293  03EB  082D               	movf	(??_line_follow_cross+0)+0,w
  4294  03EC  00AF               	movwf	(line_follow_cross@current_cross)
  4295                           	line	593
  4296                           	
  4297  03ED                     l3146:	
  4298                           ;MC40SE Line Following UART.c: 593: }while(ERR_FLAG||current_cross>10);
  4299  03ED  08C4               	movf	(_ERR_FLAG),f
  4300  03EE  1D03               	skipz
  4301  03EF  2BF1               	goto	u2481
  4302  03F0  2BF2               	goto	u2480
  4303  03F1                     u2481:
  4304  03F1  2BE3               	goto	l3144
  4305  03F2                     u2480:
  4306                           	
  4307  03F2                     l3148:	
  4308  03F2  300B               	movlw	(0Bh)
  4309  03F3  022F               	subwf	(line_follow_cross@current_cross),w
  4310  03F4  1803               	skipnc
  4311  03F5  2BF7               	goto	u2491
  4312  03F6  2BF8               	goto	u2490
  4313  03F7                     u2491:
  4314  03F7  2BE3               	goto	l3144
  4315  03F8                     u2490:
  4316  03F8  2BFA               	goto	l3150
  4317                           	
  4318  03F9                     l415:	
  4319  03F9  2BFA               	goto	l3150
  4320                           	line	596
  4321                           	
  4322  03FA                     l412:	
  4323                           	line	588
  4324                           	
  4325  03FA                     l3150:	
  4326  03FA  1283               	bcf	status, 5	;RP0=0, select bank0
  4327  03FB  1303               	bcf	status, 6	;RP1=0, select bank0
  4328  03FC  082E               	movf	(line_follow_cross@cross_count),w
  4329  03FD  022F               	subwf	(line_follow_cross@current_cross),w
  4330  03FE  1C03               	skipc
  4331  03FF  2C01               	goto	u2501
  4332  0400  2C02               	goto	u2500
  4333  0401                     u2501:
  4334  0401  2BDD               	goto	l3142
  4335  0402                     u2500:
  4336  0402  2C05               	goto	l3152
  4337                           	
  4338  0403                     l416:	
  4339                           	line	597
  4340                           ;MC40SE Line Following UART.c: 596: }
  4341                           ;MC40SE Line Following UART.c: 597: while(LSA08_ClearJunction()!=1);
  4342  0403  2C05               	goto	l3152
  4343                           	
  4344  0404                     l418:	
  4345  0404  2C05               	goto	l3152
  4346                           	
  4347  0405                     l417:	
  4348                           	
  4349  0405                     l3152:	
  4350  0405  120A  158A  27B1   	fcall	_LSA08_ClearJunction
              120A  118A         
  4351  040A  3A01               	xorlw	01h
  4352  040B  1D03               	skipz
  4353  040C  2C0E               	goto	u2511
  4354  040D  2C0F               	goto	u2510
  4355  040E                     u2511:
  4356  040E  2C05               	goto	l3152
  4357  040F                     u2510:
  4358                           	
  4359  040F                     l419:	
  4360                           	line	599
  4361                           ;MC40SE Line Following UART.c: 599: for(wait=0;wait<=70;wait++)
  4362  040F  1283               	bcf	status, 5	;RP0=0, select bank0
  4363  0410  1303               	bcf	status, 6	;RP1=0, select bank0
  4364  0411  01B0               	clrf	(line_follow_cross@wait)
  4365                           	
  4366  0412                     l3154:	
  4367  0412  3047               	movlw	(047h)
  4368  0413  0230               	subwf	(line_follow_cross@wait),w
  4369  0414  1C03               	skipc
  4370  0415  2C17               	goto	u2521
  4371  0416  2C18               	goto	u2520
  4372  0417                     u2521:
  4373  0417  2C1A               	goto	l3158
  4374  0418                     u2520:
  4375  0418  2C2C               	goto	l422
  4376                           	
  4377  0419                     l3156:	
  4378  0419  2C2C               	goto	l422
  4379                           	line	600
  4380                           	
  4381  041A                     l420:	
  4382                           	line	601
  4383                           	
  4384  041A                     l3158:	
  4385                           ;MC40SE Line Following UART.c: 600: {
  4386                           ;MC40SE Line Following UART.c: 601: LF();
  4387  041A  120A  118A  2015   	fcall	_LF
              120A  118A         
  4388                           	line	599
  4389                           	
  4390  041F                     l3160:	
  4391  041F  3001               	movlw	(01h)
  4392  0420  1283               	bcf	status, 5	;RP0=0, select bank0
  4393  0421  1303               	bcf	status, 6	;RP1=0, select bank0
  4394  0422  00AD               	movwf	(??_line_follow_cross+0)+0
  4395  0423  082D               	movf	(??_line_follow_cross+0)+0,w
  4396  0424  07B0               	addwf	(line_follow_cross@wait),f
  4397                           	
  4398  0425                     l3162:	
  4399  0425  3047               	movlw	(047h)
  4400  0426  0230               	subwf	(line_follow_cross@wait),w
  4401  0427  1C03               	skipc
  4402  0428  2C2A               	goto	u2531
  4403  0429  2C2B               	goto	u2530
  4404  042A                     u2531:
  4405  042A  2C1A               	goto	l3158
  4406  042B                     u2530:
  4407  042B  2C2C               	goto	l422
  4408                           	
  4409  042C                     l421:	
  4410                           	line	603
  4411                           	
  4412  042C                     l422:	
  4413  042C  0008               	return
  4414                           	opt stack 0
  4415                           GLOBAL	__end_of_line_follow_cross
  4416  042D                     	__end_of_line_follow_cross:
  4417                           	signat	_line_follow_cross,4216
  4418                           	global	_LSA08_ClearJunction
  4419                           
  4420 ;; *************** function _LSA08_ClearJunction *****************
  4421 ;; Defined at:
  4422 ;;		line 333 in file "../LSA08.h"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;		None
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;		None
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      unsigned char 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0, pclath, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4436 ;;      Params:         0       0       0       0       0
  4437 ;;      Locals:         0       0       0       0       0
  4438 ;;      Temps:          0       2       0       0       0
  4439 ;;      Totals:         0       2       0       0       0
  4440 ;;Total ram usage:        2 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    5
  4443 ;; This function calls:
  4444 ;;		_SEND_PACKET
  4445 ;; This function is called by:
  4446 ;;		_LSA08_Init
  4447 ;;		_line_follow_cross
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           psect	text1289,local,class=CODE,delta=2,merge=1
  4451                           global __ptext1289
  4452  0FB1                     __ptext1289:	;psect for function _LSA08_ClearJunction
  4453                           psect	text1289
  4454                           	file	"../LSA08.h"
  4455                           	line	333
  4456                           	global	__size_of_LSA08_ClearJunction
  4457  0013                     	__size_of_LSA08_ClearJunction	equ	__end_of_LSA08_ClearJunction-_LSA08_ClearJunction
  4458                           	
  4459  0FB1                     _LSA08_ClearJunction:	
  4460                           	opt	stack 0
  4461                           ; Regs used in _LSA08_ClearJunction: [wreg+status,2+status,0+pclath+cstack]
  4462                           	line	335
  4463                           	
  4464  0FB1                     l2844:	
  4465                           ;LSA08.h: 335: return(SEND_PACKET(LSA08_ADD, 'X', 0,2));
  4466  0FB1  3058               	movlw	(058h)
  4467  0FB2  1283               	bcf	status, 5	;RP0=0, select bank0
  4468  0FB3  1303               	bcf	status, 6	;RP1=0, select bank0
  4469  0FB4  00AB               	movwf	(??_LSA08_ClearJunction+0)+0
  4470  0FB5  082B               	movf	(??_LSA08_ClearJunction+0)+0,w
  4471  0FB6  00A6               	movwf	(?_SEND_PACKET)
  4472  0FB7  01A7               	clrf	0+(?_SEND_PACKET)+01h
  4473  0FB8  3002               	movlw	(02h)
  4474  0FB9  00AC               	movwf	(??_LSA08_ClearJunction+1)+0
  4475  0FBA  082C               	movf	(??_LSA08_ClearJunction+1)+0,w
  4476  0FBB  00A8               	movwf	0+(?_SEND_PACKET)+02h
  4477  0FBC  0845               	movf	(_LSA08_ADD),w
  4478  0FBD  120A  118A  265C   	fcall	_SEND_PACKET
              120A  158A         
  4479  0FC2  2FC3               	goto	l291
  4480                           	
  4481  0FC3                     l2846:	
  4482                           	line	337
  4483                           	
  4484  0FC3                     l291:	
  4485  0FC3  0008               	return
  4486                           	opt stack 0
  4487                           GLOBAL	__end_of_LSA08_ClearJunction
  4488  0FC4                     	__end_of_LSA08_ClearJunction:
  4489                           	signat	_LSA08_ClearJunction,89
  4490                           	global	_LSA08_GetJunction
  4491                           
  4492 ;; *************** function _LSA08_GetJunction *****************
  4493 ;; Defined at:
  4494 ;;		line 326 in file "../LSA08.h"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;		None
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      unsigned char 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0, pclath, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4508 ;;      Params:         0       0       0       0       0
  4509 ;;      Locals:         0       0       0       0       0
  4510 ;;      Temps:          0       1       0       0       0
  4511 ;;      Totals:         0       1       0       0       0
  4512 ;;Total ram usage:        1 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    5
  4515 ;; This function calls:
  4516 ;;		_SEND_PACKET
  4517 ;; This function is called by:
  4518 ;;		_line_follow_cross
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           psect	text1290,local,class=CODE,delta=2,merge=1
  4522                           global __ptext1290
  4523  0F9E                     __ptext1290:	;psect for function _LSA08_GetJunction
  4524                           psect	text1290
  4525                           	file	"../LSA08.h"
  4526                           	line	326
  4527                           	global	__size_of_LSA08_GetJunction
  4528  0013                     	__size_of_LSA08_GetJunction	equ	__end_of_LSA08_GetJunction-_LSA08_GetJunction
  4529                           	
  4530  0F9E                     _LSA08_GetJunction:	
  4531                           	opt	stack 0
  4532                           ; Regs used in _LSA08_GetJunction: [wreg+status,2+status,0+pclath+cstack]
  4533                           	line	328
  4534                           	
  4535  0F9E                     l2874:	
  4536                           ;LSA08.h: 328: SEND_PACKET(LSA08_ADD, 'X', 1,1);
  4537  0F9E  3058               	movlw	(058h)
  4538  0F9F  1283               	bcf	status, 5	;RP0=0, select bank0
  4539  0FA0  1303               	bcf	status, 6	;RP1=0, select bank0
  4540  0FA1  00AB               	movwf	(??_LSA08_GetJunction+0)+0
  4541  0FA2  082B               	movf	(??_LSA08_GetJunction+0)+0,w
  4542  0FA3  00A6               	movwf	(?_SEND_PACKET)
  4543  0FA4  01A7               	clrf	0+(?_SEND_PACKET)+01h
  4544  0FA5  0AA7               	incf	0+(?_SEND_PACKET)+01h,f
  4545  0FA6  01A8               	clrf	0+(?_SEND_PACKET)+02h
  4546  0FA7  0AA8               	incf	0+(?_SEND_PACKET)+02h,f
  4547  0FA8  0845               	movf	(_LSA08_ADD),w
  4548  0FA9  120A  118A  265C   	fcall	_SEND_PACKET
              120A  158A         
  4549                           	line	329
  4550                           	
  4551  0FAE                     l2876:	
  4552                           ;LSA08.h: 329: return(rec[0]);
  4553  0FAE  0876               	movf	(_rec),w
  4554  0FAF  2FB0               	goto	l288
  4555                           	
  4556  0FB0                     l2878:	
  4557                           	line	331
  4558                           	
  4559  0FB0                     l288:	
  4560  0FB0  0008               	return
  4561                           	opt stack 0
  4562                           GLOBAL	__end_of_LSA08_GetJunction
  4563  0FB1                     	__end_of_LSA08_GetJunction:
  4564                           	signat	_LSA08_GetJunction,89
  4565                           	global	_SEND_PACKET
  4566                           
  4567 ;; *************** function _SEND_PACKET *****************
  4568 ;; Defined at:
  4569 ;;		line 247 in file "../LSA08.h"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  add             1    wreg     unsigned char 
  4572 ;;  command         1    6[BANK0 ] unsigned char 
  4573 ;;  value           1    7[BANK0 ] unsigned char 
  4574 ;;  com_dat         1    8[BANK0 ] unsigned char 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  add             1   10[BANK0 ] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      unsigned char 
  4579 ;; Registers used:
  4580 ;;		wreg, status,2, status,0, pclath, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4586 ;;      Params:         0       3       0       0       0
  4587 ;;      Locals:         0       1       0       0       0
  4588 ;;      Temps:          0       1       0       0       0
  4589 ;;      Totals:         0       5       0       0       0
  4590 ;;Total ram usage:        5 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    4
  4593 ;; This function calls:
  4594 ;;		_UART_SEND
  4595 ;;		_UART_RESPONSE
  4596 ;; This function is called by:
  4597 ;;		_LSA08_GetJunction
  4598 ;;		_LSA08_ClearJunction
  4599 ;;		_LSA08_UARTMode
  4600 ;;		_LSA08_Calibrate
  4601 ;;		_LSA08_LineMode
  4602 ;;		_LSA08_Threshold
  4603 ;;		_LSA08_JunctionWidth
  4604 ;;		_LSA08_BL
  4605 ;;		_LSA08_Contrast
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           psect	text1291,local,class=CODE,delta=2,merge=1
  4609                           global __ptext1291
  4610  065C                     __ptext1291:	;psect for function _SEND_PACKET
  4611                           psect	text1291
  4612                           	file	"../LSA08.h"
  4613                           	line	247
  4614                           	global	__size_of_SEND_PACKET
  4615  002F                     	__size_of_SEND_PACKET	equ	__end_of_SEND_PACKET-_SEND_PACKET
  4616                           	
  4617  065C                     _SEND_PACKET:	
  4618                           	opt	stack 0
  4619                           ; Regs used in _SEND_PACKET: [wreg+status,2+status,0+pclath+cstack]
  4620                           ;SEND_PACKET@add stored from wreg
  4621  065C  1283               	bcf	status, 5	;RP0=0, select bank0
  4622  065D  1303               	bcf	status, 6	;RP1=0, select bank0
  4623  065E  00AA               	movwf	(SEND_PACKET@add)
  4624                           	line	248
  4625                           	
  4626  065F                     l2832:	
  4627                           ;LSA08.h: 248: UART_SEND(add);
  4628  065F  082A               	movf	(SEND_PACKET@add),w
  4629  0660  120A  158A  2770   	fcall	_UART_SEND
              120A  118A         
  4630                           	line	249
  4631                           ;LSA08.h: 249: UART_SEND(command);
  4632  0665  1283               	bcf	status, 5	;RP0=0, select bank0
  4633  0666  1303               	bcf	status, 6	;RP1=0, select bank0
  4634  0667  0826               	movf	(SEND_PACKET@command),w
  4635  0668  120A  158A  2770   	fcall	_UART_SEND
              120A  118A         
  4636                           	line	250
  4637                           ;LSA08.h: 250: UART_SEND(value);
  4638  066D  1283               	bcf	status, 5	;RP0=0, select bank0
  4639  066E  1303               	bcf	status, 6	;RP1=0, select bank0
  4640  066F  0827               	movf	(SEND_PACKET@value),w
  4641  0670  120A  158A  2770   	fcall	_UART_SEND
              120A  118A         
  4642                           	line	251
  4643                           ;LSA08.h: 251: UART_SEND(add+command+value);
  4644  0675  1283               	bcf	status, 5	;RP0=0, select bank0
  4645  0676  1303               	bcf	status, 6	;RP1=0, select bank0
  4646  0677  0826               	movf	(SEND_PACKET@command),w
  4647  0678  072A               	addwf	(SEND_PACKET@add),w
  4648  0679  00A9               	movwf	(??_SEND_PACKET+0)+0
  4649  067A  0827               	movf	(SEND_PACKET@value),w
  4650  067B  0729               	addwf	0+(??_SEND_PACKET+0)+0,w
  4651  067C  120A  158A  2770   	fcall	_UART_SEND
              120A  118A         
  4652                           	line	252
  4653                           	
  4654  0681                     l2834:	
  4655                           ;LSA08.h: 252: return (UART_RESPONSE(com_dat));
  4656  0681  1283               	bcf	status, 5	;RP0=0, select bank0
  4657  0682  1303               	bcf	status, 6	;RP1=0, select bank0
  4658  0683  0828               	movf	(SEND_PACKET@com_dat),w
  4659  0684  120A  118A  2627   	fcall	_UART_RESPONSE
              120A  118A         
  4660  0689  2E8A               	goto	l277
  4661                           	
  4662  068A                     l2836:	
  4663                           	line	253
  4664                           	
  4665  068A                     l277:	
  4666  068A  0008               	return
  4667                           	opt stack 0
  4668                           GLOBAL	__end_of_SEND_PACKET
  4669  068B                     	__end_of_SEND_PACKET:
  4670                           	signat	_SEND_PACKET,16505
  4671                           	global	_UART_RESPONSE
  4672                           
  4673 ;; *************** function _UART_RESPONSE *****************
  4674 ;; Defined at:
  4675 ;;		line 227 in file "../LSA08.h"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  rec_bytes       1    wreg     unsigned char 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  rec_bytes       1    5[BANK0 ] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      unsigned char 
  4682 ;; Registers used:
  4683 ;;		wreg, pclath, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4689 ;;      Params:         0       0       0       0       0
  4690 ;;      Locals:         0       1       0       0       0
  4691 ;;      Temps:          1       0       0       0       0
  4692 ;;      Totals:         1       1       0       0       0
  4693 ;;Total ram usage:        2 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    3
  4696 ;; This function calls:
  4697 ;;		_UART_REC
  4698 ;; This function is called by:
  4699 ;;		_SEND_PACKET
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           psect	text1292,local,class=CODE,delta=2,merge=1
  4703                           global __ptext1292
  4704  0627                     __ptext1292:	;psect for function _UART_RESPONSE
  4705                           psect	text1292
  4706                           	file	"../LSA08.h"
  4707                           	line	227
  4708                           	global	__size_of_UART_RESPONSE
  4709  0035                     	__size_of_UART_RESPONSE	equ	__end_of_UART_RESPONSE-_UART_RESPONSE
  4710                           	
  4711  0627                     _UART_RESPONSE:	
  4712                           	opt	stack 0
  4713                           ; Regs used in _UART_RESPONSE: [wreg+pclath+cstack]
  4714                           ;UART_RESPONSE@rec_bytes stored from wreg
  4715                           	line	229
  4716  0627  1283               	bcf	status, 5	;RP0=0, select bank0
  4717  0628  1303               	bcf	status, 6	;RP1=0, select bank0
  4718  0629  00A5               	movwf	(UART_RESPONSE@rec_bytes)
  4719                           	
  4720  062A                     l2768:	
  4721                           ;LSA08.h: 229: rec[0]=UART_REC();
  4722  062A  120A  118A  2582   	fcall	_UART_REC
              120A  118A         
  4723  062F  00F5               	movwf	(??_UART_RESPONSE+0)+0
  4724  0630  0875               	movf	(??_UART_RESPONSE+0)+0,w
  4725  0631  00F6               	movwf	(_rec)
  4726                           	line	230
  4727                           	
  4728  0632                     l2770:	
  4729                           ;LSA08.h: 230: if(rec_bytes==1)
  4730  0632  1283               	bcf	status, 5	;RP0=0, select bank0
  4731  0633  1303               	bcf	status, 6	;RP1=0, select bank0
  4732  0634  0825               	movf	(UART_RESPONSE@rec_bytes),w
  4733  0635  3A01               	xorlw	01h
  4734  0636  1D03               	skipz
  4735  0637  2E39               	goto	u1991
  4736  0638  2E3A               	goto	u1990
  4737  0639                     u1991:
  4738  0639  2E3C               	goto	l2774
  4739  063A                     u1990:
  4740  063A  2E5B               	goto	l270
  4741                           	line	231
  4742                           	
  4743  063B                     l2772:	
  4744                           ;LSA08.h: 231: return;
  4745  063B  2E5B               	goto	l270
  4746                           	
  4747  063C                     l269:	
  4748                           	line	233
  4749                           	
  4750  063C                     l2774:	
  4751                           ;LSA08.h: 233: rec[1]=UART_REC();
  4752  063C  120A  118A  2582   	fcall	_UART_REC
              120A  118A         
  4753  0641  00F5               	movwf	(??_UART_RESPONSE+0)+0
  4754  0642  0875               	movf	(??_UART_RESPONSE+0)+0,w
  4755  0643  00F7               	movwf	0+(_rec)+01h
  4756                           	line	236
  4757                           	
  4758  0644                     l2776:	
  4759                           ;LSA08.h: 236: if (rec[0]== 'O') {
  4760  0644  0876               	movf	(_rec),w
  4761  0645  3A4F               	xorlw	04Fh
  4762  0646  1D03               	skipz
  4763  0647  2E49               	goto	u2001
  4764  0648  2E4A               	goto	u2000
  4765  0649                     u2001:
  4766  0649  2E58               	goto	l2790
  4767  064A                     u2000:
  4768                           	line	237
  4769                           	
  4770  064A                     l2778:	
  4771                           ;LSA08.h: 237: if (rec[1] == 'K') {
  4772  064A  0877               	movf	0+(_rec)+01h,w
  4773  064B  3A4B               	xorlw	04Bh
  4774  064C  1D03               	skipz
  4775  064D  2E4F               	goto	u2011
  4776  064E  2E50               	goto	u2010
  4777  064F                     u2011:
  4778  064F  2E54               	goto	l2786
  4779  0650                     u2010:
  4780                           	line	238
  4781                           	
  4782  0650                     l2780:	
  4783                           ;LSA08.h: 238: return (1);
  4784  0650  3001               	movlw	(01h)
  4785  0651  2E5B               	goto	l270
  4786                           	
  4787  0652                     l2782:	
  4788  0652  2E5B               	goto	l270
  4789                           	line	239
  4790                           	
  4791  0653                     l2784:	
  4792                           ;LSA08.h: 239: } else
  4793  0653  2E5B               	goto	l270
  4794                           	
  4795  0654                     l272:	
  4796                           	line	240
  4797                           	
  4798  0654                     l2786:	
  4799                           ;LSA08.h: 240: return (0);
  4800  0654  3000               	movlw	(0)
  4801  0655  2E5B               	goto	l270
  4802                           	
  4803  0656                     l2788:	
  4804  0656  2E5B               	goto	l270
  4805                           	
  4806  0657                     l273:	
  4807                           	line	241
  4808                           ;LSA08.h: 241: }
  4809  0657  2E5B               	goto	l270
  4810                           	line	242
  4811                           	
  4812  0658                     l271:	
  4813                           	line	243
  4814                           	
  4815  0658                     l2790:	
  4816                           ;LSA08.h: 242: else
  4817                           ;LSA08.h: 243: return(0);
  4818  0658  3000               	movlw	(0)
  4819  0659  2E5B               	goto	l270
  4820                           	
  4821  065A                     l2792:	
  4822  065A  2E5B               	goto	l270
  4823                           	
  4824  065B                     l274:	
  4825                           	line	244
  4826                           	
  4827  065B                     l270:	
  4828  065B  0008               	return
  4829                           	opt stack 0
  4830                           GLOBAL	__end_of_UART_RESPONSE
  4831  065C                     	__end_of_UART_RESPONSE:
  4832                           	signat	_UART_RESPONSE,4217
  4833                           	global	_UART_SEND
  4834                           
  4835 ;; *************** function _UART_SEND *****************
  4836 ;; Defined at:
  4837 ;;		line 843 in file "../MC40SE Line Following UART.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  data            1    wreg     unsigned char 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;  data            1    4[COMMON] unsigned char 
  4842 ;; Return value:  Size  Location     Type
  4843 ;;		None               void
  4844 ;; Registers used:
  4845 ;;		wreg
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4851 ;;      Params:         0       0       0       0       0
  4852 ;;      Locals:         1       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0
  4854 ;;      Totals:         1       0       0       0       0
  4855 ;;Total ram usage:        1 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    2
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_SEND_PACKET
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           psect	text1293,local,class=CODE,delta=2,merge=1
  4865                           global __ptext1293
  4866  0F70                     __ptext1293:	;psect for function _UART_SEND
  4867                           psect	text1293
  4868                           	file	"../MC40SE Line Following UART.c"
  4869                           	line	843
  4870                           	global	__size_of_UART_SEND
  4871  000E                     	__size_of_UART_SEND	equ	__end_of_UART_SEND-_UART_SEND
  4872                           	
  4873  0F70                     _UART_SEND:	
  4874                           	opt	stack 1
  4875                           ; Regs used in _UART_SEND: [wreg]
  4876                           ;UART_SEND@data stored from wreg
  4877  0F70  00F4               	movwf	(UART_SEND@data)
  4878                           	line	844
  4879                           	
  4880  0F71                     l2142:	
  4881                           ;MC40SE Line Following UART.c: 844: while(!TRMT) ;
  4882  0F71  2F72               	goto	l489
  4883                           	
  4884  0F72                     l490:	
  4885                           	
  4886  0F72                     l489:	
  4887  0F72  1683               	bsf	status, 5	;RP0=1, select bank1
  4888  0F73  1303               	bcf	status, 6	;RP1=0, select bank1
  4889  0F74  1C98               	btfss	(1217/8)^080h,(1217)&7	;volatile
  4890  0F75  2F77               	goto	u1091
  4891  0F76  2F78               	goto	u1090
  4892  0F77                     u1091:
  4893  0F77  2F72               	goto	l489
  4894  0F78                     u1090:
  4895  0F78  2F79               	goto	l2144
  4896                           	
  4897  0F79                     l491:	
  4898                           	line	845
  4899                           	
  4900  0F79                     l2144:	
  4901                           ;MC40SE Line Following UART.c: 845: TXREG=data;
  4902  0F79  0874               	movf	(UART_SEND@data),w
  4903  0F7A  1283               	bcf	status, 5	;RP0=0, select bank0
  4904  0F7B  1303               	bcf	status, 6	;RP1=0, select bank0
  4905  0F7C  0099               	movwf	(25)	;volatile
  4906                           	line	847
  4907                           	
  4908  0F7D                     l492:	
  4909  0F7D  0008               	return
  4910                           	opt stack 0
  4911                           GLOBAL	__end_of_UART_SEND
  4912  0F7E                     	__end_of_UART_SEND:
  4913                           	signat	_UART_SEND,4216
  4914                           	global	_LF
  4915                           
  4916 ;; *************** function _LF *****************
  4917 ;; Defined at:
  4918 ;;		line 762 in file "../MC40SE Line Following UART.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  UARTRC          1   10[BANK0 ] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;		None               void
  4925 ;; Registers used:
  4926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4932 ;;      Params:         0       0       0       0       0
  4933 ;;      Locals:         0       1       0       0       0
  4934 ;;      Temps:          0       1       0       0       0
  4935 ;;      Totals:         0       2       0       0       0
  4936 ;;Total ram usage:        2 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    7
  4939 ;; This function calls:
  4940 ;;		_UART_DUMP
  4941 ;;		_LSA08_GetSensor
  4942 ;;		_brushless
  4943 ;;		_lcd_clear_msg
  4944 ;; This function is called by:
  4945 ;;		_line_follow_cross
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           psect	text1294,local,class=CODE,delta=2,merge=1
  4949                           global __ptext1294
  4950  0015                     __ptext1294:	;psect for function _LF
  4951                           psect	text1294
  4952                           	file	"../MC40SE Line Following UART.c"
  4953                           	line	762
  4954                           	global	__size_of_LF
  4955  019E                     	__size_of_LF	equ	__end_of_LF-_LF
  4956                           	
  4957  0015                     _LF:	
  4958 ;; hardware stack exceeded
  4959                           	opt	stack 0
  4960                           ; Regs used in _LF: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4961                           	line	763
  4962                           	
  4963  0015                     l3164:	
  4964                           ;MC40SE Line Following UART.c: 763: unsigned char UARTRC=0;
  4965  0015  1283               	bcf	status, 5	;RP0=0, select bank0
  4966  0016  1303               	bcf	status, 6	;RP1=0, select bank0
  4967  0017  01AA               	clrf	(LF@UARTRC)
  4968                           	line	764
  4969                           	
  4970  0018                     l3166:	
  4971                           ;MC40SE Line Following UART.c: 764: UART_DUMP();
  4972  0018  120A  158A  27D7   	fcall	_UART_DUMP
              120A  118A         
  4973                           	line	765
  4974                           ;MC40SE Line Following UART.c: 765: UARTRC=LSA08_GetSensor();
  4975  001D  120A  118A  274F   	fcall	_LSA08_GetSensor
              120A  118A         
  4976  0022  1283               	bcf	status, 5	;RP0=0, select bank0
  4977  0023  1303               	bcf	status, 6	;RP1=0, select bank0
  4978  0024  00A9               	movwf	(??_LF+0)+0
  4979  0025  0829               	movf	(??_LF+0)+0,w
  4980  0026  00AA               	movwf	(LF@UARTRC)
  4981                           	line	767
  4982                           	
  4983  0027                     l3168:	
  4984                           ;MC40SE Line Following UART.c: 767: if((UARTRC==0x10) || (UARTRC==0x08) || (UARTRC==0x18
                                 ))
  4985  0027  082A               	movf	(LF@UARTRC),w
  4986  0028  3A10               	xorlw	010h
  4987  0029  1903               	skipnz
  4988  002A  282C               	goto	u2541
  4989  002B  282D               	goto	u2540
  4990  002C                     u2541:
  4991  002C  283A               	goto	l3174
  4992  002D                     u2540:
  4993                           	
  4994  002D                     l3170:	
  4995  002D  082A               	movf	(LF@UARTRC),w
  4996  002E  3A08               	xorlw	08h
  4997  002F  1903               	skipnz
  4998  0030  2832               	goto	u2551
  4999  0031  2833               	goto	u2550
  5000  0032                     u2551:
  5001  0032  283A               	goto	l3174
  5002  0033                     u2550:
  5003                           	
  5004  0033                     l3172:	
  5005  0033  082A               	movf	(LF@UARTRC),w
  5006  0034  3A18               	xorlw	018h
  5007  0035  1D03               	skipz
  5008  0036  2838               	goto	u2561
  5009  0037  2839               	goto	u2560
  5010  0038                     u2561:
  5011  0038  285C               	goto	l3178
  5012  0039                     u2560:
  5013  0039  283A               	goto	l3174
  5014                           	
  5015  003A                     l456:	
  5016                           	line	769
  5017                           	
  5018  003A                     l3174:	
  5019                           ;MC40SE Line Following UART.c: 768: {
  5020                           ;MC40SE Line Following UART.c: 769: brushless(2, 0, 0, 600);
  5021  003A  01A2               	clrf	(?_brushless)
  5022  003B  01A3               	clrf	0+(?_brushless)+01h
  5023  003C  3058               	movlw	low(0258h)
  5024  003D  00A4               	movwf	0+(?_brushless)+02h
  5025  003E  3002               	movlw	high(0258h)
  5026  003F  00A5               	movwf	(0+(?_brushless)+02h)+1
  5027  0040  3002               	movlw	(02h)
  5028  0041  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5029                           	line	770
  5030                           ;MC40SE Line Following UART.c: 770: brushless(1, 0, 1, 600);
  5031  0046  1283               	bcf	status, 5	;RP0=0, select bank0
  5032  0047  1303               	bcf	status, 6	;RP1=0, select bank0
  5033  0048  01A2               	clrf	(?_brushless)
  5034  0049  01A3               	clrf	0+(?_brushless)+01h
  5035  004A  0AA3               	incf	0+(?_brushless)+01h,f
  5036  004B  3058               	movlw	low(0258h)
  5037  004C  00A4               	movwf	0+(?_brushless)+02h
  5038  004D  3002               	movlw	high(0258h)
  5039  004E  00A5               	movwf	(0+(?_brushless)+02h)+1
  5040  004F  3001               	movlw	(01h)
  5041  0050  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5042                           	line	771
  5043                           	
  5044  0055                     l3176:	
  5045                           ;MC40SE Line Following UART.c: 771: lcd_clear_msg(" forward");
  5046  0055  303E               	movlw	((STR_7-__stringbase))&0ffh
  5047  0056  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  5048                           	line	772
  5049                           ;MC40SE Line Following UART.c: 772: }
  5050  005B  29B2               	goto	l483
  5051                           	line	774
  5052                           	
  5053  005C                     l454:	
  5054                           	
  5055  005C                     l3178:	
  5056                           ;MC40SE Line Following UART.c: 774: else if((UARTRC==0x20) || (UARTRC==0x30))
  5057  005C  1283               	bcf	status, 5	;RP0=0, select bank0
  5058  005D  1303               	bcf	status, 6	;RP1=0, select bank0
  5059  005E  082A               	movf	(LF@UARTRC),w
  5060  005F  3A20               	xorlw	020h
  5061  0060  1903               	skipnz
  5062  0061  2863               	goto	u2571
  5063  0062  2864               	goto	u2570
  5064  0063                     u2571:
  5065  0063  286B               	goto	l3182
  5066  0064                     u2570:
  5067                           	
  5068  0064                     l3180:	
  5069  0064  082A               	movf	(LF@UARTRC),w
  5070  0065  3A30               	xorlw	030h
  5071  0066  1D03               	skipz
  5072  0067  2869               	goto	u2581
  5073  0068  286A               	goto	u2580
  5074  0069                     u2581:
  5075  0069  288D               	goto	l3186
  5076  006A                     u2580:
  5077  006A  286B               	goto	l3182
  5078                           	
  5079  006B                     l460:	
  5080                           	line	776
  5081                           	
  5082  006B                     l3182:	
  5083                           ;MC40SE Line Following UART.c: 775: {
  5084                           ;MC40SE Line Following UART.c: 776: brushless(2, 0, 0, 600);
  5085  006B  01A2               	clrf	(?_brushless)
  5086  006C  01A3               	clrf	0+(?_brushless)+01h
  5087  006D  3058               	movlw	low(0258h)
  5088  006E  00A4               	movwf	0+(?_brushless)+02h
  5089  006F  3002               	movlw	high(0258h)
  5090  0070  00A5               	movwf	(0+(?_brushless)+02h)+1
  5091  0071  3002               	movlw	(02h)
  5092  0072  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5093                           	line	777
  5094                           ;MC40SE Line Following UART.c: 777: brushless(1, 0, 1, 500);
  5095  0077  1283               	bcf	status, 5	;RP0=0, select bank0
  5096  0078  1303               	bcf	status, 6	;RP1=0, select bank0
  5097  0079  01A2               	clrf	(?_brushless)
  5098  007A  01A3               	clrf	0+(?_brushless)+01h
  5099  007B  0AA3               	incf	0+(?_brushless)+01h,f
  5100  007C  30F4               	movlw	low(01F4h)
  5101  007D  00A4               	movwf	0+(?_brushless)+02h
  5102  007E  3001               	movlw	high(01F4h)
  5103  007F  00A5               	movwf	(0+(?_brushless)+02h)+1
  5104  0080  3001               	movlw	(01h)
  5105  0081  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5106                           	line	778
  5107                           	
  5108  0086                     l3184:	
  5109                           ;MC40SE Line Following UART.c: 778: lcd_clear_msg("right  ");
  5110  0086  3057               	movlw	((STR_8-__stringbase))&0ffh
  5111  0087  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  5112                           	line	779
  5113                           ;MC40SE Line Following UART.c: 779: }
  5114  008C  29B2               	goto	l483
  5115                           	line	780
  5116                           	
  5117  008D                     l458:	
  5118                           	
  5119  008D                     l3186:	
  5120                           ;MC40SE Line Following UART.c: 780: else if((UARTRC==0x40) || (UARTRC==0x60))
  5121  008D  1283               	bcf	status, 5	;RP0=0, select bank0
  5122  008E  1303               	bcf	status, 6	;RP1=0, select bank0
  5123  008F  082A               	movf	(LF@UARTRC),w
  5124  0090  3A40               	xorlw	040h
  5125  0091  1903               	skipnz
  5126  0092  2894               	goto	u2591
  5127  0093  2895               	goto	u2590
  5128  0094                     u2591:
  5129  0094  289C               	goto	l3190
  5130  0095                     u2590:
  5131                           	
  5132  0095                     l3188:	
  5133  0095  082A               	movf	(LF@UARTRC),w
  5134  0096  3A60               	xorlw	060h
  5135  0097  1D03               	skipz
  5136  0098  289A               	goto	u2601
  5137  0099  289B               	goto	u2600
  5138  009A                     u2601:
  5139  009A  28BE               	goto	l3194
  5140  009B                     u2600:
  5141  009B  289C               	goto	l3190
  5142                           	
  5143  009C                     l464:	
  5144                           	line	782
  5145                           	
  5146  009C                     l3190:	
  5147                           ;MC40SE Line Following UART.c: 781: {
  5148                           ;MC40SE Line Following UART.c: 782: brushless(2, 0, 0, 600);
  5149  009C  01A2               	clrf	(?_brushless)
  5150  009D  01A3               	clrf	0+(?_brushless)+01h
  5151  009E  3058               	movlw	low(0258h)
  5152  009F  00A4               	movwf	0+(?_brushless)+02h
  5153  00A0  3002               	movlw	high(0258h)
  5154  00A1  00A5               	movwf	(0+(?_brushless)+02h)+1
  5155  00A2  3002               	movlw	(02h)
  5156  00A3  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5157                           	line	783
  5158                           ;MC40SE Line Following UART.c: 783: brushless(1, 0, 1, 400);
  5159  00A8  1283               	bcf	status, 5	;RP0=0, select bank0
  5160  00A9  1303               	bcf	status, 6	;RP1=0, select bank0
  5161  00AA  01A2               	clrf	(?_brushless)
  5162  00AB  01A3               	clrf	0+(?_brushless)+01h
  5163  00AC  0AA3               	incf	0+(?_brushless)+01h,f
  5164  00AD  3090               	movlw	low(0190h)
  5165  00AE  00A4               	movwf	0+(?_brushless)+02h
  5166  00AF  3001               	movlw	high(0190h)
  5167  00B0  00A5               	movwf	(0+(?_brushless)+02h)+1
  5168  00B1  3001               	movlw	(01h)
  5169  00B2  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5170                           	line	784
  5171                           	
  5172  00B7                     l3192:	
  5173                           ;MC40SE Line Following UART.c: 784: lcd_clear_msg("right1  ");
  5174  00B7  302C               	movlw	((STR_9-__stringbase))&0ffh
  5175  00B8  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  5176                           	line	785
  5177                           ;MC40SE Line Following UART.c: 785: }
  5178  00BD  29B2               	goto	l483
  5179                           	line	786
  5180                           	
  5181  00BE                     l462:	
  5182                           	
  5183  00BE                     l3194:	
  5184                           ;MC40SE Line Following UART.c: 786: else if((UARTRC==0x80) || (UARTRC==0xC0))
  5185  00BE  1283               	bcf	status, 5	;RP0=0, select bank0
  5186  00BF  1303               	bcf	status, 6	;RP1=0, select bank0
  5187  00C0  082A               	movf	(LF@UARTRC),w
  5188  00C1  3A80               	xorlw	080h
  5189  00C2  1903               	skipnz
  5190  00C3  28C5               	goto	u2611
  5191  00C4  28C6               	goto	u2610
  5192  00C5                     u2611:
  5193  00C5  28CD               	goto	l3198
  5194  00C6                     u2610:
  5195                           	
  5196  00C6                     l3196:	
  5197  00C6  082A               	movf	(LF@UARTRC),w
  5198  00C7  3AC0               	xorlw	0C0h
  5199  00C8  1D03               	skipz
  5200  00C9  28CB               	goto	u2621
  5201  00CA  28CC               	goto	u2620
  5202  00CB                     u2621:
  5203  00CB  28EF               	goto	l3202
  5204  00CC                     u2620:
  5205  00CC  28CD               	goto	l3198
  5206                           	
  5207  00CD                     l468:	
  5208                           	line	788
  5209                           	
  5210  00CD                     l3198:	
  5211                           ;MC40SE Line Following UART.c: 787: {
  5212                           ;MC40SE Line Following UART.c: 788: brushless(2, 0, 0, 600);
  5213  00CD  01A2               	clrf	(?_brushless)
  5214  00CE  01A3               	clrf	0+(?_brushless)+01h
  5215  00CF  3058               	movlw	low(0258h)
  5216  00D0  00A4               	movwf	0+(?_brushless)+02h
  5217  00D1  3002               	movlw	high(0258h)
  5218  00D2  00A5               	movwf	(0+(?_brushless)+02h)+1
  5219  00D3  3002               	movlw	(02h)
  5220  00D4  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5221                           	line	789
  5222                           ;MC40SE Line Following UART.c: 789: brushless(1, 0, 1, 200);
  5223  00D9  1283               	bcf	status, 5	;RP0=0, select bank0
  5224  00DA  1303               	bcf	status, 6	;RP1=0, select bank0
  5225  00DB  01A2               	clrf	(?_brushless)
  5226  00DC  01A3               	clrf	0+(?_brushless)+01h
  5227  00DD  0AA3               	incf	0+(?_brushless)+01h,f
  5228  00DE  30C8               	movlw	low(0C8h)
  5229  00DF  00A4               	movwf	0+(?_brushless)+02h
  5230  00E0  3000               	movlw	high(0C8h)
  5231  00E1  00A5               	movwf	(0+(?_brushless)+02h)+1
  5232  00E2  3001               	movlw	(01h)
  5233  00E3  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5234                           	line	790
  5235                           	
  5236  00E8                     l3200:	
  5237                           ;MC40SE Line Following UART.c: 790: lcd_clear_msg("right2  ");
  5238  00E8  3035               	movlw	((STR_10-__stringbase))&0ffh
  5239  00E9  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  5240                           	line	791
  5241                           ;MC40SE Line Following UART.c: 791: }
  5242  00EE  29B2               	goto	l483
  5243                           	line	794
  5244                           	
  5245  00EF                     l466:	
  5246                           	
  5247  00EF                     l3202:	
  5248                           ;MC40SE Line Following UART.c: 794: else if((UARTRC==0x04) || (UARTRC==0x0C))
  5249  00EF  1283               	bcf	status, 5	;RP0=0, select bank0
  5250  00F0  1303               	bcf	status, 6	;RP1=0, select bank0
  5251  00F1  082A               	movf	(LF@UARTRC),w
  5252  00F2  3A04               	xorlw	04h
  5253  00F3  1903               	skipnz
  5254  00F4  28F6               	goto	u2631
  5255  00F5  28F7               	goto	u2630
  5256  00F6                     u2631:
  5257  00F6  28FE               	goto	l3206
  5258  00F7                     u2630:
  5259                           	
  5260  00F7                     l3204:	
  5261  00F7  082A               	movf	(LF@UARTRC),w
  5262  00F8  3A0C               	xorlw	0Ch
  5263  00F9  1D03               	skipz
  5264  00FA  28FC               	goto	u2641
  5265  00FB  28FD               	goto	u2640
  5266  00FC                     u2641:
  5267  00FC  2920               	goto	l3210
  5268  00FD                     u2640:
  5269  00FD  28FE               	goto	l3206
  5270                           	
  5271  00FE                     l472:	
  5272                           	line	796
  5273                           	
  5274  00FE                     l3206:	
  5275                           ;MC40SE Line Following UART.c: 795: {
  5276                           ;MC40SE Line Following UART.c: 796: brushless(2, 0, 0, 500);
  5277  00FE  01A2               	clrf	(?_brushless)
  5278  00FF  01A3               	clrf	0+(?_brushless)+01h
  5279  0100  30F4               	movlw	low(01F4h)
  5280  0101  00A4               	movwf	0+(?_brushless)+02h
  5281  0102  3001               	movlw	high(01F4h)
  5282  0103  00A5               	movwf	(0+(?_brushless)+02h)+1
  5283  0104  3002               	movlw	(02h)
  5284  0105  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5285                           	line	797
  5286                           ;MC40SE Line Following UART.c: 797: brushless(1, 0, 1, 600);
  5287  010A  1283               	bcf	status, 5	;RP0=0, select bank0
  5288  010B  1303               	bcf	status, 6	;RP1=0, select bank0
  5289  010C  01A2               	clrf	(?_brushless)
  5290  010D  01A3               	clrf	0+(?_brushless)+01h
  5291  010E  0AA3               	incf	0+(?_brushless)+01h,f
  5292  010F  3058               	movlw	low(0258h)
  5293  0110  00A4               	movwf	0+(?_brushless)+02h
  5294  0111  3002               	movlw	high(0258h)
  5295  0112  00A5               	movwf	(0+(?_brushless)+02h)+1
  5296  0113  3001               	movlw	(01h)
  5297  0114  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5298                           	line	798
  5299                           	
  5300  0119                     l3208:	
  5301                           ;MC40SE Line Following UART.c: 798: lcd_clear_msg("left  ");
  5302  0119  305F               	movlw	((STR_11-__stringbase))&0ffh
  5303  011A  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  5304                           	line	799
  5305                           ;MC40SE Line Following UART.c: 799: }
  5306  011F  29B2               	goto	l483
  5307                           	line	800
  5308                           	
  5309  0120                     l470:	
  5310                           	
  5311  0120                     l3210:	
  5312                           ;MC40SE Line Following UART.c: 800: else if((UARTRC==0x06) || (UARTRC==0x02))
  5313  0120  1283               	bcf	status, 5	;RP0=0, select bank0
  5314  0121  1303               	bcf	status, 6	;RP1=0, select bank0
  5315  0122  082A               	movf	(LF@UARTRC),w
  5316  0123  3A06               	xorlw	06h
  5317  0124  1903               	skipnz
  5318  0125  2927               	goto	u2651
  5319  0126  2928               	goto	u2650
  5320  0127                     u2651:
  5321  0127  292F               	goto	l3214
  5322  0128                     u2650:
  5323                           	
  5324  0128                     l3212:	
  5325  0128  082A               	movf	(LF@UARTRC),w
  5326  0129  3A02               	xorlw	02h
  5327  012A  1D03               	skipz
  5328  012B  292D               	goto	u2661
  5329  012C  292E               	goto	u2660
  5330  012D                     u2661:
  5331  012D  2951               	goto	l3218
  5332  012E                     u2660:
  5333  012E  292F               	goto	l3214
  5334                           	
  5335  012F                     l476:	
  5336                           	line	802
  5337                           	
  5338  012F                     l3214:	
  5339                           ;MC40SE Line Following UART.c: 801: {
  5340                           ;MC40SE Line Following UART.c: 802: brushless(2, 0, 0, 400);
  5341  012F  01A2               	clrf	(?_brushless)
  5342  0130  01A3               	clrf	0+(?_brushless)+01h
  5343  0131  3090               	movlw	low(0190h)
  5344  0132  00A4               	movwf	0+(?_brushless)+02h
  5345  0133  3001               	movlw	high(0190h)
  5346  0134  00A5               	movwf	(0+(?_brushless)+02h)+1
  5347  0135  3002               	movlw	(02h)
  5348  0136  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5349                           	line	803
  5350                           ;MC40SE Line Following UART.c: 803: brushless(1, 0, 1, 600);
  5351  013B  1283               	bcf	status, 5	;RP0=0, select bank0
  5352  013C  1303               	bcf	status, 6	;RP1=0, select bank0
  5353  013D  01A2               	clrf	(?_brushless)
  5354  013E  01A3               	clrf	0+(?_brushless)+01h
  5355  013F  0AA3               	incf	0+(?_brushless)+01h,f
  5356  0140  3058               	movlw	low(0258h)
  5357  0141  00A4               	movwf	0+(?_brushless)+02h
  5358  0142  3002               	movlw	high(0258h)
  5359  0143  00A5               	movwf	(0+(?_brushless)+02h)+1
  5360  0144  3001               	movlw	(01h)
  5361  0145  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5362                           	line	804
  5363                           	
  5364  014A                     l3216:	
  5365                           ;MC40SE Line Following UART.c: 804: lcd_clear_msg("left1  ");
  5366  014A  3047               	movlw	((STR_12-__stringbase))&0ffh
  5367  014B  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  5368                           	line	805
  5369                           ;MC40SE Line Following UART.c: 805: }
  5370  0150  29B2               	goto	l483
  5371                           	line	806
  5372                           	
  5373  0151                     l474:	
  5374                           	
  5375  0151                     l3218:	
  5376                           ;MC40SE Line Following UART.c: 806: else if((UARTRC==0x01) || (UARTRC==0x03))
  5377  0151  1283               	bcf	status, 5	;RP0=0, select bank0
  5378  0152  1303               	bcf	status, 6	;RP1=0, select bank0
  5379  0153  082A               	movf	(LF@UARTRC),w
  5380  0154  3A01               	xorlw	01h
  5381  0155  1903               	skipnz
  5382  0156  2958               	goto	u2671
  5383  0157  2959               	goto	u2670
  5384  0158                     u2671:
  5385  0158  2960               	goto	l3222
  5386  0159                     u2670:
  5387                           	
  5388  0159                     l3220:	
  5389  0159  082A               	movf	(LF@UARTRC),w
  5390  015A  3A03               	xorlw	03h
  5391  015B  1D03               	skipz
  5392  015C  295E               	goto	u2681
  5393  015D  295F               	goto	u2680
  5394  015E                     u2681:
  5395  015E  2982               	goto	l3226
  5396  015F                     u2680:
  5397  015F  2960               	goto	l3222
  5398                           	
  5399  0160                     l480:	
  5400                           	line	808
  5401                           	
  5402  0160                     l3222:	
  5403                           ;MC40SE Line Following UART.c: 807: {
  5404                           ;MC40SE Line Following UART.c: 808: brushless(2, 0, 0, 200);
  5405  0160  01A2               	clrf	(?_brushless)
  5406  0161  01A3               	clrf	0+(?_brushless)+01h
  5407  0162  30C8               	movlw	low(0C8h)
  5408  0163  00A4               	movwf	0+(?_brushless)+02h
  5409  0164  3000               	movlw	high(0C8h)
  5410  0165  00A5               	movwf	(0+(?_brushless)+02h)+1
  5411  0166  3002               	movlw	(02h)
  5412  0167  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5413                           	line	809
  5414                           ;MC40SE Line Following UART.c: 809: brushless(1, 0, 1, 600);
  5415  016C  1283               	bcf	status, 5	;RP0=0, select bank0
  5416  016D  1303               	bcf	status, 6	;RP1=0, select bank0
  5417  016E  01A2               	clrf	(?_brushless)
  5418  016F  01A3               	clrf	0+(?_brushless)+01h
  5419  0170  0AA3               	incf	0+(?_brushless)+01h,f
  5420  0171  3058               	movlw	low(0258h)
  5421  0172  00A4               	movwf	0+(?_brushless)+02h
  5422  0173  3002               	movlw	high(0258h)
  5423  0174  00A5               	movwf	(0+(?_brushless)+02h)+1
  5424  0175  3001               	movlw	(01h)
  5425  0176  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5426                           	line	810
  5427                           	
  5428  017B                     l3224:	
  5429                           ;MC40SE Line Following UART.c: 810: lcd_clear_msg("left2  ");
  5430  017B  304F               	movlw	((STR_13-__stringbase))&0ffh
  5431  017C  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  5432                           	line	811
  5433                           ;MC40SE Line Following UART.c: 811: }
  5434  0181  29B2               	goto	l483
  5435                           	line	812
  5436                           	
  5437  0182                     l478:	
  5438                           	
  5439  0182                     l3226:	
  5440                           ;MC40SE Line Following UART.c: 812: else if(UARTRC==0x00)
  5441  0182  1283               	bcf	status, 5	;RP0=0, select bank0
  5442  0183  1303               	bcf	status, 6	;RP1=0, select bank0
  5443  0184  08AA               	movf	(LF@UARTRC),f
  5444  0185  1D03               	skipz
  5445  0186  2988               	goto	u2691
  5446  0187  2989               	goto	u2690
  5447  0188                     u2691:
  5448  0188  29B2               	goto	l483
  5449  0189                     u2690:
  5450                           	line	814
  5451                           	
  5452  0189                     l3228:	
  5453                           ;MC40SE Line Following UART.c: 813: {
  5454                           ;MC40SE Line Following UART.c: 814: brushless(2, 0, 0, 0);
  5455  0189  01A2               	clrf	(?_brushless)
  5456  018A  01A3               	clrf	0+(?_brushless)+01h
  5457  018B  3000               	movlw	low(0)
  5458  018C  00A4               	movwf	0+(?_brushless)+02h
  5459  018D  3000               	movlw	high(0)
  5460  018E  00A5               	movwf	(0+(?_brushless)+02h)+1
  5461  018F  3002               	movlw	(02h)
  5462  0190  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5463                           	line	815
  5464                           ;MC40SE Line Following UART.c: 815: brushless(1, 0, 1, 0);
  5465  0195  1283               	bcf	status, 5	;RP0=0, select bank0
  5466  0196  1303               	bcf	status, 6	;RP1=0, select bank0
  5467  0197  01A2               	clrf	(?_brushless)
  5468  0198  01A3               	clrf	0+(?_brushless)+01h
  5469  0199  0AA3               	incf	0+(?_brushless)+01h,f
  5470  019A  3000               	movlw	low(0)
  5471  019B  00A4               	movwf	0+(?_brushless)+02h
  5472  019C  3000               	movlw	high(0)
  5473  019D  00A5               	movwf	(0+(?_brushless)+02h)+1
  5474  019E  3001               	movlw	(01h)
  5475  019F  120A  118A  231B   	fcall	_brushless
              120A  118A         
  5476                           	line	816
  5477                           	
  5478  01A4                     l3230:	
  5479                           ;MC40SE Line Following UART.c: 816: lcd_clear_msg("right2  ");
  5480  01A4  3035               	movlw	((STR_14-__stringbase))&0ffh
  5481  01A5  120A  118A  27EF   	fcall	_lcd_clear_msg
              120A  118A         
  5482  01AA  29B2               	goto	l483
  5483                           	line	817
  5484                           	
  5485  01AB                     l482:	
  5486  01AB  29B2               	goto	l483
  5487                           	line	818
  5488                           	
  5489  01AC                     l481:	
  5490  01AC  29B2               	goto	l483
  5491                           	
  5492  01AD                     l477:	
  5493  01AD  29B2               	goto	l483
  5494                           	
  5495  01AE                     l473:	
  5496  01AE  29B2               	goto	l483
  5497                           	
  5498  01AF                     l469:	
  5499  01AF  29B2               	goto	l483
  5500                           	
  5501  01B0                     l465:	
  5502  01B0  29B2               	goto	l483
  5503                           	
  5504  01B1                     l461:	
  5505  01B1  29B2               	goto	l483
  5506                           	
  5507  01B2                     l457:	
  5508                           	
  5509  01B2                     l483:	
  5510  01B2  0008               	return
  5511                           	opt stack 0
  5512                           GLOBAL	__end_of_LF
  5513  01B3                     	__end_of_LF:
  5514                           	signat	_LF,88
  5515                           	global	_lcd_clear_msg
  5516                           
  5517 ;; *************** function _lcd_clear_msg *****************
  5518 ;; Defined at:
  5519 ;;		line 328 in file "../lcd.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  csz_string      1    wreg     PTR const unsigned char 
  5522 ;;		 -> STR_14(9), STR_13(8), STR_12(8), STR_11(7), 
  5523 ;;		 -> STR_10(9), STR_9(9), STR_8(8), STR_7(9), 
  5524 ;;		 -> STR_6(5), STR_5(13), STR_4(14), STR_3(6), 
  5525 ;;		 -> STR_2(14), STR_1(15), 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  csz_string      1    8[BANK0 ] PTR const unsigned char 
  5528 ;;		 -> STR_14(9), STR_13(8), STR_12(8), STR_11(7), 
  5529 ;;		 -> STR_10(9), STR_9(9), STR_8(8), STR_7(9), 
  5530 ;;		 -> STR_6(5), STR_5(13), STR_4(14), STR_3(6), 
  5531 ;;		 -> STR_2(14), STR_1(15), 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;		None               void
  5534 ;; Registers used:
  5535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5541 ;;      Params:         0       0       0       0       0
  5542 ;;      Locals:         0       1       0       0       0
  5543 ;;      Temps:          0       0       0       0       0
  5544 ;;      Totals:         0       1       0       0       0
  5545 ;;Total ram usage:        1 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    6
  5548 ;; This function calls:
  5549 ;;		_lcd_clr
  5550 ;;		_lcd_putstr
  5551 ;; This function is called by:
  5552 ;;		_main
  5553 ;;		_line_following
  5554 ;;		_LF
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           psect	text1295,local,class=CODE,delta=2,merge=1
  5558                           global __ptext1295
  5559  07EF                     __ptext1295:	;psect for function _lcd_clear_msg
  5560                           psect	text1295
  5561                           	file	"../lcd.c"
  5562                           	line	328
  5563                           	global	__size_of_lcd_clear_msg
  5564  0011                     	__size_of_lcd_clear_msg	equ	__end_of_lcd_clear_msg-_lcd_clear_msg
  5565                           	
  5566  07EF                     _lcd_clear_msg:	
  5567 ;; hardware stack exceeded
  5568                           	opt	stack 0
  5569                           ; Regs used in _lcd_clear_msg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5570                           ;lcd_clear_msg@csz_string stored from wreg
  5571  07EF  1283               	bcf	status, 5	;RP0=0, select bank0
  5572  07F0  1303               	bcf	status, 6	;RP1=0, select bank0
  5573  07F1  00A8               	movwf	(lcd_clear_msg@csz_string)
  5574                           	line	329
  5575                           	
  5576  07F2                     l2760:	
  5577                           ;lcd.c: 329: lcd_clr();
  5578  07F2  120A  158A  2734   	fcall	_lcd_clr
              120A  118A         
  5579                           	line	330
  5580                           	
  5581  07F7                     l2762:	
  5582                           ;lcd.c: 330: lcd_putstr(csz_string);
  5583  07F7  1283               	bcf	status, 5	;RP0=0, select bank0
  5584  07F8  1303               	bcf	status, 6	;RP1=0, select bank0
  5585  07F9  0828               	movf	(lcd_clear_msg@csz_string),w
  5586  07FA  120A  118A  25E0   	fcall	_lcd_putstr
              120A  118A         
  5587                           	line	331
  5588                           	
  5589  07FF                     l132:	
  5590  07FF  0008               	return
  5591                           	opt stack 0
  5592                           GLOBAL	__end_of_lcd_clear_msg
  5593  0800                     	__end_of_lcd_clear_msg:
  5594                           	signat	_lcd_clear_msg,4216
  5595                           	global	_lcd_clr
  5596                           
  5597 ;; *************** function _lcd_clr *****************
  5598 ;; Defined at:
  5599 ;;		line 157 in file "../lcd.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;		None               void
  5606 ;; Registers used:
  5607 ;;		wreg, status,2, status,0, pclath, cstack
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5613 ;;      Params:         0       0       0       0       0
  5614 ;;      Locals:         0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0
  5616 ;;      Totals:         0       0       0       0       0
  5617 ;;Total ram usage:        0 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    4
  5620 ;; This function calls:
  5621 ;;		_send_lcd_data
  5622 ;; This function is called by:
  5623 ;;		_lcd_init
  5624 ;;		_lcd_clear_msg
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           psect	text1296,local,class=CODE,delta=2,merge=1
  5628                           global __ptext1296
  5629  0F34                     __ptext1296:	;psect for function _lcd_clr
  5630                           psect	text1296
  5631                           	file	"../lcd.c"
  5632                           	line	157
  5633                           	global	__size_of_lcd_clr
  5634  0009                     	__size_of_lcd_clr	equ	__end_of_lcd_clr-_lcd_clr
  5635                           	
  5636  0F34                     _lcd_clr:	
  5637 ;; hardware stack exceeded
  5638                           	opt	stack 0
  5639                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  5640                           	line	159
  5641                           	
  5642  0F34                     l2704:	
  5643                           ;lcd.c: 159: send_lcd_data(0, 0b00000001);
  5644  0F34  01F5               	clrf	(?_send_lcd_data)
  5645  0F35  0AF5               	incf	(?_send_lcd_data),f
  5646  0F36  3000               	movlw	(0)
  5647  0F37  120A  118A  226D   	fcall	_send_lcd_data
              120A  158A         
  5648                           	line	160
  5649                           	
  5650  0F3C                     l99:	
  5651  0F3C  0008               	return
  5652                           	opt stack 0
  5653                           GLOBAL	__end_of_lcd_clr
  5654  0F3D                     	__end_of_lcd_clr:
  5655                           	signat	_lcd_clr,88
  5656                           	global	_lcd_putstr
  5657                           
  5658 ;; *************** function _lcd_putstr *****************
  5659 ;; Defined at:
  5660 ;;		line 262 in file "../lcd.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  csz_string      1    wreg     PTR const unsigned char 
  5663 ;;		 -> STR_14(9), STR_13(8), STR_12(8), STR_11(7), 
  5664 ;;		 -> STR_10(9), STR_9(9), STR_8(8), STR_7(9), 
  5665 ;;		 -> STR_6(5), STR_5(13), STR_4(14), STR_3(6), 
  5666 ;;		 -> STR_2(14), STR_1(15), 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  csz_string      1    7[BANK0 ] PTR const unsigned char 
  5669 ;;		 -> STR_14(9), STR_13(8), STR_12(8), STR_11(7), 
  5670 ;;		 -> STR_10(9), STR_9(9), STR_8(8), STR_7(9), 
  5671 ;;		 -> STR_6(5), STR_5(13), STR_4(14), STR_3(6), 
  5672 ;;		 -> STR_2(14), STR_1(15), 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;		None               void
  5675 ;; Registers used:
  5676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5682 ;;      Params:         0       0       0       0       0
  5683 ;;      Locals:         0       1       0       0       0
  5684 ;;      Temps:          0       1       0       0       0
  5685 ;;      Totals:         0       2       0       0       0
  5686 ;;Total ram usage:        2 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    5
  5689 ;; This function calls:
  5690 ;;		_lcd_2ndline
  5691 ;;		_lcd_putchar
  5692 ;; This function is called by:
  5693 ;;		_lcd_clear_msg
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           psect	text1297,local,class=CODE,delta=2,merge=1
  5697                           global __ptext1297
  5698  05E0                     __ptext1297:	;psect for function _lcd_putstr
  5699                           psect	text1297
  5700                           	file	"../lcd.c"
  5701                           	line	262
  5702                           	global	__size_of_lcd_putstr
  5703  0047                     	__size_of_lcd_putstr	equ	__end_of_lcd_putstr-_lcd_putstr
  5704                           	
  5705  05E0                     _lcd_putstr:	
  5706 ;; hardware stack exceeded
  5707                           	opt	stack 0
  5708                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5709                           ;lcd_putstr@csz_string stored from wreg
  5710  05E0  1283               	bcf	status, 5	;RP0=0, select bank0
  5711  05E1  1303               	bcf	status, 6	;RP1=0, select bank0
  5712  05E2  00A7               	movwf	(lcd_putstr@csz_string)
  5713                           	line	264
  5714                           	
  5715  05E3                     l2714:	
  5716                           ;lcd.c: 264: while (*csz_string != '\0') {
  5717  05E3  2E19               	goto	l2726
  5718                           	
  5719  05E4                     l115:	
  5720                           	line	267
  5721                           	
  5722  05E4                     l2716:	
  5723                           ;lcd.c: 267: if (*csz_string == '\n' || *csz_string == '\r') {
  5724  05E4  0827               	movf	(lcd_putstr@csz_string),w
  5725  05E5  0084               	movwf	fsr0
  5726  05E6  120A  118A  242D   	fcall	stringdir
              120A  118A         
  5727  05EB  3A0A               	xorlw	0Ah
  5728  05EC  1903               	skipnz
  5729  05ED  2DEF               	goto	u1901
  5730  05EE  2DF0               	goto	u1900
  5731  05EF                     u1901:
  5732  05EF  2DFD               	goto	l2720
  5733  05F0                     u1900:
  5734                           	
  5735  05F0                     l2718:	
  5736  05F0  0827               	movf	(lcd_putstr@csz_string),w
  5737  05F1  0084               	movwf	fsr0
  5738  05F2  120A  118A  242D   	fcall	stringdir
              120A  118A         
  5739  05F7  3A0D               	xorlw	0Dh
  5740  05F8  1D03               	skipz
  5741  05F9  2DFB               	goto	u1911
  5742  05FA  2DFC               	goto	u1910
  5743  05FB                     u1911:
  5744  05FB  2E03               	goto	l2722
  5745  05FC                     u1910:
  5746  05FC  2DFD               	goto	l2720
  5747                           	
  5748  05FD                     l118:	
  5749                           	line	268
  5750                           	
  5751  05FD                     l2720:	
  5752                           ;lcd.c: 268: lcd_2ndline();
  5753  05FD  120A  158A  2755   	fcall	_lcd_2ndline
              120A  118A         
  5754                           	line	269
  5755                           ;lcd.c: 269: }
  5756  0602  2E12               	goto	l2724
  5757                           	line	272
  5758                           	
  5759  0603                     l116:	
  5760                           	line	273
  5761                           	
  5762  0603                     l2722:	
  5763                           ;lcd.c: 272: else {
  5764                           ;lcd.c: 273: lcd_putchar(*csz_string);
  5765  0603  1283               	bcf	status, 5	;RP0=0, select bank0
  5766  0604  1303               	bcf	status, 6	;RP1=0, select bank0
  5767  0605  0827               	movf	(lcd_putstr@csz_string),w
  5768  0606  0084               	movwf	fsr0
  5769  0607  120A  118A  242D   	fcall	stringdir
              120A  118A         
  5770  060C  120A  158A  2762   	fcall	_lcd_putchar
              120A  118A         
  5771  0611  2E12               	goto	l2724
  5772                           	line	274
  5773                           	
  5774  0612                     l119:	
  5775                           	line	277
  5776                           	
  5777  0612                     l2724:	
  5778                           ;lcd.c: 274: }
  5779                           ;lcd.c: 277: csz_string++;
  5780  0612  3001               	movlw	(01h)
  5781  0613  1283               	bcf	status, 5	;RP0=0, select bank0
  5782  0614  1303               	bcf	status, 6	;RP1=0, select bank0
  5783  0615  00A6               	movwf	(??_lcd_putstr+0)+0
  5784  0616  0826               	movf	(??_lcd_putstr+0)+0,w
  5785  0617  07A7               	addwf	(lcd_putstr@csz_string),f
  5786  0618  2E19               	goto	l2726
  5787                           	line	278
  5788                           	
  5789  0619                     l114:	
  5790                           	line	264
  5791                           	
  5792  0619                     l2726:	
  5793  0619  0827               	movf	(lcd_putstr@csz_string),w
  5794  061A  0084               	movwf	fsr0
  5795  061B  120A  118A  242D   	fcall	stringdir
              120A  118A         
  5796  0620  3800               	iorlw	0
  5797  0621  1D03               	skipz
  5798  0622  2E24               	goto	u1921
  5799  0623  2E25               	goto	u1920
  5800  0624                     u1921:
  5801  0624  2DE4               	goto	l2716
  5802  0625                     u1920:
  5803  0625  2E26               	goto	l121
  5804                           	
  5805  0626                     l120:	
  5806                           	line	279
  5807                           	
  5808  0626                     l121:	
  5809  0626  0008               	return
  5810                           	opt stack 0
  5811                           GLOBAL	__end_of_lcd_putstr
  5812  0627                     	__end_of_lcd_putstr:
  5813                           	signat	_lcd_putstr,4216
  5814                           	global	_lcd_2ndline
  5815                           
  5816 ;; *************** function _lcd_2ndline *****************
  5817 ;; Defined at:
  5818 ;;		line 199 in file "../lcd.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;		None
  5823 ;; Return value:  Size  Location     Type
  5824 ;;		None               void
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0, pclath, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5832 ;;      Params:         0       0       0       0       0
  5833 ;;      Locals:         0       0       0       0       0
  5834 ;;      Temps:          0       1       0       0       0
  5835 ;;      Totals:         0       1       0       0       0
  5836 ;;Total ram usage:        1 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:    4
  5839 ;; This function calls:
  5840 ;;		_send_lcd_data
  5841 ;; This function is called by:
  5842 ;;		_lcd_putstr
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           psect	text1298,local,class=CODE,delta=2,merge=1
  5846                           global __ptext1298
  5847  0F55                     __ptext1298:	;psect for function _lcd_2ndline
  5848                           psect	text1298
  5849                           	file	"../lcd.c"
  5850                           	line	199
  5851                           	global	__size_of_lcd_2ndline
  5852  000D                     	__size_of_lcd_2ndline	equ	__end_of_lcd_2ndline-_lcd_2ndline
  5853                           	
  5854  0F55                     _lcd_2ndline:	
  5855 ;; hardware stack exceeded
  5856                           	opt	stack 0
  5857                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  5858                           	line	201
  5859                           	
  5860  0F55                     l2708:	
  5861                           ;lcd.c: 201: send_lcd_data(0, 0b10000000 | 0x40);
  5862  0F55  30C0               	movlw	(0C0h)
  5863  0F56  1283               	bcf	status, 5	;RP0=0, select bank0
  5864  0F57  1303               	bcf	status, 6	;RP1=0, select bank0
  5865  0F58  00A4               	movwf	(??_lcd_2ndline+0)+0
  5866  0F59  0824               	movf	(??_lcd_2ndline+0)+0,w
  5867  0F5A  00F5               	movwf	(?_send_lcd_data)
  5868  0F5B  3000               	movlw	(0)
  5869  0F5C  120A  118A  226D   	fcall	_send_lcd_data
              120A  158A         
  5870                           	line	202
  5871                           	
  5872  0F61                     l105:	
  5873  0F61  0008               	return
  5874                           	opt stack 0
  5875                           GLOBAL	__end_of_lcd_2ndline
  5876  0F62                     	__end_of_lcd_2ndline:
  5877                           	signat	_lcd_2ndline,88
  5878                           	global	_lcd_putchar
  5879                           
  5880 ;; *************** function _lcd_putchar *****************
  5881 ;; Defined at:
  5882 ;;		line 241 in file "../lcd.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  c_data          1    wreg     unsigned char 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  c_data          1    5[BANK0 ] unsigned char 
  5887 ;; Return value:  Size  Location     Type
  5888 ;;		None               void
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0, pclath, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5896 ;;      Params:         0       0       0       0       0
  5897 ;;      Locals:         0       1       0       0       0
  5898 ;;      Temps:          0       1       0       0       0
  5899 ;;      Totals:         0       2       0       0       0
  5900 ;;Total ram usage:        2 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    4
  5903 ;; This function calls:
  5904 ;;		_send_lcd_data
  5905 ;; This function is called by:
  5906 ;;		_lcd_putstr
  5907 ;;		_lcd_bcd
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           psect	text1299,local,class=CODE,delta=2,merge=1
  5911                           global __ptext1299
  5912  0F62                     __ptext1299:	;psect for function _lcd_putchar
  5913                           psect	text1299
  5914                           	file	"../lcd.c"
  5915                           	line	241
  5916                           	global	__size_of_lcd_putchar
  5917  000E                     	__size_of_lcd_putchar	equ	__end_of_lcd_putchar-_lcd_putchar
  5918                           	
  5919  0F62                     _lcd_putchar:	
  5920 ;; hardware stack exceeded
  5921                           	opt	stack 0
  5922                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  5923                           ;lcd_putchar@c_data stored from wreg
  5924                           	line	243
  5925  0F62  1283               	bcf	status, 5	;RP0=0, select bank0
  5926  0F63  1303               	bcf	status, 6	;RP1=0, select bank0
  5927  0F64  00A5               	movwf	(lcd_putchar@c_data)
  5928                           	
  5929  0F65                     l2712:	
  5930                           ;lcd.c: 243: send_lcd_data(1, (unsigned char)c_data);
  5931  0F65  0825               	movf	(lcd_putchar@c_data),w
  5932  0F66  00A4               	movwf	(??_lcd_putchar+0)+0
  5933  0F67  0824               	movf	(??_lcd_putchar+0)+0,w
  5934  0F68  00F5               	movwf	(?_send_lcd_data)
  5935  0F69  3001               	movlw	(01h)
  5936  0F6A  120A  118A  226D   	fcall	_send_lcd_data
              120A  158A         
  5937                           	line	244
  5938                           	
  5939  0F6F                     l111:	
  5940  0F6F  0008               	return
  5941                           	opt stack 0
  5942                           GLOBAL	__end_of_lcd_putchar
  5943  0F70                     	__end_of_lcd_putchar:
  5944                           	signat	_lcd_putchar,4216
  5945                           	global	_send_lcd_data
  5946                           
  5947 ;; *************** function _send_lcd_data *****************
  5948 ;; Defined at:
  5949 ;;		line 348 in file "../lcd.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  b_rs            1    wreg     unsigned char 
  5952 ;;  uc_data         1    5[COMMON] unsigned char 
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  b_rs            1    3[BANK0 ] unsigned char 
  5955 ;;  uc_pre_portd    1    2[BANK0 ] unsigned char 
  5956 ;; Return value:  Size  Location     Type
  5957 ;;		None               void
  5958 ;; Registers used:
  5959 ;;		wreg, status,2, status,0, pclath, cstack
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5965 ;;      Params:         1       0       0       0       0
  5966 ;;      Locals:         0       2       0       0       0
  5967 ;;      Temps:          0       2       0       0       0
  5968 ;;      Totals:         1       4       0       0       0
  5969 ;;Total ram usage:        5 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:    3
  5972 ;; This function calls:
  5973 ;;		_set_lcd_rs
  5974 ;;		_set_lcd_data
  5975 ;;		_set_lcd_e
  5976 ;; This function is called by:
  5977 ;;		_lcd_init
  5978 ;;		_lcd_clr
  5979 ;;		_lcd_2ndline
  5980 ;;		_lcd_putchar
  5981 ;;		_lcd_home
  5982 ;;		_lcd_goto
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           psect	text1300,local,class=CODE,delta=2,merge=1
  5986                           global __ptext1300
  5987  026D                     __ptext1300:	;psect for function _send_lcd_data
  5988                           psect	text1300
  5989                           	file	"../lcd.c"
  5990                           	line	348
  5991                           	global	__size_of_send_lcd_data
  5992  00AE                     	__size_of_send_lcd_data	equ	__end_of_send_lcd_data-_send_lcd_data
  5993                           	
  5994  026D                     _send_lcd_data:	
  5995 ;; hardware stack exceeded
  5996                           	opt	stack 0
  5997                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  5998                           ;send_lcd_data@b_rs stored from wreg
  5999  026D  1283               	bcf	status, 5	;RP0=0, select bank0
  6000  026E  1303               	bcf	status, 6	;RP1=0, select bank0
  6001  026F  00A3               	movwf	(send_lcd_data@b_rs)
  6002                           	line	349
  6003                           	
  6004  0270                     l2678:	
  6005                           ;lcd.c: 349: unsigned char uc_pre_portd = 0;
  6006  0270  01A2               	clrf	(send_lcd_data@uc_pre_portd)
  6007                           	line	350
  6008                           	
  6009  0271                     l2680:	
  6010                           ;lcd.c: 350: uc_pre_portd = PORTD;
  6011  0271  0808               	movf	(8),w	;volatile
  6012  0272  00A0               	movwf	(??_send_lcd_data+0)+0
  6013  0273  0820               	movf	(??_send_lcd_data+0)+0,w
  6014  0274  00A2               	movwf	(send_lcd_data@uc_pre_portd)
  6015                           	line	354
  6016                           ;lcd.c: 354: if (b_4_bits_data_bus == 1) {
  6017  0275  0879               	movf	(_b_4_bits_data_bus),w
  6018  0276  3A01               	xorlw	01h
  6019  0277  1D03               	skipz
  6020  0278  2A7A               	goto	u1881
  6021  0279  2A7B               	goto	u1880
  6022  027A                     u1881:
  6023  027A  2AE6               	goto	l2698
  6024  027B                     u1880:
  6025                           	line	355
  6026                           	
  6027  027B                     l2682:	
  6028                           ;lcd.c: 355: set_lcd_rs(b_rs);
  6029  027B  0823               	movf	(send_lcd_data@b_rs),w
  6030  027C  120A  158A  273D   	fcall	_set_lcd_rs
              120A  118A         
  6031                           	line	356
  6032                           ;lcd.c: 356: set_lcd_data(uc_data & 0xF0);
  6033  0281  0875               	movf	(send_lcd_data@uc_data),w
  6034  0282  39F0               	andlw	0F0h
  6035  0283  120A  158A  2724   	fcall	_set_lcd_data
              120A  118A         
  6036                           	line	359
  6037                           ;lcd.c: 359: set_lcd_e(0);
  6038  0288  3000               	movlw	(0)
  6039  0289  120A  158A  2749   	fcall	_set_lcd_e
              120A  118A         
  6040                           	line	360
  6041                           	
  6042  028E                     l2684:	
  6043                           ;lcd.c: 360: _delay((unsigned long)((2)*(8000000/4000.0)));
  6044                           	opt asmopt_off
  6045  028E  3006               movlw	6
  6046  028F  1283               	bcf	status, 5	;RP0=0, select bank0
  6047  0290  1303               	bcf	status, 6	;RP1=0, select bank0
  6048  0291  00A1               movwf	((??_send_lcd_data+0)+0+1),f
  6049  0292  3030               	movlw	48
  6050  0293  00A0               movwf	((??_send_lcd_data+0)+0),f
  6051  0294                     u2727:
  6052  0294  0BA0               	decfsz	((??_send_lcd_data+0)+0),f
  6053  0295  2A94               	goto	u2727
  6054  0296  0BA1               	decfsz	((??_send_lcd_data+0)+0+1),f
  6055  0297  2A94               	goto	u2727
  6056  0298  0000               	nop
  6057                           opt asmopt_on
  6058                           
  6059                           	line	361
  6060                           	
  6061  0299                     l2686:	
  6062                           ;lcd.c: 361: set_lcd_e(1);
  6063  0299  3001               	movlw	(01h)
  6064  029A  120A  158A  2749   	fcall	_set_lcd_e
              120A  118A         
  6065                           	line	362
  6066                           ;lcd.c: 362: _delay((unsigned long)((1)*(8000000/4000.0)));
  6067                           	opt asmopt_off
  6068  029F  3003               movlw	3
  6069  02A0  1283               	bcf	status, 5	;RP0=0, select bank0
  6070  02A1  1303               	bcf	status, 6	;RP1=0, select bank0
  6071  02A2  00A1               movwf	((??_send_lcd_data+0)+0+1),f
  6072  02A3  3097               	movlw	151
  6073  02A4  00A0               movwf	((??_send_lcd_data+0)+0),f
  6074  02A5                     u2737:
  6075  02A5  0BA0               	decfsz	((??_send_lcd_data+0)+0),f
  6076  02A6  2AA5               	goto	u2737
  6077  02A7  0BA1               	decfsz	((??_send_lcd_data+0)+0+1),f
  6078  02A8  2AA5               	goto	u2737
  6079  02A9  2AAA               	nop2
  6080                           opt asmopt_on
  6081                           
  6082                           	line	365
  6083                           	
  6084  02AA                     l2688:	
  6085                           ;lcd.c: 365: set_lcd_rs(b_rs);
  6086  02AA  1283               	bcf	status, 5	;RP0=0, select bank0
  6087  02AB  1303               	bcf	status, 6	;RP1=0, select bank0
  6088  02AC  0823               	movf	(send_lcd_data@b_rs),w
  6089  02AD  120A  158A  273D   	fcall	_set_lcd_rs
              120A  118A         
  6090                           	line	366
  6091                           	
  6092  02B2                     l2690:	
  6093                           ;lcd.c: 366: set_lcd_data(uc_data << 4);
  6094  02B2  0875               	movf	(send_lcd_data@uc_data),w
  6095  02B3  1283               	bcf	status, 5	;RP0=0, select bank0
  6096  02B4  1303               	bcf	status, 6	;RP1=0, select bank0
  6097  02B5  00A0               	movwf	(??_send_lcd_data+0)+0
  6098  02B6  3003               	movlw	(04h)-1
  6099  02B7                     u1895:
  6100  02B7  1003               	clrc
  6101  02B8  0DA0               	rlf	(??_send_lcd_data+0)+0,f
  6102  02B9  3EFF               	addlw	-1
  6103  02BA  1D03               	skipz
  6104  02BB  2AB7               	goto	u1895
  6105  02BC  1003               	clrc
  6106  02BD  0D20               	rlf	(??_send_lcd_data+0)+0,w
  6107  02BE  120A  158A  2724   	fcall	_set_lcd_data
              120A  118A         
  6108                           	line	369
  6109                           	
  6110  02C3                     l2692:	
  6111                           ;lcd.c: 369: set_lcd_e(0);
  6112  02C3  3000               	movlw	(0)
  6113  02C4  120A  158A  2749   	fcall	_set_lcd_e
              120A  118A         
  6114                           	line	370
  6115                           	
  6116  02C9                     l2694:	
  6117                           ;lcd.c: 370: _delay((unsigned long)((2)*(8000000/4000.0)));
  6118                           	opt asmopt_off
  6119  02C9  3006               movlw	6
  6120  02CA  1283               	bcf	status, 5	;RP0=0, select bank0
  6121  02CB  1303               	bcf	status, 6	;RP1=0, select bank0
  6122  02CC  00A1               movwf	((??_send_lcd_data+0)+0+1),f
  6123  02CD  3030               	movlw	48
  6124  02CE  00A0               movwf	((??_send_lcd_data+0)+0),f
  6125  02CF                     u2747:
  6126  02CF  0BA0               	decfsz	((??_send_lcd_data+0)+0),f
  6127  02D0  2ACF               	goto	u2747
  6128  02D1  0BA1               	decfsz	((??_send_lcd_data+0)+0+1),f
  6129  02D2  2ACF               	goto	u2747
  6130  02D3  0000               	nop
  6131                           opt asmopt_on
  6132                           
  6133                           	line	371
  6134                           ;lcd.c: 371: set_lcd_e(1);
  6135  02D4  3001               	movlw	(01h)
  6136  02D5  120A  158A  2749   	fcall	_set_lcd_e
              120A  118A         
  6137                           	line	372
  6138                           	
  6139  02DA                     l2696:	
  6140                           ;lcd.c: 372: _delay((unsigned long)((1)*(8000000/4000.0)));
  6141                           	opt asmopt_off
  6142  02DA  3003               movlw	3
  6143  02DB  1283               	bcf	status, 5	;RP0=0, select bank0
  6144  02DC  1303               	bcf	status, 6	;RP1=0, select bank0
  6145  02DD  00A1               movwf	((??_send_lcd_data+0)+0+1),f
  6146  02DE  3097               	movlw	151
  6147  02DF  00A0               movwf	((??_send_lcd_data+0)+0),f
  6148  02E0                     u2757:
  6149  02E0  0BA0               	decfsz	((??_send_lcd_data+0)+0),f
  6150  02E1  2AE0               	goto	u2757
  6151  02E2  0BA1               	decfsz	((??_send_lcd_data+0)+0+1),f
  6152  02E3  2AE0               	goto	u2757
  6153  02E4  2AE5               	nop2
  6154                           opt asmopt_on
  6155                           
  6156                           	line	373
  6157                           ;lcd.c: 373: }
  6158  02E5  2B16               	goto	l136
  6159                           	line	374
  6160                           	
  6161  02E6                     l135:	
  6162                           	line	377
  6163                           	
  6164  02E6                     l2698:	
  6165                           ;lcd.c: 374: else {
  6166                           ;lcd.c: 377: set_lcd_rs(b_rs);
  6167  02E6  1283               	bcf	status, 5	;RP0=0, select bank0
  6168  02E7  1303               	bcf	status, 6	;RP1=0, select bank0
  6169  02E8  0823               	movf	(send_lcd_data@b_rs),w
  6170  02E9  120A  158A  273D   	fcall	_set_lcd_rs
              120A  118A         
  6171                           	line	378
  6172                           ;lcd.c: 378: set_lcd_data(uc_data);
  6173  02EE  0875               	movf	(send_lcd_data@uc_data),w
  6174  02EF  120A  158A  2724   	fcall	_set_lcd_data
              120A  118A         
  6175                           	line	381
  6176                           ;lcd.c: 381: set_lcd_e(0);
  6177  02F4  3000               	movlw	(0)
  6178  02F5  120A  158A  2749   	fcall	_set_lcd_e
              120A  118A         
  6179                           	line	382
  6180                           	
  6181  02FA                     l2700:	
  6182                           ;lcd.c: 382: _delay((unsigned long)((2)*(8000000/4000.0)));
  6183                           	opt asmopt_off
  6184  02FA  3006               movlw	6
  6185  02FB  1283               	bcf	status, 5	;RP0=0, select bank0
  6186  02FC  1303               	bcf	status, 6	;RP1=0, select bank0
  6187  02FD  00A1               movwf	((??_send_lcd_data+0)+0+1),f
  6188  02FE  3030               	movlw	48
  6189  02FF  00A0               movwf	((??_send_lcd_data+0)+0),f
  6190  0300                     u2767:
  6191  0300  0BA0               	decfsz	((??_send_lcd_data+0)+0),f
  6192  0301  2B00               	goto	u2767
  6193  0302  0BA1               	decfsz	((??_send_lcd_data+0)+0+1),f
  6194  0303  2B00               	goto	u2767
  6195  0304  0000               	nop
  6196                           opt asmopt_on
  6197                           
  6198                           	line	383
  6199                           	
  6200  0305                     l2702:	
  6201                           ;lcd.c: 383: set_lcd_e(1);
  6202  0305  3001               	movlw	(01h)
  6203  0306  120A  158A  2749   	fcall	_set_lcd_e
              120A  118A         
  6204                           	line	384
  6205                           ;lcd.c: 384: _delay((unsigned long)((1)*(8000000/4000.0)));
  6206                           	opt asmopt_off
  6207  030B  3003               movlw	3
  6208  030C  1283               	bcf	status, 5	;RP0=0, select bank0
  6209  030D  1303               	bcf	status, 6	;RP1=0, select bank0
  6210  030E  00A1               movwf	((??_send_lcd_data+0)+0+1),f
  6211  030F  3097               	movlw	151
  6212  0310  00A0               movwf	((??_send_lcd_data+0)+0),f
  6213  0311                     u2777:
  6214  0311  0BA0               	decfsz	((??_send_lcd_data+0)+0),f
  6215  0312  2B11               	goto	u2777
  6216  0313  0BA1               	decfsz	((??_send_lcd_data+0)+0+1),f
  6217  0314  2B11               	goto	u2777
  6218  0315  2B16               	nop2
  6219                           opt asmopt_on
  6220                           
  6221                           	line	385
  6222                           	
  6223  0316                     l136:	
  6224                           	line	386
  6225                           ;lcd.c: 385: }
  6226                           ;lcd.c: 386: PORTD = uc_pre_portd;
  6227  0316  1283               	bcf	status, 5	;RP0=0, select bank0
  6228  0317  1303               	bcf	status, 6	;RP1=0, select bank0
  6229  0318  0822               	movf	(send_lcd_data@uc_pre_portd),w
  6230  0319  0088               	movwf	(8)	;volatile
  6231                           	line	387
  6232                           	
  6233  031A                     l137:	
  6234  031A  0008               	return
  6235                           	opt stack 0
  6236                           GLOBAL	__end_of_send_lcd_data
  6237  031B                     	__end_of_send_lcd_data:
  6238                           	signat	_send_lcd_data,8312
  6239                           	global	_set_lcd_e
  6240                           
  6241 ;; *************** function _set_lcd_e *****************
  6242 ;; Defined at:
  6243 ;;		line 405 in file "../lcd.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  b_output        1    wreg     unsigned char 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  b_output        1    4[COMMON] unsigned char 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;		None               void
  6250 ;; Registers used:
  6251 ;;		wreg
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6257 ;;      Params:         0       0       0       0       0
  6258 ;;      Locals:         1       0       0       0       0
  6259 ;;      Temps:          0       0       0       0       0
  6260 ;;      Totals:         1       0       0       0       0
  6261 ;;Total ram usage:        1 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    2
  6264 ;; This function calls:
  6265 ;;		Nothing
  6266 ;; This function is called by:
  6267 ;;		_lcd_init
  6268 ;;		_send_lcd_data
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           psect	text1301,local,class=CODE,delta=2,merge=1
  6272                           global __ptext1301
  6273  0F49                     __ptext1301:	;psect for function _set_lcd_e
  6274                           psect	text1301
  6275                           	file	"../lcd.c"
  6276                           	line	405
  6277                           	global	__size_of_set_lcd_e
  6278  000C                     	__size_of_set_lcd_e	equ	__end_of_set_lcd_e-_set_lcd_e
  6279                           	
  6280  0F49                     _set_lcd_e:	
  6281 ;; hardware stack exceeded
  6282                           	opt	stack 0
  6283                           ; Regs used in _set_lcd_e: [wreg]
  6284                           ;set_lcd_e@b_output stored from wreg
  6285  0F49  00F4               	movwf	(set_lcd_e@b_output)
  6286                           	line	406
  6287                           	
  6288  0F4A                     l2676:	
  6289                           ;lcd.c: 406: RE2 = b_output;
  6290  0F4A  1874               	btfsc	(set_lcd_e@b_output),0
  6291  0F4B  2F4D               	goto	u1861
  6292  0F4C  2F51               	goto	u1860
  6293                           	
  6294  0F4D                     u1861:
  6295  0F4D  1283               	bcf	status, 5	;RP0=0, select bank0
  6296  0F4E  1303               	bcf	status, 6	;RP1=0, select bank0
  6297  0F4F  1509               	bsf	(74/8),(74)&7	;volatile
  6298  0F50  2F54               	goto	u1874
  6299  0F51                     u1860:
  6300  0F51  1283               	bcf	status, 5	;RP0=0, select bank0
  6301  0F52  1303               	bcf	status, 6	;RP1=0, select bank0
  6302  0F53  1109               	bcf	(74/8),(74)&7	;volatile
  6303  0F54                     u1874:
  6304                           	line	407
  6305                           	
  6306  0F54                     l140:	
  6307  0F54  0008               	return
  6308                           	opt stack 0
  6309                           GLOBAL	__end_of_set_lcd_e
  6310  0F55                     	__end_of_set_lcd_e:
  6311                           	signat	_set_lcd_e,4216
  6312                           	global	_set_lcd_rs
  6313                           
  6314 ;; *************** function _set_lcd_rs *****************
  6315 ;; Defined at:
  6316 ;;		line 425 in file "../lcd.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  b_output        1    wreg     unsigned char 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  b_output        1    4[COMMON] unsigned char 
  6321 ;; Return value:  Size  Location     Type
  6322 ;;		None               void
  6323 ;; Registers used:
  6324 ;;		wreg
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6330 ;;      Params:         0       0       0       0       0
  6331 ;;      Locals:         1       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0
  6333 ;;      Totals:         1       0       0       0       0
  6334 ;;Total ram usage:        1 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    2
  6337 ;; This function calls:
  6338 ;;		Nothing
  6339 ;; This function is called by:
  6340 ;;		_send_lcd_data
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           psect	text1302,local,class=CODE,delta=2,merge=1
  6344                           global __ptext1302
  6345  0F3D                     __ptext1302:	;psect for function _set_lcd_rs
  6346                           psect	text1302
  6347                           	file	"../lcd.c"
  6348                           	line	425
  6349                           	global	__size_of_set_lcd_rs
  6350  000C                     	__size_of_set_lcd_rs	equ	__end_of_set_lcd_rs-_set_lcd_rs
  6351                           	
  6352  0F3D                     _set_lcd_rs:	
  6353 ;; hardware stack exceeded
  6354                           	opt	stack 0
  6355                           ; Regs used in _set_lcd_rs: [wreg]
  6356                           ;set_lcd_rs@b_output stored from wreg
  6357  0F3D  00F4               	movwf	(set_lcd_rs@b_output)
  6358                           	line	426
  6359                           	
  6360  0F3E                     l2764:	
  6361                           ;lcd.c: 426: RD0 = b_output;
  6362  0F3E  1874               	btfsc	(set_lcd_rs@b_output),0
  6363  0F3F  2F41               	goto	u1971
  6364  0F40  2F45               	goto	u1970
  6365                           	
  6366  0F41                     u1971:
  6367  0F41  1283               	bcf	status, 5	;RP0=0, select bank0
  6368  0F42  1303               	bcf	status, 6	;RP1=0, select bank0
  6369  0F43  1408               	bsf	(64/8),(64)&7	;volatile
  6370  0F44  2F48               	goto	u1984
  6371  0F45                     u1970:
  6372  0F45  1283               	bcf	status, 5	;RP0=0, select bank0
  6373  0F46  1303               	bcf	status, 6	;RP1=0, select bank0
  6374  0F47  1008               	bcf	(64/8),(64)&7	;volatile
  6375  0F48                     u1984:
  6376                           	line	427
  6377                           	
  6378  0F48                     l143:	
  6379  0F48  0008               	return
  6380                           	opt stack 0
  6381                           GLOBAL	__end_of_set_lcd_rs
  6382  0F49                     	__end_of_set_lcd_rs:
  6383                           	signat	_set_lcd_rs,4216
  6384                           	global	_set_lcd_data
  6385                           
  6386 ;; *************** function _set_lcd_data *****************
  6387 ;; Defined at:
  6388 ;;		line 445 in file "../lcd.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  uc_data         1    wreg     unsigned char 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  uc_data         1    4[COMMON] unsigned char 
  6393 ;; Return value:  Size  Location     Type
  6394 ;;		None               void
  6395 ;; Registers used:
  6396 ;;		wreg, status,2, status,0
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6402 ;;      Params:         0       0       0       0       0
  6403 ;;      Locals:         1       0       0       0       0
  6404 ;;      Temps:          0       0       0       0       0
  6405 ;;      Totals:         1       0       0       0       0
  6406 ;;Total ram usage:        1 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; Hardware stack levels required when called:    2
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_send_lcd_data
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           psect	text1303,local,class=CODE,delta=2,merge=1
  6416                           global __ptext1303
  6417  0F24                     __ptext1303:	;psect for function _set_lcd_data
  6418                           psect	text1303
  6419                           	file	"../lcd.c"
  6420                           	line	445
  6421                           	global	__size_of_set_lcd_data
  6422  0008                     	__size_of_set_lcd_data	equ	__end_of_set_lcd_data-_set_lcd_data
  6423                           	
  6424  0F24                     _set_lcd_data:	
  6425 ;; hardware stack exceeded
  6426                           	opt	stack 0
  6427                           ; Regs used in _set_lcd_data: [wreg+status,2+status,0]
  6428                           ;set_lcd_data@uc_data stored from wreg
  6429  0F24  00F4               	movwf	(set_lcd_data@uc_data)
  6430                           	line	446
  6431                           	
  6432  0F25                     l2766:	
  6433                           ;lcd.c: 446: PORTD = (PORTD & 0x0F) | uc_data;
  6434  0F25  1283               	bcf	status, 5	;RP0=0, select bank0
  6435  0F26  1303               	bcf	status, 6	;RP1=0, select bank0
  6436  0F27  0808               	movf	(8),w	;volatile
  6437  0F28  390F               	andlw	0Fh
  6438  0F29  0474               	iorwf	(set_lcd_data@uc_data),w
  6439  0F2A  0088               	movwf	(8)	;volatile
  6440                           	line	447
  6441                           	
  6442  0F2B                     l146:	
  6443  0F2B  0008               	return
  6444                           	opt stack 0
  6445                           GLOBAL	__end_of_set_lcd_data
  6446  0F2C                     	__end_of_set_lcd_data:
  6447                           	signat	_set_lcd_data,4216
  6448                           	global	_LSA08_GetSensor
  6449                           
  6450 ;; *************** function _LSA08_GetSensor *****************
  6451 ;; Defined at:
  6452 ;;		line 271 in file "../LSA08.h"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  sensorbin       1    7[BANK0 ] unsigned char 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      unsigned char 
  6459 ;; Registers used:
  6460 ;;		wreg, status,2, status,0, pclath, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6466 ;;      Params:         0       0       0       0       0
  6467 ;;      Locals:         0       1       0       0       0
  6468 ;;      Temps:          0       1       0       0       0
  6469 ;;      Totals:         0       2       0       0       0
  6470 ;;Total ram usage:        2 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    4
  6473 ;; This function calls:
  6474 ;;		_UART_REC
  6475 ;;		_UART_DUMP
  6476 ;; This function is called by:
  6477 ;;		_line_following
  6478 ;;		_LF
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           psect	text1304,local,class=CODE,delta=2,merge=1
  6482                           global __ptext1304
  6483  074F                     __ptext1304:	;psect for function _LSA08_GetSensor
  6484                           psect	text1304
  6485                           	file	"../LSA08.h"
  6486                           	line	271
  6487                           	global	__size_of_LSA08_GetSensor
  6488  001E                     	__size_of_LSA08_GetSensor	equ	__end_of_LSA08_GetSensor-_LSA08_GetSensor
  6489                           	
  6490  074F                     _LSA08_GetSensor:	
  6491                           	opt	stack 2
  6492                           ; Regs used in _LSA08_GetSensor: [wreg+status,2+status,0+pclath+cstack]
  6493                           	line	274
  6494                           	
  6495  074F                     l2856:	
  6496                           ;LSA08.h: 272: unsigned char sensorbin;
  6497                           ;LSA08.h: 274: RB0=0;
  6498  074F  1283               	bcf	status, 5	;RP0=0, select bank0
  6499  0750  1303               	bcf	status, 6	;RP1=0, select bank0
  6500  0751  1006               	bcf	(48/8),(48)&7	;volatile
  6501  0752  2F53               	goto	l2858
  6502                           	line	275
  6503                           ;LSA08.h: 275: do{
  6504                           	
  6505  0753                     l283:	
  6506                           	line	276
  6507                           	
  6508  0753                     l2858:	
  6509                           ;LSA08.h: 276: sensorbin= UART_REC();
  6510  0753  120A  118A  2582   	fcall	_UART_REC
              120A  118A         
  6511  0758  1283               	bcf	status, 5	;RP0=0, select bank0
  6512  0759  1303               	bcf	status, 6	;RP1=0, select bank0
  6513  075A  00A6               	movwf	(??_LSA08_GetSensor+0)+0
  6514  075B  0826               	movf	(??_LSA08_GetSensor+0)+0,w
  6515  075C  00A7               	movwf	(LSA08_GetSensor@sensorbin)
  6516                           	line	277
  6517                           	
  6518  075D                     l2860:	
  6519                           ;LSA08.h: 277: }while(ERR_FLAG);
  6520  075D  08C4               	movf	(_ERR_FLAG),f
  6521  075E  1D03               	skipz
  6522  075F  2F61               	goto	u2081
  6523  0760  2F62               	goto	u2080
  6524  0761                     u2081:
  6525  0761  2F53               	goto	l2858
  6526  0762                     u2080:
  6527                           	
  6528  0762                     l284:	
  6529                           	line	278
  6530                           ;LSA08.h: 278: RB0=1;
  6531  0762  1406               	bsf	(48/8),(48)&7	;volatile
  6532                           	line	279
  6533                           	
  6534  0763                     l2862:	
  6535                           ;LSA08.h: 279: UART_DUMP();
  6536  0763  120A  158A  27D7   	fcall	_UART_DUMP
              120A  118A         
  6537                           	line	280
  6538                           	
  6539  0768                     l2864:	
  6540                           ;LSA08.h: 280: return(sensorbin);
  6541  0768  1283               	bcf	status, 5	;RP0=0, select bank0
  6542  0769  1303               	bcf	status, 6	;RP1=0, select bank0
  6543  076A  0827               	movf	(LSA08_GetSensor@sensorbin),w
  6544  076B  2F6C               	goto	l285
  6545                           	
  6546  076C                     l2866:	
  6547                           	line	282
  6548                           	
  6549  076C                     l285:	
  6550  076C  0008               	return
  6551                           	opt stack 0
  6552                           GLOBAL	__end_of_LSA08_GetSensor
  6553  076D                     	__end_of_LSA08_GetSensor:
  6554                           	signat	_LSA08_GetSensor,89
  6555                           	global	_UART_DUMP
  6556                           
  6557 ;; *************** function _UART_DUMP *****************
  6558 ;; Defined at:
  6559 ;;		line 883 in file "../MC40SE Line Following UART.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;		None
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;  dump            1    5[BANK0 ] unsigned char 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;		None               void
  6566 ;; Registers used:
  6567 ;;		wreg, pclath, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6573 ;;      Params:         0       0       0       0       0
  6574 ;;      Locals:         0       1       0       0       0
  6575 ;;      Temps:          1       0       0       0       0
  6576 ;;      Totals:         1       1       0       0       0
  6577 ;;Total ram usage:        2 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:    3
  6580 ;; This function calls:
  6581 ;;		_UART_REC
  6582 ;; This function is called by:
  6583 ;;		_LSA08_GetSensor
  6584 ;;		_LF
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           psect	text1305,local,class=CODE,delta=2,merge=1
  6588                           global __ptext1305
  6589  0FD7                     __ptext1305:	;psect for function _UART_DUMP
  6590                           psect	text1305
  6591                           	file	"../MC40SE Line Following UART.c"
  6592                           	line	883
  6593                           	global	__size_of_UART_DUMP
  6594  0014                     	__size_of_UART_DUMP	equ	__end_of_UART_DUMP-_UART_DUMP
  6595                           	
  6596  0FD7                     _UART_DUMP:	
  6597                           	opt	stack 2
  6598                           ; Regs used in _UART_DUMP: [wreg+pclath+cstack]
  6599                           	line	886
  6600                           	
  6601  0FD7                     l2868:	
  6602                           ;MC40SE Line Following UART.c: 884: unsigned char dump;
  6603                           ;MC40SE Line Following UART.c: 886: while (RCIF == 1)
  6604  0FD7  2FE3               	goto	l2872
  6605                           	
  6606  0FD8                     l509:	
  6607                           	line	888
  6608                           	
  6609  0FD8                     l2870:	
  6610                           ;MC40SE Line Following UART.c: 887: {
  6611                           ;MC40SE Line Following UART.c: 888: dump=UART_REC();
  6612  0FD8  120A  118A  2582   	fcall	_UART_REC
              120A  158A         
  6613  0FDD  00F5               	movwf	(??_UART_DUMP+0)+0
  6614  0FDE  0875               	movf	(??_UART_DUMP+0)+0,w
  6615  0FDF  1283               	bcf	status, 5	;RP0=0, select bank0
  6616  0FE0  1303               	bcf	status, 6	;RP1=0, select bank0
  6617  0FE1  00A5               	movwf	(UART_DUMP@dump)
  6618  0FE2  2FE3               	goto	l2872
  6619                           	line	889
  6620                           	
  6621  0FE3                     l508:	
  6622                           	line	886
  6623                           	
  6624  0FE3                     l2872:	
  6625  0FE3  1283               	bcf	status, 5	;RP0=0, select bank0
  6626  0FE4  1303               	bcf	status, 6	;RP1=0, select bank0
  6627  0FE5  1A8C               	btfsc	(101/8),(101)&7	;volatile
  6628  0FE6  2FE8               	goto	u2091
  6629  0FE7  2FE9               	goto	u2090
  6630  0FE8                     u2091:
  6631  0FE8  2FD8               	goto	l2870
  6632  0FE9                     u2090:
  6633  0FE9  2FEA               	goto	l511
  6634                           	
  6635  0FEA                     l510:	
  6636                           	line	890
  6637                           	
  6638  0FEA                     l511:	
  6639  0FEA  0008               	return
  6640                           	opt stack 0
  6641                           GLOBAL	__end_of_UART_DUMP
  6642  0FEB                     	__end_of_UART_DUMP:
  6643                           	signat	_UART_DUMP,88
  6644                           	global	_UART_REC
  6645                           
  6646 ;; *************** function _UART_REC *****************
  6647 ;; Defined at:
  6648 ;;		line 850 in file "../MC40SE Line Following UART.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;		None
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;  waitcount       4    0[BANK0 ] unsigned long 
  6653 ;;  rec_data        1    4[BANK0 ] unsigned char 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      unsigned char 
  6656 ;; Registers used:
  6657 ;;		wreg
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6663 ;;      Params:         0       0       0       0       0
  6664 ;;      Locals:         0       5       0       0       0
  6665 ;;      Temps:          1       0       0       0       0
  6666 ;;      Totals:         1       5       0       0       0
  6667 ;;Total ram usage:        6 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    2
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_UART_RESPONSE
  6674 ;;		_LSA08_GetSensor
  6675 ;;		_UART_DUMP
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           psect	text1306,local,class=CODE,delta=2,merge=1
  6679                           global __ptext1306
  6680  0582                     __ptext1306:	;psect for function _UART_REC
  6681                           psect	text1306
  6682                           	file	"../MC40SE Line Following UART.c"
  6683                           	line	850
  6684                           	global	__size_of_UART_REC
  6685  005E                     	__size_of_UART_REC	equ	__end_of_UART_REC-_UART_REC
  6686                           	
  6687  0582                     _UART_REC:	
  6688                           	opt	stack 2
  6689                           ; Regs used in _UART_REC: [wreg]
  6690                           	line	851
  6691                           	
  6692  0582                     l2794:	
  6693                           ;MC40SE Line Following UART.c: 851: unsigned long waitcount=0;
  6694  0582  3000               	movlw	0
  6695  0583  1283               	bcf	status, 5	;RP0=0, select bank0
  6696  0584  1303               	bcf	status, 6	;RP1=0, select bank0
  6697  0585  00A3               	movwf	(UART_REC@waitcount+3)
  6698  0586  3000               	movlw	0
  6699  0587  00A2               	movwf	(UART_REC@waitcount+2)
  6700  0588  3000               	movlw	0
  6701  0589  00A1               	movwf	(UART_REC@waitcount+1)
  6702  058A  3000               	movlw	0
  6703  058B  00A0               	movwf	(UART_REC@waitcount)
  6704                           
  6705                           	line	854
  6706                           	
  6707  058C                     l2796:	
  6708                           ;MC40SE Line Following UART.c: 852: unsigned char rec_data;
  6709                           ;MC40SE Line Following UART.c: 854: if(RCSTAbits.OERR){
  6710  058C  1C98               	btfss	(24),1	;volatile
  6711  058D  2D8F               	goto	u2021
  6712  058E  2D90               	goto	u2020
  6713  058F                     u2021:
  6714  058F  2DBD               	goto	l497
  6715  0590                     u2020:
  6716                           	line	855
  6717                           	
  6718  0590                     l2798:	
  6719                           ;MC40SE Line Following UART.c: 855: RCSTAbits.CREN=0;
  6720  0590  1218               	bcf	(24),4	;volatile
  6721                           	line	856
  6722                           ;MC40SE Line Following UART.c: 856: RCSTAbits.CREN=1;
  6723  0591  1618               	bsf	(24),4	;volatile
  6724                           	line	857
  6725                           ;MC40SE Line Following UART.c: 857: ERR_FLAG=1;
  6726  0592  01C4               	clrf	(_ERR_FLAG)
  6727  0593  0AC4               	incf	(_ERR_FLAG),f
  6728                           	line	858
  6729                           	
  6730  0594                     l2800:	
  6731                           ;MC40SE Line Following UART.c: 858: return(255);
  6732  0594  30FF               	movlw	(0FFh)
  6733  0595  2DDF               	goto	l496
  6734                           	
  6735  0596                     l2802:	
  6736  0596  2DDF               	goto	l496
  6737                           	line	859
  6738                           	
  6739  0597                     l495:	
  6740                           	line	861
  6741                           ;MC40SE Line Following UART.c: 859: }
  6742                           ;MC40SE Line Following UART.c: 861: while (RCIF == 0)
  6743  0597  2DBD               	goto	l497
  6744                           	
  6745  0598                     l498:	
  6746                           	line	863
  6747                           	
  6748  0598                     l2804:	
  6749                           ;MC40SE Line Following UART.c: 862: {
  6750                           ;MC40SE Line Following UART.c: 863: waitcount++;
  6751  0598  3001               	movlw	01h
  6752  0599  07A0               	addwf	(UART_REC@waitcount),f
  6753  059A  3000               	movlw	0
  6754  059B  1803               	skipnc
  6755  059C  3001               movlw 1
  6756  059D  07A1               	addwf	(UART_REC@waitcount+1),f
  6757  059E  3000               	movlw	0
  6758  059F  1803               	skipnc
  6759  05A0  3001               movlw 1
  6760  05A1  07A2               	addwf	(UART_REC@waitcount+2),f
  6761  05A2  3000               	movlw	0
  6762  05A3  1803               	skipnc
  6763  05A4  3001               movlw 1
  6764  05A5  07A3               	addwf	(UART_REC@waitcount+3),f
  6765                           	line	864
  6766                           ;MC40SE Line Following UART.c: 864: if (waitcount > 15000){
  6767  05A6  3000               	movlw	0
  6768  05A7  0223               	subwf	(UART_REC@waitcount+3),w
  6769  05A8  1D03               	skipz
  6770  05A9  2DB4               	goto	u2035
  6771  05AA  3000               	movlw	0
  6772  05AB  0222               	subwf	(UART_REC@waitcount+2),w
  6773  05AC  1D03               	skipz
  6774  05AD  2DB4               	goto	u2035
  6775  05AE  303A               	movlw	03Ah
  6776  05AF  0221               	subwf	(UART_REC@waitcount+1),w
  6777  05B0  1D03               	skipz
  6778  05B1  2DB4               	goto	u2035
  6779  05B2  3099               	movlw	099h
  6780  05B3  0220               	subwf	(UART_REC@waitcount),w
  6781  05B4                     u2035:
  6782  05B4  1C03               	skipc
  6783  05B5  2DB7               	goto	u2031
  6784  05B6  2DB8               	goto	u2030
  6785  05B7                     u2031:
  6786  05B7  2DBD               	goto	l497
  6787  05B8                     u2030:
  6788                           	line	865
  6789                           	
  6790  05B8                     l2806:	
  6791                           ;MC40SE Line Following UART.c: 865: ERR_FLAG=1;
  6792  05B8  01C4               	clrf	(_ERR_FLAG)
  6793  05B9  0AC4               	incf	(_ERR_FLAG),f
  6794                           	line	866
  6795                           	
  6796  05BA                     l2808:	
  6797                           ;MC40SE Line Following UART.c: 866: return (255);
  6798  05BA  30FF               	movlw	(0FFh)
  6799  05BB  2DDF               	goto	l496
  6800                           	
  6801  05BC                     l2810:	
  6802  05BC  2DDF               	goto	l496
  6803                           	line	867
  6804                           	
  6805  05BD                     l499:	
  6806                           	line	868
  6807                           	
  6808  05BD                     l497:	
  6809                           	line	861
  6810  05BD  1E8C               	btfss	(101/8),(101)&7	;volatile
  6811  05BE  2DC0               	goto	u2041
  6812  05BF  2DC1               	goto	u2040
  6813  05C0                     u2041:
  6814  05C0  2D98               	goto	l2804
  6815  05C1                     u2040:
  6816  05C1  2DC2               	goto	l2812
  6817                           	
  6818  05C2                     l500:	
  6819                           	line	870
  6820                           	
  6821  05C2                     l2812:	
  6822                           ;MC40SE Line Following UART.c: 867: }
  6823                           ;MC40SE Line Following UART.c: 868: }
  6824                           ;MC40SE Line Following UART.c: 870: rec_data = RCREG;
  6825  05C2  081A               	movf	(26),w	;volatile
  6826  05C3  00F4               	movwf	(??_UART_REC+0)+0
  6827  05C4  0874               	movf	(??_UART_REC+0)+0,w
  6828  05C5  00A4               	movwf	(UART_REC@rec_data)
  6829                           	line	872
  6830                           	
  6831  05C6                     l2814:	
  6832                           ;MC40SE Line Following UART.c: 872: if (FERR == 1) {
  6833  05C6  1D18               	btfss	(194/8),(194)&7	;volatile
  6834  05C7  2DC9               	goto	u2051
  6835  05C8  2DCA               	goto	u2050
  6836  05C9                     u2051:
  6837  05C9  2DDB               	goto	l501
  6838  05CA                     u2050:
  6839  05CA  2DD1               	goto	l2820
  6840                           	line	873
  6841                           	
  6842  05CB                     l2816:	
  6843                           ;MC40SE Line Following UART.c: 873: while(RCIF) rec_data=RCREG;
  6844  05CB  2DD1               	goto	l2820
  6845                           	
  6846  05CC                     l503:	
  6847                           	
  6848  05CC                     l2818:	
  6849  05CC  081A               	movf	(26),w	;volatile
  6850  05CD  00F4               	movwf	(??_UART_REC+0)+0
  6851  05CE  0874               	movf	(??_UART_REC+0)+0,w
  6852  05CF  00A4               	movwf	(UART_REC@rec_data)
  6853  05D0  2DD1               	goto	l2820
  6854                           	
  6855  05D1                     l502:	
  6856                           	
  6857  05D1                     l2820:	
  6858  05D1  1A8C               	btfsc	(101/8),(101)&7	;volatile
  6859  05D2  2DD4               	goto	u2061
  6860  05D3  2DD5               	goto	u2060
  6861  05D4                     u2061:
  6862  05D4  2DCC               	goto	l2818
  6863  05D5                     u2060:
  6864                           	
  6865  05D5                     l504:	
  6866                           	line	874
  6867                           ;MC40SE Line Following UART.c: 874: ERR_FLAG=1;
  6868  05D5  01C4               	clrf	(_ERR_FLAG)
  6869  05D6  0AC4               	incf	(_ERR_FLAG),f
  6870                           	line	875
  6871                           	
  6872  05D7                     l2822:	
  6873                           ;MC40SE Line Following UART.c: 875: return (255);
  6874  05D7  30FF               	movlw	(0FFh)
  6875  05D8  2DDF               	goto	l496
  6876                           	
  6877  05D9                     l2824:	
  6878  05D9  2DDF               	goto	l496
  6879                           	line	876
  6880                           	
  6881  05DA                     l2826:	
  6882                           ;MC40SE Line Following UART.c: 876: }
  6883  05DA  2DDF               	goto	l496
  6884                           	line	877
  6885                           	
  6886  05DB                     l501:	
  6887                           	line	878
  6888                           ;MC40SE Line Following UART.c: 877: else{
  6889                           ;MC40SE Line Following UART.c: 878: ERR_FLAG=0;
  6890  05DB  01C4               	clrf	(_ERR_FLAG)
  6891                           	line	879
  6892                           	
  6893  05DC                     l2828:	
  6894                           ;MC40SE Line Following UART.c: 879: return rec_data;
  6895  05DC  0824               	movf	(UART_REC@rec_data),w
  6896  05DD  2DDF               	goto	l496
  6897                           	
  6898  05DE                     l2830:	
  6899  05DE  2DDF               	goto	l496
  6900                           	line	880
  6901                           	
  6902  05DF                     l505:	
  6903                           	line	881
  6904                           	
  6905  05DF                     l496:	
  6906  05DF  0008               	return
  6907                           	opt stack 0
  6908                           GLOBAL	__end_of_UART_REC
  6909  05E0                     	__end_of_UART_REC:
  6910                           	signat	_UART_REC,89
  6911                           	global	_brushless
  6912                           
  6913 ;; *************** function _brushless *****************
  6914 ;; Defined at:
  6915 ;;		line 310 in file "../MC40SE Line Following UART.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  uc_port_numb    1    wreg     unsigned char 
  6918 ;;  uc_motor_sta    1    2[BANK0 ] unsigned char 
  6919 ;;  uc_motor_dir    1    3[BANK0 ] unsigned char 
  6920 ;;  ui_speed        2    4[BANK0 ] unsigned int 
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;  uc_port_numb    1    8[BANK0 ] unsigned char 
  6923 ;; Return value:  Size  Location     Type
  6924 ;;		None               void
  6925 ;; Registers used:
  6926 ;;		wreg, status,2, status,0, pclath, cstack
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6932 ;;      Params:         0       4       0       0       0
  6933 ;;      Locals:         0       1       0       0       0
  6934 ;;      Temps:          0       2       0       0       0
  6935 ;;      Totals:         0       7       0       0       0
  6936 ;;Total ram usage:        7 bytes
  6937 ;; Hardware stack levels used:    1
  6938 ;; Hardware stack levels required when called:    3
  6939 ;; This function calls:
  6940 ;;		_set_pwm1
  6941 ;;		_set_pwm2
  6942 ;; This function is called by:
  6943 ;;		_main
  6944 ;;		_line_following
  6945 ;;		_line_follow_cross
  6946 ;;		_LF
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           psect	text1307,local,class=CODE,delta=2,merge=1
  6950                           global __ptext1307
  6951  031B                     __ptext1307:	;psect for function _brushless
  6952                           psect	text1307
  6953                           	file	"../MC40SE Line Following UART.c"
  6954                           	line	310
  6955                           	global	__size_of_brushless
  6956  009B                     	__size_of_brushless	equ	__end_of_brushless-_brushless
  6957                           	
  6958  031B                     _brushless:	
  6959                           	opt	stack 3
  6960                           ; Regs used in _brushless: [wreg+status,2+status,0+pclath+cstack]
  6961                           ;brushless@uc_port_number stored from wreg
  6962  031B  1283               	bcf	status, 5	;RP0=0, select bank0
  6963  031C  1303               	bcf	status, 6	;RP1=0, select bank0
  6964  031D  00A8               	movwf	(brushless@uc_port_number)
  6965                           	line	311
  6966                           	
  6967  031E                     l2976:	
  6968                           ;MC40SE Line Following UART.c: 311: if(uc_port_number == 1)
  6969  031E  0828               	movf	(brushless@uc_port_number),w
  6970  031F  3A01               	xorlw	01h
  6971  0320  1D03               	skipz
  6972  0321  2B23               	goto	u2141
  6973  0322  2B24               	goto	u2140
  6974  0323                     u2141:
  6975  0323  2B68               	goto	l3000
  6976  0324                     u2140:
  6977                           	line	313
  6978                           	
  6979  0324                     l2978:	
  6980                           ;MC40SE Line Following UART.c: 312: {
  6981                           ;MC40SE Line Following UART.c: 313: if(uc_motor_status == 0)
  6982  0324  08A2               	movf	(brushless@uc_motor_status),f
  6983  0325  1D03               	skipz
  6984  0326  2B28               	goto	u2151
  6985  0327  2B29               	goto	u2150
  6986  0328                     u2151:
  6987  0328  2B2B               	goto	l2982
  6988  0329                     u2150:
  6989                           	line	315
  6990                           	
  6991  0329                     l2980:	
  6992                           ;MC40SE Line Following UART.c: 314: {
  6993                           ;MC40SE Line Following UART.c: 315: RE0 = 0;
  6994  0329  1009               	bcf	(72/8),(72)&7	;volatile
  6995                           	line	316
  6996                           ;MC40SE Line Following UART.c: 316: }
  6997  032A  2B4A               	goto	l2990
  6998                           	line	317
  6999                           	
  7000  032B                     l348:	
  7001                           	
  7002  032B                     l2982:	
  7003                           ;MC40SE Line Following UART.c: 317: else if(uc_motor_status == 1)
  7004  032B  0822               	movf	(brushless@uc_motor_status),w
  7005  032C  3A01               	xorlw	01h
  7006  032D  1D03               	skipz
  7007  032E  2B30               	goto	u2161
  7008  032F  2B31               	goto	u2160
  7009  0330                     u2161:
  7010  0330  2B4A               	goto	l2990
  7011  0331                     u2160:
  7012                           	line	319
  7013                           	
  7014  0331                     l2984:	
  7015                           ;MC40SE Line Following UART.c: 318: {
  7016                           ;MC40SE Line Following UART.c: 319: RE0 = 1;
  7017  0331  1409               	bsf	(72/8),(72)&7	;volatile
  7018                           	line	320
  7019                           ;MC40SE Line Following UART.c: 320: RA7 = 0;
  7020  0332  1385               	bcf	(47/8),(47)&7	;volatile
  7021                           	line	321
  7022                           	
  7023  0333                     l2986:	
  7024                           ;MC40SE Line Following UART.c: 321: _delay((unsigned long)((5)*(8000000/4000.0)));
  7025                           	opt asmopt_off
  7026  0333  300D               movlw	13
  7027  0334  00A7               movwf	((??_brushless+0)+0+1),f
  7028  0335  30FB               	movlw	251
  7029  0336  00A6               movwf	((??_brushless+0)+0),f
  7030  0337                     u2787:
  7031  0337  0BA6               	decfsz	((??_brushless+0)+0),f
  7032  0338  2B37               	goto	u2787
  7033  0339  0BA7               	decfsz	((??_brushless+0)+0+1),f
  7034  033A  2B37               	goto	u2787
  7035  033B  2B3C               	nop2
  7036                           opt asmopt_on
  7037                           
  7038                           	line	322
  7039                           	
  7040  033C                     l2988:	
  7041                           ;MC40SE Line Following UART.c: 322: RA7 = 1;
  7042  033C  1283               	bcf	status, 5	;RP0=0, select bank0
  7043  033D  1303               	bcf	status, 6	;RP1=0, select bank0
  7044  033E  1785               	bsf	(47/8),(47)&7	;volatile
  7045                           	line	323
  7046                           ;MC40SE Line Following UART.c: 323: _delay((unsigned long)((10)*(8000000/4000.0)));
  7047                           	opt asmopt_off
  7048  033F  301A               movlw	26
  7049  0340  00A7               movwf	((??_brushless+0)+0+1),f
  7050  0341  30F8               	movlw	248
  7051  0342  00A6               movwf	((??_brushless+0)+0),f
  7052  0343                     u2797:
  7053  0343  0BA6               	decfsz	((??_brushless+0)+0),f
  7054  0344  2B43               	goto	u2797
  7055  0345  0BA7               	decfsz	((??_brushless+0)+0+1),f
  7056  0346  2B43               	goto	u2797
  7057  0347  0000               	nop
  7058                           opt asmopt_on
  7059                           
  7060  0348  2B4A               	goto	l2990
  7061                           	line	324
  7062                           	
  7063  0349                     l350:	
  7064  0349  2B4A               	goto	l2990
  7065                           	line	326
  7066                           	
  7067  034A                     l349:	
  7068                           	
  7069  034A                     l2990:	
  7070                           ;MC40SE Line Following UART.c: 324: }
  7071                           ;MC40SE Line Following UART.c: 326: if(uc_motor_dir == 0)
  7072  034A  1283               	bcf	status, 5	;RP0=0, select bank0
  7073  034B  1303               	bcf	status, 6	;RP1=0, select bank0
  7074  034C  08A3               	movf	(brushless@uc_motor_dir),f
  7075  034D  1D03               	skipz
  7076  034E  2B50               	goto	u2171
  7077  034F  2B51               	goto	u2170
  7078  0350                     u2171:
  7079  0350  2B53               	goto	l2994
  7080  0351                     u2170:
  7081                           	line	328
  7082                           	
  7083  0351                     l2992:	
  7084                           ;MC40SE Line Following UART.c: 327: {
  7085                           ;MC40SE Line Following UART.c: 328: RE1 = 1;
  7086  0351  1489               	bsf	(73/8),(73)&7	;volatile
  7087                           	line	329
  7088                           ;MC40SE Line Following UART.c: 329: }
  7089  0352  2B5C               	goto	l2998
  7090                           	line	330
  7091                           	
  7092  0353                     l351:	
  7093                           	
  7094  0353                     l2994:	
  7095                           ;MC40SE Line Following UART.c: 330: else if (uc_motor_dir == 1)
  7096  0353  0823               	movf	(brushless@uc_motor_dir),w
  7097  0354  3A01               	xorlw	01h
  7098  0355  1D03               	skipz
  7099  0356  2B58               	goto	u2181
  7100  0357  2B59               	goto	u2180
  7101  0358                     u2181:
  7102  0358  2B5C               	goto	l2998
  7103  0359                     u2180:
  7104                           	line	332
  7105                           	
  7106  0359                     l2996:	
  7107                           ;MC40SE Line Following UART.c: 331: {
  7108                           ;MC40SE Line Following UART.c: 332: RE1 = 0;
  7109  0359  1089               	bcf	(73/8),(73)&7	;volatile
  7110  035A  2B5C               	goto	l2998
  7111                           	line	333
  7112                           	
  7113  035B                     l353:	
  7114  035B  2B5C               	goto	l2998
  7115                           	line	334
  7116                           	
  7117  035C                     l352:	
  7118                           	
  7119  035C                     l2998:	
  7120                           ;MC40SE Line Following UART.c: 333: }
  7121                           ;MC40SE Line Following UART.c: 334: set_pwm1(ui_speed);
  7122  035C  0825               	movf	(brushless@ui_speed+1),w
  7123  035D  01F5               	clrf	(?_set_pwm1+1)
  7124  035E  07F5               	addwf	(?_set_pwm1+1)
  7125  035F  0824               	movf	(brushless@ui_speed),w
  7126  0360  01F4               	clrf	(?_set_pwm1)
  7127  0361  07F4               	addwf	(?_set_pwm1)
  7128                           
  7129  0362  120A  118A  26F3   	fcall	_set_pwm1
              120A  118A         
  7130                           	line	335
  7131                           ;MC40SE Line Following UART.c: 335: }
  7132  0367  2BB5               	goto	l362
  7133                           	line	336
  7134                           	
  7135  0368                     l347:	
  7136                           	
  7137  0368                     l3000:	
  7138                           ;MC40SE Line Following UART.c: 336: else if(uc_port_number == 2)
  7139  0368  1283               	bcf	status, 5	;RP0=0, select bank0
  7140  0369  1303               	bcf	status, 6	;RP1=0, select bank0
  7141  036A  0828               	movf	(brushless@uc_port_number),w
  7142  036B  3A02               	xorlw	02h
  7143  036C  1D03               	skipz
  7144  036D  2B6F               	goto	u2191
  7145  036E  2B70               	goto	u2190
  7146  036F                     u2191:
  7147  036F  2BB5               	goto	l362
  7148  0370                     u2190:
  7149                           	line	338
  7150                           	
  7151  0370                     l3002:	
  7152                           ;MC40SE Line Following UART.c: 337: {
  7153                           ;MC40SE Line Following UART.c: 338: if(uc_motor_status == 0)
  7154  0370  08A2               	movf	(brushless@uc_motor_status),f
  7155  0371  1D03               	skipz
  7156  0372  2B74               	goto	u2201
  7157  0373  2B75               	goto	u2200
  7158  0374                     u2201:
  7159  0374  2B77               	goto	l3006
  7160  0375                     u2200:
  7161                           	line	340
  7162                           	
  7163  0375                     l3004:	
  7164                           ;MC40SE Line Following UART.c: 339: {
  7165                           ;MC40SE Line Following UART.c: 340: RC4 = 0;
  7166  0375  1207               	bcf	(60/8),(60)&7	;volatile
  7167                           	line	341
  7168                           ;MC40SE Line Following UART.c: 341: }
  7169  0376  2B96               	goto	l3014
  7170                           	line	342
  7171                           	
  7172  0377                     l356:	
  7173                           	
  7174  0377                     l3006:	
  7175                           ;MC40SE Line Following UART.c: 342: else if(uc_motor_status == 1)
  7176  0377  0822               	movf	(brushless@uc_motor_status),w
  7177  0378  3A01               	xorlw	01h
  7178  0379  1D03               	skipz
  7179  037A  2B7C               	goto	u2211
  7180  037B  2B7D               	goto	u2210
  7181  037C                     u2211:
  7182  037C  2B96               	goto	l3014
  7183  037D                     u2210:
  7184                           	line	344
  7185                           	
  7186  037D                     l3008:	
  7187                           ;MC40SE Line Following UART.c: 343: {
  7188                           ;MC40SE Line Following UART.c: 344: RC4 = 1;
  7189  037D  1607               	bsf	(60/8),(60)&7	;volatile
  7190                           	line	345
  7191                           ;MC40SE Line Following UART.c: 345: RA7 = 0;
  7192  037E  1385               	bcf	(47/8),(47)&7	;volatile
  7193                           	line	346
  7194                           	
  7195  037F                     l3010:	
  7196                           ;MC40SE Line Following UART.c: 346: _delay((unsigned long)((5)*(8000000/4000.0)));
  7197                           	opt asmopt_off
  7198  037F  300D               movlw	13
  7199  0380  00A7               movwf	((??_brushless+0)+0+1),f
  7200  0381  30FB               	movlw	251
  7201  0382  00A6               movwf	((??_brushless+0)+0),f
  7202  0383                     u2807:
  7203  0383  0BA6               	decfsz	((??_brushless+0)+0),f
  7204  0384  2B83               	goto	u2807
  7205  0385  0BA7               	decfsz	((??_brushless+0)+0+1),f
  7206  0386  2B83               	goto	u2807
  7207  0387  2B88               	nop2
  7208                           opt asmopt_on
  7209                           
  7210                           	line	347
  7211                           	
  7212  0388                     l3012:	
  7213                           ;MC40SE Line Following UART.c: 347: RA7 = 1;
  7214  0388  1283               	bcf	status, 5	;RP0=0, select bank0
  7215  0389  1303               	bcf	status, 6	;RP1=0, select bank0
  7216  038A  1785               	bsf	(47/8),(47)&7	;volatile
  7217                           	line	348
  7218                           ;MC40SE Line Following UART.c: 348: _delay((unsigned long)((10)*(8000000/4000.0)));
  7219                           	opt asmopt_off
  7220  038B  301A               movlw	26
  7221  038C  00A7               movwf	((??_brushless+0)+0+1),f
  7222  038D  30F8               	movlw	248
  7223  038E  00A6               movwf	((??_brushless+0)+0),f
  7224  038F                     u2817:
  7225  038F  0BA6               	decfsz	((??_brushless+0)+0),f
  7226  0390  2B8F               	goto	u2817
  7227  0391  0BA7               	decfsz	((??_brushless+0)+0+1),f
  7228  0392  2B8F               	goto	u2817
  7229  0393  0000               	nop
  7230                           opt asmopt_on
  7231                           
  7232  0394  2B96               	goto	l3014
  7233                           	line	349
  7234                           	
  7235  0395                     l358:	
  7236  0395  2B96               	goto	l3014
  7237                           	line	351
  7238                           	
  7239  0396                     l357:	
  7240                           	
  7241  0396                     l3014:	
  7242                           ;MC40SE Line Following UART.c: 349: }
  7243                           ;MC40SE Line Following UART.c: 351: if(uc_motor_dir == 0)
  7244  0396  1283               	bcf	status, 5	;RP0=0, select bank0
  7245  0397  1303               	bcf	status, 6	;RP1=0, select bank0
  7246  0398  08A3               	movf	(brushless@uc_motor_dir),f
  7247  0399  1D03               	skipz
  7248  039A  2B9C               	goto	u2221
  7249  039B  2B9D               	goto	u2220
  7250  039C                     u2221:
  7251  039C  2B9F               	goto	l3018
  7252  039D                     u2220:
  7253                           	line	353
  7254                           	
  7255  039D                     l3016:	
  7256                           ;MC40SE Line Following UART.c: 352: {
  7257                           ;MC40SE Line Following UART.c: 353: RC5 = 1;
  7258  039D  1687               	bsf	(61/8),(61)&7	;volatile
  7259                           	line	354
  7260                           ;MC40SE Line Following UART.c: 354: }
  7261  039E  2BA8               	goto	l3022
  7262                           	line	355
  7263                           	
  7264  039F                     l359:	
  7265                           	
  7266  039F                     l3018:	
  7267                           ;MC40SE Line Following UART.c: 355: else if (uc_motor_dir == 1)
  7268  039F  0823               	movf	(brushless@uc_motor_dir),w
  7269  03A0  3A01               	xorlw	01h
  7270  03A1  1D03               	skipz
  7271  03A2  2BA4               	goto	u2231
  7272  03A3  2BA5               	goto	u2230
  7273  03A4                     u2231:
  7274  03A4  2BA8               	goto	l3022
  7275  03A5                     u2230:
  7276                           	line	357
  7277                           	
  7278  03A5                     l3020:	
  7279                           ;MC40SE Line Following UART.c: 356: {
  7280                           ;MC40SE Line Following UART.c: 357: RC5 = 0;
  7281  03A5  1287               	bcf	(61/8),(61)&7	;volatile
  7282  03A6  2BA8               	goto	l3022
  7283                           	line	358
  7284                           	
  7285  03A7                     l361:	
  7286  03A7  2BA8               	goto	l3022
  7287                           	line	359
  7288                           	
  7289  03A8                     l360:	
  7290                           	
  7291  03A8                     l3022:	
  7292                           ;MC40SE Line Following UART.c: 358: }
  7293                           ;MC40SE Line Following UART.c: 359: set_pwm2(ui_speed);
  7294  03A8  0825               	movf	(brushless@ui_speed+1),w
  7295  03A9  01F5               	clrf	(?_set_pwm2+1)
  7296  03AA  07F5               	addwf	(?_set_pwm2+1)
  7297  03AB  0824               	movf	(brushless@ui_speed),w
  7298  03AC  01F4               	clrf	(?_set_pwm2)
  7299  03AD  07F4               	addwf	(?_set_pwm2)
  7300                           
  7301  03AE  120A  118A  2712   	fcall	_set_pwm2
              120A  118A         
  7302  03B3  2BB5               	goto	l362
  7303                           	line	360
  7304                           	
  7305  03B4                     l355:	
  7306  03B4  2BB5               	goto	l362
  7307                           	line	361
  7308                           	
  7309  03B5                     l354:	
  7310                           	
  7311  03B5                     l362:	
  7312  03B5  0008               	return
  7313                           	opt stack 0
  7314                           GLOBAL	__end_of_brushless
  7315  03B6                     	__end_of_brushless:
  7316                           	signat	_brushless,16504
  7317                           	global	_set_pwm1
  7318                           
  7319 ;; *************** function _set_pwm1 *****************
  7320 ;; Defined at:
  7321 ;;		line 96 in file "../pwm.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  ui_duty_cycl    2    4[COMMON] unsigned int 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;		None
  7326 ;; Return value:  Size  Location     Type
  7327 ;;		None               void
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, status,0
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7335 ;;      Params:         2       0       0       0       0
  7336 ;;      Locals:         0       0       0       0       0
  7337 ;;      Temps:          0       2       0       0       0
  7338 ;;      Totals:         2       2       0       0       0
  7339 ;;Total ram usage:        4 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:    2
  7342 ;; This function calls:
  7343 ;;		Nothing
  7344 ;; This function is called by:
  7345 ;;		_brushless
  7346 ;;		_brush
  7347 ;;		_motorspeed
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           psect	text1308,local,class=CODE,delta=2,merge=1
  7351                           global __ptext1308
  7352  06F3                     __ptext1308:	;psect for function _set_pwm1
  7353                           psect	text1308
  7354                           	file	"../pwm.c"
  7355                           	line	96
  7356                           	global	__size_of_set_pwm1
  7357  001F                     	__size_of_set_pwm1	equ	__end_of_set_pwm1-_set_pwm1
  7358                           	
  7359  06F3                     _set_pwm1:	
  7360                           	opt	stack 3
  7361                           ; Regs used in _set_pwm1: [wreg+status,2+status,0]
  7362                           	line	97
  7363                           	
  7364  06F3                     l3074:	
  7365                           ;pwm.c: 97: CCP1CON = (CCP1CON & 0b11001111) | (0b00110000 & ((unsigned char)(ui_duty_cy
                                 cle << 4)));
  7366  06F3  0874               	movf	(set_pwm1@ui_duty_cycle),w
  7367  06F4  1283               	bcf	status, 5	;RP0=0, select bank0
  7368  06F5  1303               	bcf	status, 6	;RP1=0, select bank0
  7369  06F6  00A0               	movwf	(??_set_pwm1+0)+0
  7370  06F7  3004               	movlw	04h
  7371  06F8                     u2305:
  7372  06F8  1003               	clrc
  7373  06F9  0DA0               	rlf	(??_set_pwm1+0)+0,f
  7374  06FA  3EFF               	addlw	-1
  7375  06FB  1D03               	skipz
  7376  06FC  2EF8               	goto	u2305
  7377  06FD  3030               	movlw	(030h)
  7378  06FE  0520               	andwf	0+(??_set_pwm1+0)+0,w
  7379  06FF  00A1               	movwf	(??_set_pwm1+1)+0
  7380  0700  0817               	movf	(23),w	;volatile
  7381  0701  39CF               	andlw	0CFh
  7382  0702  0421               	iorwf	0+(??_set_pwm1+1)+0,w
  7383  0703  0097               	movwf	(23)	;volatile
  7384                           	line	98
  7385                           ;pwm.c: 98: CCPR1L = ui_duty_cycle >> 2;
  7386  0704  0875               	movf	(set_pwm1@ui_duty_cycle+1),w
  7387  0705  00A1               	movwf	(??_set_pwm1+0)+0+1
  7388  0706  0874               	movf	(set_pwm1@ui_duty_cycle),w
  7389  0707  00A0               	movwf	(??_set_pwm1+0)+0
  7390  0708  3002               	movlw	02h
  7391  0709                     u2315:
  7392  0709  1003               	clrc
  7393  070A  0CA1               	rrf	(??_set_pwm1+0)+1,f
  7394  070B  0CA0               	rrf	(??_set_pwm1+0)+0,f
  7395  070C  3EFF               	addlw	-1
  7396  070D  1D03               	skipz
  7397  070E  2F09               	goto	u2315
  7398  070F  0820               	movf	0+(??_set_pwm1+0)+0,w
  7399  0710  0095               	movwf	(21)	;volatile
  7400                           	line	99
  7401                           	
  7402  0711                     l561:	
  7403  0711  0008               	return
  7404                           	opt stack 0
  7405                           GLOBAL	__end_of_set_pwm1
  7406  0712                     	__end_of_set_pwm1:
  7407                           	signat	_set_pwm1,4216
  7408                           	global	_set_pwm2
  7409                           
  7410 ;; *************** function _set_pwm2 *****************
  7411 ;; Defined at:
  7412 ;;		line 115 in file "../pwm.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;  ui_duty_cycl    2    4[COMMON] unsigned int 
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;		None
  7417 ;; Return value:  Size  Location     Type
  7418 ;;		None               void
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7426 ;;      Params:         2       0       0       0       0
  7427 ;;      Locals:         0       0       0       0       0
  7428 ;;      Temps:          0       2       0       0       0
  7429 ;;      Totals:         2       2       0       0       0
  7430 ;;Total ram usage:        4 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:    2
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		_brushless
  7437 ;;		_brush
  7438 ;;		_motorspeed
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           psect	text1309,local,class=CODE,delta=2,merge=1
  7442                           global __ptext1309
  7443  0712                     __ptext1309:	;psect for function _set_pwm2
  7444                           psect	text1309
  7445                           	file	"../pwm.c"
  7446                           	line	115
  7447                           	global	__size_of_set_pwm2
  7448  001F                     	__size_of_set_pwm2	equ	__end_of_set_pwm2-_set_pwm2
  7449                           	
  7450  0712                     _set_pwm2:	
  7451                           	opt	stack 3
  7452                           ; Regs used in _set_pwm2: [wreg+status,2+status,0]
  7453                           	line	116
  7454                           	
  7455  0712                     l3076:	
  7456                           ;pwm.c: 116: CCP2CON = (CCP2CON & 0b11001111) | (0b00110000 & ((unsigned char)(ui_duty_c
                                 ycle << 4)));
  7457  0712  0874               	movf	(set_pwm2@ui_duty_cycle),w
  7458  0713  1283               	bcf	status, 5	;RP0=0, select bank0
  7459  0714  1303               	bcf	status, 6	;RP1=0, select bank0
  7460  0715  00A0               	movwf	(??_set_pwm2+0)+0
  7461  0716  3004               	movlw	04h
  7462  0717                     u2325:
  7463  0717  1003               	clrc
  7464  0718  0DA0               	rlf	(??_set_pwm2+0)+0,f
  7465  0719  3EFF               	addlw	-1
  7466  071A  1D03               	skipz
  7467  071B  2F17               	goto	u2325
  7468  071C  3030               	movlw	(030h)
  7469  071D  0520               	andwf	0+(??_set_pwm2+0)+0,w
  7470  071E  00A1               	movwf	(??_set_pwm2+1)+0
  7471  071F  081D               	movf	(29),w	;volatile
  7472  0720  39CF               	andlw	0CFh
  7473  0721  0421               	iorwf	0+(??_set_pwm2+1)+0,w
  7474  0722  009D               	movwf	(29)	;volatile
  7475                           	line	117
  7476                           ;pwm.c: 117: CCPR2L = ui_duty_cycle >> 2;
  7477  0723  0875               	movf	(set_pwm2@ui_duty_cycle+1),w
  7478  0724  00A1               	movwf	(??_set_pwm2+0)+0+1
  7479  0725  0874               	movf	(set_pwm2@ui_duty_cycle),w
  7480  0726  00A0               	movwf	(??_set_pwm2+0)+0
  7481  0727  3002               	movlw	02h
  7482  0728                     u2335:
  7483  0728  1003               	clrc
  7484  0729  0CA1               	rrf	(??_set_pwm2+0)+1,f
  7485  072A  0CA0               	rrf	(??_set_pwm2+0)+0,f
  7486  072B  3EFF               	addlw	-1
  7487  072C  1D03               	skipz
  7488  072D  2F28               	goto	u2335
  7489  072E  0820               	movf	0+(??_set_pwm2+0)+0,w
  7490  072F  009B               	movwf	(27)	;volatile
  7491                           	line	118
  7492                           	
  7493  0730                     l564:	
  7494  0730  0008               	return
  7495                           	opt stack 0
  7496                           GLOBAL	__end_of_set_pwm2
  7497  0731                     	__end_of_set_pwm2:
  7498                           	signat	_set_pwm2,4216
  7499                           	global	_run
  7500                           
  7501 ;; *************** function _run *****************
  7502 ;; Defined at:
  7503 ;;		line 750 in file "../MC40SE Line Following UART.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;		None
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;		None
  7508 ;; Return value:  Size  Location     Type
  7509 ;;		None               void
  7510 ;; Registers used:
  7511 ;;		None
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7517 ;;      Params:         0       0       0       0       0
  7518 ;;      Locals:         0       0       0       0       0
  7519 ;;      Temps:          0       0       0       0       0
  7520 ;;      Totals:         0       0       0       0       0
  7521 ;;Total ram usage:        0 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; Hardware stack levels required when called:    2
  7524 ;; This function calls:
  7525 ;;		Nothing
  7526 ;; This function is called by:
  7527 ;;		_forward
  7528 ;;		_reverse
  7529 ;;		_left
  7530 ;;		_right
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           psect	text1310,local,class=CODE,delta=2,merge=1
  7534                           global __ptext1310
  7535  0F1F                     __ptext1310:	;psect for function _run
  7536                           psect	text1310
  7537                           	file	"../MC40SE Line Following UART.c"
  7538                           	line	750
  7539                           	global	__size_of_run
  7540  0005                     	__size_of_run	equ	__end_of_run-_run
  7541                           	
  7542  0F1F                     _run:	
  7543                           	opt	stack 3
  7544                           ; Regs used in _run: []
  7545                           	line	751
  7546                           	
  7547  0F1F                     l2562:	
  7548                           ;MC40SE Line Following UART.c: 751: RE0 = 0;
  7549  0F1F  1283               	bcf	status, 5	;RP0=0, select bank0
  7550  0F20  1303               	bcf	status, 6	;RP1=0, select bank0
  7551  0F21  1009               	bcf	(72/8),(72)&7	;volatile
  7552                           	line	752
  7553                           ;MC40SE Line Following UART.c: 752: RC4 = 0;
  7554  0F22  1207               	bcf	(60/8),(60)&7	;volatile
  7555                           	line	753
  7556                           	
  7557  0F23                     l448:	
  7558  0F23  0008               	return
  7559                           	opt stack 0
  7560                           GLOBAL	__end_of_run
  7561  0F24                     	__end_of_run:
  7562                           	signat	_run,88
  7563                           	global	_isr
  7564                           
  7565 ;; *************** function _isr *****************
  7566 ;; Defined at:
  7567 ;;		line 22 in file "../isr.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;		None               void
  7574 ;; Registers used:
  7575 ;;		status,2, status,0, pclath, cstack
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7581 ;;      Params:         0       0       0       0       0
  7582 ;;      Locals:         0       0       0       0       0
  7583 ;;      Temps:          4       0       0       0       0
  7584 ;;      Totals:         4       0       0       0       0
  7585 ;;Total ram usage:        4 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:    1
  7588 ;; This function calls:
  7589 ;;		_timer1_isr
  7590 ;; This function is called by:
  7591 ;;		Interrupt level 1
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           psect	text1311,local,class=CODE,delta=2,merge=1
  7595                           global __ptext1311
  7596  07D8                     __ptext1311:	;psect for function _isr
  7597                           psect	text1311
  7598                           	file	"../isr.c"
  7599                           	line	22
  7600                           	global	__size_of_isr
  7601  0017                     	__size_of_isr	equ	__end_of_isr-_isr
  7602                           	
  7603  07D8                     _isr:	
  7604 ;; hardware stack exceeded
  7605                           	opt	stack 0
  7606                           ; Regs used in _isr: [status,2+status,0+pclath+cstack]
  7607                           psect	intentry,class=CODE,delta=2
  7608                           global __pintentry
  7609  0004                     __pintentry:
  7610                           global interrupt_function
  7611  0004                     interrupt_function:
  7612                           	global saved_w
  7613  007E                     	saved_w	set	btemp+0
  7614  0004  00FE               	movwf	saved_w
  7615  0005  0E03               	swapf	status,w
  7616  0006  00F0               	movwf	(??_isr+0)
  7617  0007  0804               	movf	fsr0,w
  7618  0008  00F1               	movwf	(??_isr+1)
  7619  0009  080A               	movf	pclath,w
  7620  000A  00F2               	movwf	(??_isr+2)
  7621  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  7622  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  7623  000D  087F               	movf	btemp+1,w
  7624  000E  00F3               	movwf	(??_isr+3)
  7625  000F  120A  118A  2FD8   	ljmp	_isr
  7626                           psect	text1311
  7627                           	line	24
  7628                           	
  7629  07D8                     i1l1936:	
  7630                           ;isr.c: 24: if (TMR1IF == 1)
  7631  07D8  1C0C               	btfss	(96/8),(96)&7	;volatile
  7632  07D9  2FDB               	goto	u87_21
  7633  07DA  2FDC               	goto	u87_20
  7634  07DB                     u87_21:
  7635  07DB  2FE2               	goto	i1l73
  7636  07DC                     u87_20:
  7637                           	line	26
  7638                           	
  7639  07DC                     i1l1938:	
  7640                           ;isr.c: 25: {
  7641                           ;isr.c: 26: timer1_isr();
  7642  07DC  120A  158A  271A   	fcall	_timer1_isr
              120A  118A         
  7643  07E1  2FE2               	goto	i1l73
  7644                           	line	27
  7645                           	
  7646  07E2                     i1l72:	
  7647                           	line	29
  7648                           	
  7649  07E2                     i1l73:	
  7650  07E2  0873               	movf	(??_isr+3),w
  7651  07E3  1283               	bcf	status, 5	;RP0=0, select bank0
  7652  07E4  1303               	bcf	status, 6	;RP1=0, select bank0
  7653  07E5  00FF               	movwf	btemp+1
  7654  07E6  0872               	movf	(??_isr+2),w
  7655  07E7  008A               	movwf	pclath
  7656  07E8  0871               	movf	(??_isr+1),w
  7657  07E9  0084               	movwf	fsr0
  7658  07EA  0E70               	swapf	(??_isr+0)^0FFFFFF80h,w
  7659  07EB  0083               	movwf	status
  7660  07EC  0EFE               	swapf	saved_w,f
  7661  07ED  0E7E               	swapf	saved_w,w
  7662  07EE  0009               	retfie
  7663                           	opt stack 0
  7664                           GLOBAL	__end_of_isr
  7665  07EF                     	__end_of_isr:
  7666                           	signat	_isr,88
  7667                           	global	_timer1_isr
  7668                           
  7669 ;; *************** function _timer1_isr *****************
  7670 ;; Defined at:
  7671 ;;		line 111 in file "../timer1.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;		None
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;		None
  7676 ;; Return value:  Size  Location     Type
  7677 ;;		None               void
  7678 ;; Registers used:
  7679 ;;		None
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7685 ;;      Params:         0       0       0       0       0
  7686 ;;      Locals:         0       0       0       0       0
  7687 ;;      Temps:          0       0       0       0       0
  7688 ;;      Totals:         0       0       0       0       0
  7689 ;;Total ram usage:        0 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; This function calls:
  7692 ;;		Nothing
  7693 ;; This function is called by:
  7694 ;;		_isr
  7695 ;; This function uses a non-reentrant model
  7696 ;;
  7697                           psect	text1312,local,class=CODE,delta=2,merge=1
  7698                           global __ptext1312
  7699  0F1A                     __ptext1312:	;psect for function _timer1_isr
  7700                           psect	text1312
  7701                           	file	"../timer1.c"
  7702                           	line	111
  7703                           	global	__size_of_timer1_isr
  7704  0005                     	__size_of_timer1_isr	equ	__end_of_timer1_isr-_timer1_isr
  7705                           	
  7706  0F1A                     _timer1_isr:	
  7707 ;; hardware stack exceeded
  7708                           	opt	stack 0
  7709                           ; Regs used in _timer1_isr: []
  7710                           	line	113
  7711                           	
  7712  0F1A                     i1l1228:	
  7713                           ;timer1.c: 113: TMR1IF = 0;
  7714  0F1A  1283               	bcf	status, 5	;RP0=0, select bank0
  7715  0F1B  1303               	bcf	status, 6	;RP1=0, select bank0
  7716  0F1C  100C               	bcf	(96/8),(96)&7	;volatile
  7717                           	line	114
  7718                           ;timer1.c: 114: RB7 = 1;
  7719  0F1D  1786               	bsf	(55/8),(55)&7	;volatile
  7720                           	line	115
  7721                           	
  7722  0F1E                     i1l621:	
  7723  0F1E  0008               	return
  7724                           	opt stack 0
  7725                           GLOBAL	__end_of_timer1_isr
  7726  0F1F                     	__end_of_timer1_isr:
  7727                           	signat	_timer1_isr,88
  7728                           psect	text1313,local,class=CODE,delta=2,merge=1
  7729                           global __ptext1313
  7730  0000                     __ptext1313:	;psect for function _timer1_isr
  7731                           	global	btemp
  7732  007E                     	btemp set 07Eh
  7733                           
  7734                           	DABS	1,126,2	;btemp
  7735                           	global	wtemp0
  7736  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     112
    Constant    0
    Data        2
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     20      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_clear_msg@csz_string	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_14(CODE[9]), STR_13(CODE[8]), STR_12(CODE[8]), STR_11(CODE[7]), 
		 -> STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[8]), STR_7(CODE[9]), 
		 -> STR_6(CODE[5]), STR_5(CODE[13]), STR_4(CODE[14]), STR_3(CODE[6]), 
		 -> STR_2(CODE[14]), STR_1(CODE[15]), 

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_14(CODE[9]), STR_13(CODE[8]), STR_12(CODE[8]), STR_11(CODE[7]), 
		 -> STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[8]), STR_7(CODE[9]), 
		 -> STR_6(CODE[5]), STR_5(CODE[13]), STR_4(CODE[14]), STR_3(CODE[6]), 
		 -> STR_2(CODE[14]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_delay_ms
    _lcd_init->_send_lcd_data
    _mc40se_init->_delay_ms
    _relay_off_all->_delay_ms
    _line_following->_delay_ms
    _beep->_delay_ms
    _SEND_PACKET->_UART_RESPONSE
    _UART_RESPONSE->_UART_REC
    _LF->_UART_DUMP
    _lcd_clr->_send_lcd_data
    _lcd_2ndline->_send_lcd_data
    _lcd_putchar->_send_lcd_data
    _send_lcd_data->_set_lcd_rs
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _LSA08_GetSensor->_UART_DUMP
    _UART_DUMP->_UART_REC
    _brushless->_set_pwm1
    _brushless->_set_pwm2

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_line_following
    _lcd_init->_send_lcd_data
    _LSA08_Init->_LSA08_UARTMode
    _LSA08_UARTMode->_SEND_PACKET
    _mc40se_init->_delay_ms
    _relay_off_all->_delay_ms
    _line_following->_line_follow_cross
    _beep->_delay_ms
    _line_follow_cross->_LSA08_ClearJunction
    _LSA08_ClearJunction->_SEND_PACKET
    _LSA08_GetJunction->_SEND_PACKET
    _SEND_PACKET->_UART_RESPONSE
    _UART_RESPONSE->_UART_REC
    _LF->_brushless
    _LF->_lcd_clear_msg
    _lcd_clear_msg->_lcd_putstr
    _lcd_clr->_send_lcd_data
    _lcd_putstr->_lcd_putchar
    _lcd_2ndline->_send_lcd_data
    _lcd_putchar->_send_lcd_data
    _LSA08_GetSensor->_UART_DUMP
    _UART_DUMP->_UART_REC
    _brushless->_set_pwm1
    _brushless->_set_pwm2

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8909
                        _mc40se_init
                           _pwm_init
                      _relay_off_all
                           _adc_init
                        _timer1_init
                           _lcd_init
                         _LSA08_Init
                          _brushless
                      _lcd_clear_msg
                           _delay_ms
                               _beep
                     _line_following
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     663
                                              4 BANK0      2     2      0
                          _set_lcd_e
                      _send_lcd_data
                            _lcd_clr
 ---------------------------------------------------------------------------------
 (1) _LSA08_Init                                           0     0      0     753
                          _UART_INIT
                _LSA08_ClearJunction
                     _LSA08_UARTMode
 ---------------------------------------------------------------------------------
 (2) _UART_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LSA08_UARTMode                                       4     4      0     409
                                             11 BANK0      4     4      0
                        _SEND_PACKET
 ---------------------------------------------------------------------------------
 (1) _mc40se_init                                          0     0      0      31
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _relay_off_all                                        0     0      0      31
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _line_following                                       3     3      0    5705
                                             17 BANK0      3     3      0
                            _forward
                      _lcd_clear_msg
                           _delay_ms
                               _beep
                  _line_follow_cross
                          _brushless
                    _LSA08_GetSensor
 ---------------------------------------------------------------------------------
 (2) _beep                                                 1     1      0      62
                                              2 BANK0      1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             4     2      2      31
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _forward                                              0     0      0       0
                                _run
 ---------------------------------------------------------------------------------
 (2) _line_follow_cross                                    4     4      0    3751
                                             13 BANK0      4     4      0
                          _brushless
                                 _LF
                  _LSA08_GetJunction
                _LSA08_ClearJunction
 ---------------------------------------------------------------------------------
 (3) _LSA08_ClearJunction                                  2     2      0     344
                                             11 BANK0      2     2      0
                        _SEND_PACKET
 ---------------------------------------------------------------------------------
 (3) _LSA08_GetJunction                                    1     1      0     344
                                             11 BANK0      1     1      0
                        _SEND_PACKET
 ---------------------------------------------------------------------------------
 (4) _SEND_PACKET                                          5     2      3     344
                                              6 BANK0      5     2      3
                          _UART_SEND
                      _UART_RESPONSE
 ---------------------------------------------------------------------------------
 (5) _UART_RESPONSE                                        2     2      0     105
                                              5 COMMON     1     1      0
                                              5 BANK0      1     1      0
                           _UART_REC
 ---------------------------------------------------------------------------------
 (5) _UART_SEND                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LF                                                   2     2      0    2397
                                              9 BANK0      2     2      0
                          _UART_DUMP
                    _LSA08_GetSensor
                          _brushless
                      _lcd_clear_msg
 ---------------------------------------------------------------------------------
 (4) _lcd_clear_msg                                        1     1      0    1137
                                              8 BANK0      1     1      0
                            _lcd_clr
                         _lcd_putstr
 ---------------------------------------------------------------------------------
 (5) _lcd_clr                                              0     0      0     316
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (5) _lcd_putstr                                           2     2      0     790
                                              6 BANK0      2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (6) _lcd_2ndline                                          1     1      0     316
                                              4 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (6) _lcd_putchar                                          2     2      0     347
                                              4 BANK0      2     2      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (7) _send_lcd_data                                        5     4      1     316
                                              5 COMMON     1     0      1
                                              0 BANK0      4     4      0
                         _set_lcd_rs
                       _set_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (8) _set_lcd_e                                            1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _set_lcd_rs                                           1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _set_lcd_data                                         1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LSA08_GetSensor                                      2     2      0     185
                                              6 BANK0      2     2      0
                           _UART_REC
                          _UART_DUMP
 ---------------------------------------------------------------------------------
 (3) _UART_DUMP                                            2     2      0      77
                                              5 COMMON     1     1      0
                                              5 BANK0      1     1      0
                           _UART_REC
 ---------------------------------------------------------------------------------
 (4) _UART_REC                                             6     6      0      74
                                              4 COMMON     1     1      0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _brushless                                            7     3      4     496
                                              2 BANK0      7     3      4
                           _set_pwm1
                           _set_pwm2
 ---------------------------------------------------------------------------------
 (3) _set_pwm1                                             4     2      2      62
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _set_pwm2                                             4     2      2      62
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _run                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
                         _timer1_isr
 ---------------------------------------------------------------------------------
 (10) _timer1_isr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mc40se_init
     _delay_ms
   _pwm_init
   _relay_off_all
     _delay_ms
   _adc_init
   _timer1_init
   _lcd_init
     _set_lcd_e
     _send_lcd_data
       _set_lcd_rs
       _set_lcd_data
       _set_lcd_e
     _lcd_clr
       _send_lcd_data
         _set_lcd_rs
         _set_lcd_data
         _set_lcd_e
   _LSA08_Init
     _UART_INIT
     _LSA08_ClearJunction
       _SEND_PACKET
         _UART_SEND
         _UART_RESPONSE
           _UART_REC
     _LSA08_UARTMode
       _SEND_PACKET
         _UART_SEND
         _UART_RESPONSE
           _UART_REC
   _brushless
     _set_pwm1
     _set_pwm2
   _lcd_clear_msg
     _lcd_clr
       _send_lcd_data
         _set_lcd_rs
         _set_lcd_data
         _set_lcd_e
     _lcd_putstr
       _lcd_2ndline
         _send_lcd_data
           _set_lcd_rs
           _set_lcd_data
           _set_lcd_e
       _lcd_putchar
         _send_lcd_data
           _set_lcd_rs
           _set_lcd_data
           _set_lcd_e
   _delay_ms
   _beep
     _delay_ms
   _line_following
     _forward
       _run
     _lcd_clear_msg
       _lcd_clr
         _send_lcd_data
           _set_lcd_rs
           _set_lcd_data
           _set_lcd_e
       _lcd_putstr
         _lcd_2ndline
           _send_lcd_data
             _set_lcd_rs
             _set_lcd_data
             _set_lcd_e
         _lcd_putchar
           _send_lcd_data
             _set_lcd_rs
             _set_lcd_data
             _set_lcd_e
     _delay_ms
     _beep
       _delay_ms
     _line_follow_cross
       _brushless
         _set_pwm1
         _set_pwm2
       _LF
         _UART_DUMP
           _UART_REC
         _LSA08_GetSensor
           _UART_REC
           _UART_DUMP
             _UART_REC
         _brushless
           _set_pwm1
           _set_pwm2
         _lcd_clear_msg
           _lcd_clr
             _send_lcd_data
               _set_lcd_rs
               _set_lcd_data
               _set_lcd_e
           _lcd_putstr
             _lcd_2ndline
               _send_lcd_data
                 _set_lcd_rs
                 _set_lcd_data
                 _set_lcd_e
             _lcd_putchar
               _send_lcd_data
                 _set_lcd_rs
                 _set_lcd_data
                 _set_lcd_e
       _LSA08_GetJunction
         _SEND_PACKET
           _UART_SEND
           _UART_RESPONSE
             _UART_REC
       _LSA08_ClearJunction
         _SEND_PACKET
           _UART_SEND
           _UART_RESPONSE
             _UART_REC
     _brushless
       _set_pwm1
       _set_pwm2
     _LSA08_GetSensor
       _UART_REC
       _UART_DUMP
         _UART_REC

 _isr (ROOT)
   _timer1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3C      12        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       C       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.11 build 48931 
Symbol Table                                                                                   Thu Jan 10 15:37:26 2013

                   ?_LSA08_Init 0070     __end_of_LSA08_ClearJunction 0FC4                               pc 0002  
                  ?_lcd_putchar 0070                              l59 0789                              l96 0581  
                            _LF 0015                              l99 0F3C                              fsr 0004  
                           ?_LF 0070                             l111 0F6F                             l120 0626  
                           l105 0F61                             l121 0626                             l114 0619  
                           l115 05E4                             l140 0F54                             l116 0603  
                           l132 07FF                             l118 05FD                             l310 06F2  
                           l143 0F48                             l135 02E6                             l119 0612  
                           l136 0316                             l400 01DD                             l137 031A  
                           l401 01DD                             l146 0F2B                             l402 01E4  
                           l403 0249                             l500 05C2                             l420 041A  
                           l412 03FA                             l332 073D                             l340 06B1  
                           l404 01F7                             l501 05DB                             l421 042C  
                           l413 03DD                             l333 0732                             l341 06B1  
                           l405 0239                             l309 06DF                             l350 0349  
                           l502 05D1                             l510 0FEA                             l270 065B  
                           l422 042C                             l414 03E3                             l334 074E  
                           l406 0238                             l326 0511                             l351 0353  
                           l503 05CC                             l511 0FEA                             l271 0658  
                           l415 03F9                             l335 074E                             l407 0244  
                           l327 0511                             l360 03A8                             l352 035C  
                           l504 05D5                             l272 0654                             l416 0403  
                           l408 024F                             l344 06D3                             l280 0FFF  
                           l328 0512                             l361 03A7                             l353 035B  
                           l505 05DF                             l273 0657                             l417 0405  
                           l425 0F88                             l409 026C                             l329 0512  
                           l354 03B5                             l362 03B5                             l274 065B  
                           l418 0404                             l426 0F8B                             l338 06A6  
                           l355 03B4                             l347 0368                             l283 0753  
                           l291 0FC3                             l419 040F                             l427 0F8B  
                           l339 068F                             l356 0377                             l348 032B  
                           l508 0FE3                             l284 0762                             l460 006B  
                           l612 0FD6                             l357 0396                             l349 034A  
                           l509 0FD8                             l285 076C                             l461 01B1  
                           l269 063C                             l277 068A                             l358 0395  
                           l470 0120                             l462 00BE                             l454 005C  
                           l359 039F                             l448 0F23                             l480 0160  
                           l472 00FE                             l464 009C                             l456 003A  
                           l288 0FB0                             l561 0711                             l457 01B2  
                           l465 01B0                             l473 01AE                             l481 01AC  
                           l482 01AB                             l474 0151                             l466 00EF  
                           l458 008D                             l490 0F72                             l394 0F9D  
                           l483 01B2                             l491 0F79                             l564 0730  
                           l476 012F                             l468 00CD                             l492 0F7D  
                           l469 01AF                             l477 01AD                             l397 01CC  
                           l478 0182                             l398 01CC                             l558 07BF  
                           l486 07D7                             l495 0597                             l399 01D3  
                           l496 05DF                             l497 05BD                             l489 0F72  
                           l498 0598                             l499 05BD                             _GIE 005F  
                           _RB0 0030                             _RA2 002A                             _RD0 0040  
                           _RA6 002E                             _RC3 003B                             _RA7 002F  
                           _RE0 0048                             _RC4 003C                             _RE1 0049  
                           _RC5 003D                             _RB7 0037                             _RE2 004A  
                           _PR2 0092           set_pwm1@ui_duty_cycle 0074                             _rec 0076  
                           _isr 07D8                             fsr0 0004                             _run 0F1F  
                           indf 0000               set_lcd_e@b_output 0074                            ??_LF 0029  
                  __CFG_LVP$OFF 0000                            l1206 076D                            l3000 0368  
                          l3010 037F                            l3002 0370                            l3020 03A5  
                          l3012 0388                            l3004 0375                            l3022 03A8  
                          l3014 0396                            l3006 0377                            l2142 0F71  
                          l3030 0690                            l1430 07C0                            l3016 039D  
                          l3008 037D                            l3200 00E8                            l2144 0F79  
                          l3024 0731                            l3032 0699                            l3040 01BC  
                          l1600 07B9                            l1440 07D4                            l1432 07C9  
                          l3018 039F                            l3210 0120                            l3202 00EF  
                          l3026 0732                            l3034 06A6                            l3050 01F0  
                          l3042 01C2                            l1610 07BE                            l1602 07BA  
                          l1434 07CD                            l3220 0159                            l3212 0128  
                          l3204 00F7                            l3140 03BB                            l3028 068E  
                          l3060 0212                            l3052 01F7                            l3044 01D3  
                          l3036 01B3                            l1604 07BB                            l1436 07CE  
                          l3230 01A4                            l3222 0160                            l3214 012F  
                          l3206 00FE                            l3142 03DD                            l3150 03FA  
                          l3062 0220                            l3054 01FD                            l3070 0249  
                          l3046 01E4                            l3038 01B7                            l1630 0FCB  
                          l1622 0FC4                            l1606 07BC                            l1438 07D1  
                          l3224 017B                            l3216 014A                            l3208 0119  
                          l3160 041F                            l3152 0405                            l3144 03E3  
                          l3072 024F                            l3064 022E                            l3056 0203  
                          l3048 01EA                            l1640 0FD2                            l1632 0FCC  
                          l1624 0FC8                            l1608 07BD                            l3074 06F3  
                          l3226 0182                            l3218 0151                            l3170 002D  
                          l3162 0425                            l3154 0412                            l3146 03ED  
                          l3138 03B9                            l3066 0239                            l3058 020C  
                          l1642 0FD3                            l1634 0FCD                            l1626 0FC9  
                          l3076 0712                            l2700 02FA                            l3228 0189  
                          l3180 0064                            l3172 0033                            l3164 0015  
                          l3156 0419                            l3148 03F2                            l3068 0244  
                          l1636 0FCE                            l1628 0FCA                            l1580 07AF  
                          l1572 07A6                            l2702 0305                            l3190 009C  
                          l3182 006B                            l3174 003A                            l3166 0018  
                          l3158 041A                            l2462 0F7E                            l1638 0FD1  
                          l1590 07B4                            l1582 07B0                            l1574 07AA  
                          l2800 0594                            l2712 0F65                            l2720 05FD  
                          l2704 0F34                            l3192 00B7                            l3184 0086  
                          l3176 0055                            l3168 0027                            l2464 0F83  
                          l1592 07B5                            l1584 07B1                            l1576 07AD  
                          l2562 0F1F                            l2810 05BC                            l2802 0596  
                          l2722 0603                            l2714 05E3                            l3194 00BE  
                          l3186 008D                            l3178 005C                            l2466 0F86  
                          l1594 07B6                            l1586 07B2                            l1578 07AE  
                          l2820 05D1                            l2812 05C2                            l2804 0598  
                          l2708 0F55                            l2724 0612                            l2716 05E4  
                          l3196 00C6                            l3188 0095                            l1596 07B7  
                          l1588 07B3                            l2660 0532                            l2652 0515  
                          l2830 05DE                            l2822 05D7                            l2814 05C6  
                          l2806 05B8                            l2718 05F0                            l2726 0619  
                          l3198 00CD                            l1598 07B8                            l2670 0564  
                          l2662 053E                            l2654 051B                            l2824 05D9  
                          l2816 05CB                            l2808 05BA                            l2680 0271  
                          l2760 07F2                            l2832 065F                            l2840 0FF0  
                          l2672 0570                            l2664 054A                            l2656 0525  
                          l2920 04A3                            l2826 05DA                            l2818 05CC  
                          l2690 02B2                            l2682 027B                            l2762 07F7  
                          l2770 0632                            l2834 0681                            l2850 06DD  
                          l2842 0FFF                            l2674 057C                            l2666 0556  
                          l2658 0526                            l2930 04F4                            l2922 04B2  
                          l2828 05DC                            l2860 075D                            l2764 0F3E  
                          l2676 0F4A                            l2692 02C3                            l2684 028E  
                          l2780 0650                            l2772 063B                            l2836 068A  
                          l2844 0FB1                            l2940 06B2                            l2852 06DF  
                          l2668 0558                            l2932 04FA                            l2924 04B7  
                          l2870 0FD8                            l2862 0763                            l2766 0F25  
                          l2694 02C9                            l2686 0299                            l2678 0270  
                          l2782 0652                            l2790 0658                            l2774 063C  
                          l2846 0FC3                            l2950 06C6                            l2942 06B6  
                          l2854 06F2                            l2838 0FEB                            l2934 0500  
                          l2926 04E5                            l2872 0FE3                            l2864 0768  
                          l2856 074F                            l2696 02DA                            l2688 02AA  
                          l2792 065A                            l2784 0653                            l2776 0644  
                          l2768 062A                            l2960 06CF                            l2952 06C7  
                          l2944 06BF                            l2848 06D7                            l2936 0505  
                          l2928 04EB                            l2794 0582                            l2866 076C  
                          l2858 0753                            l2698 02E6                            l2786 0654  
                          l2778 064A                            l2874 0F9E                            l2970 0F90  
                          l2962 06D1                            l2954 06C8                            l2946 06C2  
                          l2938 050B                            l2980 0329                            l2796 058C  
                          l2868 0FD7                            l2788 0656                            l2876 0FAE  
                          l2972 0F91                            l2964 06D2                            l2956 06C9  
                          l2948 06C5                            l2990 034A                            l2982 032B  
                          l2798 0590                            l2878 0FB0                            l2974 0F9A  
                          l2966 0F8C                            l2958 06CD                            l2992 0351  
                          l2984 0331                            l2976 031E                            l2968 0F8F  
                          l2994 0353                            l2986 0333                            l2978 0324  
                          l2996 0359                            l2988 033C                            l2998 035C  
                          _ADFM 04FF                            ?_isr 0070                            _ADON 00F8  
                          _P1M0 00BE                            _CHS0 00FA                            _P1M1 00BF  
                          _CHS1 00FB                            _CHS2 00FC                            _CHS3 00FD  
                          _ANS0 0C40                            STR_1 0433                            _ANS1 0C41  
                          ?_run 0070                            STR_2 0450                            _ANS2 0C42  
                          STR_3 0498                            _ANS3 0C43                            STR_4 0442  
                          _ANS4 0C44                            STR_5 0451                            _ANS5 0C45  
                          STR_6 049E                            _ANS6 0C46                            STR_7 0470  
                          _ANS7 0C47                            STR_8 0489                            _ANS8 0C48  
                          STR_9 045E                            _ANS9 0C49                            _FERR 00C2  
                          u2000 064A                            u2001 0649                            u2010 0650  
                          u2011 064F                            u2020 0590                            u2021 058F  
                          u2030 05B8                            u2031 05B7                            u2200 0375  
                          u2040 05C1                            u2201 0374                            u2041 05C0  
                          u2210 037D                            u2050 05CA                            u1090 0F78  
                          u2211 037C                            u2051 05C9                            u2035 05B4  
                          u1091 0F77                            u2220 039D                            u2140 0324  
                          u2060 05D5                            u2221 039C                            u2141 0323  
                          u2061 05D4                            u2230 03A5                            u2150 0329  
                          u2070 06DD                            u2231 03A4                            u2151 0328  
                          u2071 06DC                            u2160 0331                            u2080 0762  
                          u2240 074D                            u2305 06F8                            u2161 0330  
                          u2081 0761                            u2241 074C                            u2170 0351  
                          u2090 0FE9                            u2250 06B0                            u2315 0709  
                          u2171 0350                            u2091 0FE8                            u2251 06AF  
                          u2180 0359                            u2500 0402                            u2260 01D2  
                          u2325 0717                            u2181 0358                            u2501 0401  
                          u2245 0749                            u2261 01D1                            u2190 0370  
                          u2510 040F                            u2270 01E3                            u2335 0728  
                          u2191 036F                            u2511 040E                            u2271 01E2  
                          u2600 009B                            u2520 0418                            u2280 0243  
                          u2601 009A                            u2521 0417                            u2281 0242  
                          u2610 00C6                            u2530 042B                            u2290 024E  
                          u2611 00C5                            u2531 042A                            u2291 024D  
                          u1900 05F0                            u2620 00CC                            u2540 002D  
                          u1901 05EF                            u2621 00CB                            u2541 002C  
                          u1910 05FC                            u2630 00F7                            u2550 0033  
                          u1911 05FB                            u2631 00F6                            u2551 0032  
                          u1920 0625                            u2640 00FD                            u2560 0039  
                          u2480 03F2                            u1921 0624                            u2641 00FC  
                          u2561 0038                            u2481 03F1                            u2650 0128  
                          u2570 0064                            u2490 03F8                            u2651 0127  
                          u2571 0063                            u2491 03F7                            u2707 0521  
                          u1860 0F51                            u2660 012E                            u2580 006A  
                          u1861 0F4D                            u2661 012D                            u2581 0069  
                          u2717 0738                            u2670 0159                            u2590 0095  
                          u2807 0383                            u2727 0294                            u2671 0158  
                          u2591 0094                            u1880 027B                            u2680 015F  
                          u2817 038F                            u2737 02A5                            u1881 027A  
                          u2681 015E                            u1970 0F45                            u1874 0F54  
                          u2690 0189                            u1971 0F41                            u2747 02CF  
                          u2691 0188                            _PEIE 005E                            u2757 02E0  
                          u1990 063A                            u2767 0300                            u1895 02B7  
                          u1991 0639                            u1984 0F48                            u2777 0311  
                          u2787 0337                            _RCIF 0065                            u2797 0343  
                          i1l72 07E2                            i1l73 07E2                            _TRMT 04C1  
              ?_LSA08_GetSensor 0070                            _beep 068B                            _main 04A3  
                          btemp 007E                            start 0012                           ??_isr 0070  
                         ??_run 0074                 ??_lcd_clear_msg 0076                SEND_PACKET@value 0027  
                         ?_beep 0070                           _DC1B0 00BC                           _DC1B1 00BD  
                         _ADCS0 00FE                           _ADCS1 00FF                           ?_main 0070  
                         _CCP2X 00ED                           _CCP2Y 00EC                           STR_10 0467  
                         _ANS10 0C4A                           STR_11 0491                           _ANS11 0C4B  
                         STR_12 0479                           _ANS12 0C4C                           STR_13 0481  
                         _ANS13 0C4D                           STR_14 0467                   __CFG_WDTE$OFF 0000  
                         i1l621 0F1E                           _VCFG0 04FC                           _VCFG1 04FD  
                         _RCREG 001A                           _TMR1H 000F                           _TMR1L 000E  
                         _SPBRG 0099                           _PORTA 0005                           _PORTB 0006  
                         _PORTC 0007                           _PORTD 0008                           _PORTE 0009  
                         _TRISA 0085                           _TRISB 0086                           _TRISC 0087  
                         _TRISD 0088                           _TRISE 0089                           u87_20 07DC  
                         u87_21 07DB                           _TXREG 0019              __size_of_UART_DUMP 0014  
          send_lcd_data@uc_data 0075              __size_of_UART_INIT 0018              __size_of_UART_SEND 000E  
                 __CFG_PWRTE$ON 0000                __end_of_UART_REC 05E0                 __end_of_lcd_clr 0F3D  
               __end_of_forward 0F8C             __size_of_LSA08_Init 0015                  __CFG_BOREN$OFF 0000  
                         pclath 000A           __end_of_relay_off_all 0F9E                           status 0003  
                         wtemp0 007E                    ?_SEND_PACKET 0026               UART_REC@waitcount 0020  
               __initialization 078A               send_lcd_data@b_rs 0023                    __end_of_beep 06B2  
                  __end_of_main 0515            __size_of_lcd_2ndline 000D           __end_of_send_lcd_data 031B  
                        ??_beep 0076                          ??_main 0076                          _CCP1M0 00B8  
                        _CCP1M1 00B9                          _CCP1M2 00BA                          _CCP1M3 00BB  
                        _CCP2M0 00E8                          _CCP2M1 00E9                          _CCP2M2 00EA  
                        _CCP2M3 00EB                          _ADRESH 001E                          _ADRESL 009E  
                        _CCPR1L 0015                          _CCPR2L 001B                __end_of_adc_init 078A  
                        i1l1228 0F1A                          i1l1936 07D8                          i1l1938 07DC  
                        _T1SYNC 0082                          _OSCCON 008F           __end_of_UART_RESPONSE 065C  
                        _TMR1IE 0460                          _TMR1IF 0060                          _TMR1CS 0081  
                        _SPBRGH 009A                          _TMR1ON 0080                          _TMR2ON 0092  
                        _TRISB0 0430               _LSA08_GetJunction 0F9E                __end_of_delay_ms 074F  
            ?_LSA08_GetJunction 0070               __end_of_UART_DUMP 0FEB               __end_of_UART_INIT 07D8  
             __end_of_UART_SEND 0F7E                __end_of_lcd_init 0582                    ?_timer1_init 0070  
                        _left_s 0040             ??_LSA08_GetJunction 002B            __size_of_lcd_putchar 000E  
                     ??_lcd_clr 0076                          clrloop 0F2D                    __pdataCOMMON 0079  
                     ??_forward 0074                __end_of_set_pwm1 0712                __end_of_set_pwm2 0731  
                        saved_w 007E                __end_of_pwm_init 07C0                   ??_mc40se_init 0076  
              ??_LSA08_UARTMode 002B       __end_of_LSA08_GetJunction 0FB1         __end_of__initialization 07A2  
                  ??_LSA08_Init 0076                  __pcstackCOMMON 0070                  SEND_PACKET@add 002A  
                  __pidataBANK0 0F19                       ?_UART_REC 0070                      __end_of_LF 01B3  
         set_pwm2@ui_duty_cycle 0074              __end_of_LSA08_Init 1000                      __pbssBANK0 0034  
            SEND_PACKET@com_dat 0028              SEND_PACKET@command 0026              __size_of_brushless 009B  
           __end_of_mc40se_init 06D4                      __pmaintext 04A3            __size_of_SEND_PACKET 002F  
                    ??_UART_REC 0074                      __pintentry 0004                         _CCP1CON 0017  
                       _CCP2CON 001D                      __ptext1300 026D                      __ptext1301 0F49  
                    __ptext1310 0F1F                      __ptext1302 0F3D                      __ptext1311 07D8  
                    __ptext1303 0F24                      __ptext1312 0F1A                      __ptext1304 074F  
                    __ptext1313 0000                      __ptext1305 0FD7                      __ptext1306 0582  
                    __ptext1307 031B                      __ptext1308 06F3                      __ptext1309 0712  
                    __ptext1280 06B2                      __ptext1281 07A6                      __ptext1290 0F9E  
                    __ptext1282 0F8C                      __ptext1291 065C                      __ptext1283 0FC4  
                    __ptext1275 076D                      __ptext1292 0627                      __ptext1284 01B3  
                    __ptext1276 0515                      __ptext1293 0F70                      __ptext1285 068B  
                    __ptext1277 0FEB                      __ptext1294 0015                      __ptext1286 0731  
                    __ptext1278 07C0                      __ptext1295 07EF                      __ptext1287 0F7E  
                    __ptext1279 06D4                      __ptext1296 0F34                      __ptext1288 03B6  
                    __ptext1297 05E0                      __ptext1289 0FB1                      __ptext1298 0F55  
                    __ptext1299 0F62           brushless@uc_motor_dir 0023              __size_of_set_lcd_e 000C  
                     ?_adc_init 0070                         _T1CKPS0 0084                         _T1CKPS1 0085  
                       _T2CKPS0 0090                         _T2CKPS1 0091    __size_of_LSA08_ClearJunction 0013  
                       _T1OSCEN 0083                         _GO_DONE 00F9                       ?_delay_ms 0074  
                    _lcd_putstr 05E0                       ?_lcd_init 0070               _b_4_bits_data_bus 0079  
                    __stringtab 042D      __size_of_LSA08_GetJunction 0013                   ?_set_lcd_data 0070  
              delay_ms@ui_value 0074                       ?_set_pwm1 0074                       ?_set_pwm2 0074  
       __size_of_line_following 00BA        __size_of_LSA08_GetSensor 001E                       ?_pwm_init 0070  
line_follow_cross@current_cross 002F           __end_of_lcd_clear_msg 0800                      ??_adc_init 0074  
          __size_of_timer1_init 0013                         _lcd_clr 0F34                         _encoder 003E  
             __end_of_brushless 03B6                         _forward 0F7E                    __size_of_isr 0017  
                  __size_of_run 0005                       _LSA08_ADD 0045                      ??_delay_ms 0020  
                       _right_s 0042          UART_RESPONSE@rec_bytes 0025                      ??_lcd_init 0024  
                  beep@uc_count 0022            end_of_initialization 07A2         brushless@uc_port_number 0028  
                   _mc40se_init 06B2                  ??_set_lcd_data 0074               __end_of_set_lcd_e 0F55  
            LSA08_UARTMode@mode 002E                      _set_lcd_rs 0F3D                      ??_set_pwm1 0020  
                    ??_set_pwm2 0020                   ??_lcd_2ndline 0024                       _RCSTAbits 0018  
                    _timer1_isr 0F1A                      ??_pwm_init 0074                       _UART_DUMP 0FD7  
                     _UART_INIT 07C0                       _UART_SEND 0F70           line_follow_cross@wait 0030  
       lcd_clear_msg@csz_string 0028          __size_of_relay_off_all 0012                       _TRISCbits 0087  
                   ?_lcd_putstr 0070          __size_of_send_lcd_data 00AE                       _TXSTAbits 0098  
                 ??_lcd_putchar 0024                      ?_UART_DUMP 0070                      ?_UART_INIT 0070  
                    ?_UART_SEND 0070                UART_REC@rec_data 0024               __size_of_UART_REC 005E  
                 __pidataCOMMON 0003                     _BAUDCTLbits 0187                   UART_DUMP@dump 0025  
             lcd_putchar@c_data 0025             __end_of_lcd_2ndline 0F62               ??_LSA08_GetSensor 0026  
        __size_of_UART_RESPONSE 0035             start_initialization 078A              set_lcd_rs@b_output 0074  
                   __end_of_isr 07EF                     __end_of_run 0F24            lcd_putstr@csz_string 0027  
                 UART_SEND@data 0074                   _relay_off_all 0F8C             _LSA08_ClearJunction 0FB1  
      __CFG_FOSC$INTRC_NOCLKOUT 0000                     ?_set_lcd_rs 0070                  _line_following 01B3  
                   ?_timer1_isr 0070                     __pdataBANK0 0045             __size_of_lcd_putstr 0047  
                 _send_lcd_data 026D                        LF@UARTRC 002A            __end_of_set_lcd_data 0F2C  
          ?_LSA08_ClearJunction 0070             __end_of_lcd_putchar 0F70               __size_of_adc_init 001D  
                   __pbssCOMMON 0076                   __pcstackBANK0 0020             __end_of__stringdata 04A3  
             __size_of_delay_ms 001E               __size_of_lcd_init 006D             line_following@times 0033  
                ?_relay_off_all 0070                   _UART_RESPONSE 0627                   ??_SEND_PACKET 0029  
        __end_of_line_following 026D                       _different 0078         __size_of_LSA08_UARTMode 001F  
                   _lcd_2ndline 0F55    line_follow_cross@cross_count 002E               __size_of_set_pwm1 001F  
             __size_of_set_pwm2 001F                     ??_UART_DUMP 0075                     ??_UART_INIT 0074  
                   ??_UART_SEND 0074                  ?_send_lcd_data 0075                       __pstrings 042D  
             __size_of_pwm_init 001A           ??_LSA08_ClearJunction 002B                        ?_lcd_clr 0070  
                      ?_forward 0070                       _brushless 031B             __size_of_set_lcd_rs 000C  
           set_lcd_data@uc_data 0074             __size_of_timer1_isr 0005                     __size_of_LF 019E  
                  ?_mc40se_init 0070                  ?_UART_RESPONSE 0070               interrupt_function 0004  
                      _ERR_FLAG 0044                 ?_line_following 0070                       _set_lcd_e 0F49  
                      _UART_REC 0582                   ??_timer1_init 0074             __end_of_SEND_PACKET 068B  
                   _lcd_putchar 0F62                     __stringbase 0432                     __stringdata 0433  
     send_lcd_data@uc_pre_portd 0022                      ?_brushless 0022                    ??_lcd_putstr 0026  
               ??_relay_off_all 0076          __size_of_lcd_clear_msg 0011               _line_follow_cross 03B6  
                    ?_set_lcd_e 0070                 _LSA08_GetSensor 074F              ?_line_follow_cross 0070  
         __size_of_set_lcd_data 0008                 ??_send_lcd_data 0020        brushless@uc_motor_status 0022  
            __end_of_lcd_putstr 0627             ??_line_follow_cross 002D              __end_of__stringtab 0433  
                      _adc_init 076D                      _ANSELHbits 0189                __size_of_lcd_clr 0009  
           __end_of_timer1_init 0FD7                __size_of_forward 000E                        _delay_ms 0731  
             brushless@ui_speed 0024                        _lcd_init 0515                 ??_UART_RESPONSE 0075  
     __end_of_line_follow_cross 042D                   __size_of_beep 0027                   __size_of_main 0072  
                  _set_lcd_data 0F24                     _SEND_PACKET 065C                        clear_ram 0F2C  
                  ??_set_lcd_rs 0074        LSA08_GetSensor@sensorbin 0027                        _set_pwm1 06F3  
                      _set_pwm2 0712                  _LSA08_UARTMode 06D4                      _LSA08_Init 0FEB  
                  ??_timer1_isr 0070                        _pwm_init 07A6                   _lcd_clear_msg 07EF  
                   ??_brushless 0026              __end_of_set_lcd_rs 0F49                        intlevel1 0000  
             line_following@cou 0032              __end_of_timer1_isr 0F1F         __end_of_LSA08_GetSensor 076D  
          __size_of_mc40se_init 0022          __end_of_LSA08_UARTMode 06F3                       stringcode 042D  
                   ??_set_lcd_e 0074                    ?_lcd_2ndline 0070                     _timer1_init 0FC4  
                ?_lcd_clear_msg 0070                    lcd_bcd@F1675 0034                        stringdir 042D  
                      stringtab 042D                ??_line_following 0031      __size_of_line_follow_cross 0077  
               ?_LSA08_UARTMode 0070  
